{
  "address": "0x69E096E547831dD7447285E2DB030EB37eeB7ceC",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_classVestingStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_classFee",
          "type": "uint256"
        }
      ],
      "name": "addClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingDurations",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classVestingStartTime",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classFee",
          "type": "uint256[]"
        }
      ],
      "name": "addClassBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_classVestingStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_classFee",
          "type": "uint256"
        }
      ],
      "name": "changeClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "classes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classVestingStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classFundingCollected",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeClaimedForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "class",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_vestingDuration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_vestingCliff",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        }
      ],
      "name": "setClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "setClassBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCliff",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "whitelistBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1df0d34b26413814ac0f8701c0549d6565a40e275fb9221a8eabf9fd7f118776",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x69E096E547831dD7447285E2DB030EB37eeB7ceC",
    "transactionIndex": 1,
    "gasUsed": "3568575",
    "logsBloom": "0x
    "blockHash": "0xed99ce0890b6e37682929fad8c0d5d6ec0edb7e0a2cf8ef07aa108871350ee15",
    "transactionHash": "0x1df0d34b26413814ac0f8701c0549d6565a40e275fb9221a8eabf9fd7f118776",
    "logs": [],
    "blockNumber": 14653871,
    "cumulativeGasUsed": "3661358",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "394156361973b0983f5898fbd2266061",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_classVestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_classFee\",\"type\":\"uint256\"}],\"name\":\"addClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classVestingStartTime\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classFee\",\"type\":\"uint256[]\"}],\"name\":\"addClassBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_classVestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_classFee\",\"type\":\"uint256\"}],\"name\":\"changeClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"classes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classVestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classFundingCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeClaimedForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"}],\"name\":\"setClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"setClassBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"addClass(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Add contributor class.\",\"params\":{\"_classCap\":\"The total cap of the contributor class.\",\"_classFee\":\"The fee for the contributor class.\",\"_classVestingStartTime\":\"The class vesting start time for the contributor class.\",\"_individualCap\":\"The personal cap of each contributor in this class.\",\"_price\":\"The token price for the addresses in this clas.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"addClassBatch(uint256[],uint256[],uint256[],uint256[],uint256[],uint256[])\":{\"details\":\"Add contributor class batch.\",\"params\":{\"_classCaps\":\"The total caps of the contributor class.\",\"_classFee\":\"The fee for the contributor class.\",\"_classVestingStartTime\":\"The class vesting start time for the contributor class.\",\"_individualCaps\":\"The personal caps of each contributor in this class.\",\"_prices\":\"The token prices for the addresses in this clas.\",\"_vestingDurations\":\"The vesting durations for this contributors class.\"}},\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"changeClass(uint8,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Change parameters in the class.\",\"params\":{\"_class\":\"Class for changing.\",\"_classCap\":\"The total cap of the contributor class.\",\"_classFee\":\"The fee for the contributor class.\",\"_classVestingStartTime\":\"The class vesting start time for the contributor class.\",\"_individualCap\":\"The personal cap of each contributor in this class.\",\"_price\":\"The token price for the addresses in this clas.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist.\"},\"feeClaimedForFunder(address)\":{\"details\":\"get fee claimed for funder\",\"params\":{\"_funder\":\"address of funder to check fee claimed\"}},\"feeForFunder(address)\":{\"details\":\"get fee for funder\",\"params\":{\"_funder\":\"address of funder to check fee\"}},\"initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.\",\"_vestingCliff\":\"Cliff duration in seconds.\",\"_vestingDuration\":\"Vesting period duration in seconds.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"setClass(address,uint8)\":{\"details\":\"Set contributor class.\",\"params\":{\"_address\":\"Address of the contributor.\",\"_class\":\"Class of the contributor.\"}},\"setClassBatch(address[],uint8[])\":{\"details\":\"Set contributor classes.\",\"params\":{\"_addresses\":\"Addresses of the contributors.\",\"_classes\":\"Classes of the contributor.\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address,uint8)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\",\"_class\":\"Class to which buyer will be assigned\"}},\"whitelistBatch(address[],uint8[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\",\"_classes\":\"Array of classes assigned in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0\\n// PrimeDAO Seed contract. Smart contract for seed phases of liquid launch.\\n// Copyright (C) 2021 PrimeDao\\n\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.9;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\\\";\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    using SafeERC20 for IERC20;\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution\\n    uint256 public feeAmountRequired; // Amount of seed required for fee\\n    uint256 public startTime;\\n    uint256 public endTime; // set by project admin, this is the last resort endTime to be applied when\\n    //     maximumReached has not been reached by then\\n    bool public permissionedSeed;\\n    uint32 public vestingCliff;\\n    IERC20 public seedToken;\\n    IERC20 public fundingToken;\\n    bytes public metadata; // IPFS Hash\\n\\n    uint256 internal constant MAX_FEE = 45 / 100 * 10**18; // Max fee expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee)\\n    uint256 internal constant PRECISION = 10**18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool public closed; // is the distribution closed\\n    bool public paused; // is the distribution paused\\n    bool public isFunded; // distribution can only start when required seed tokens have been funded\\n    bool public initialized; // is this contract initialized [not necessary that it is funded]\\n    bool public minimumReached; // if the softCap[minimum limit of funding token] is reached\\n    bool public maximumReached; // if the hardCap[maximum limit of funding token] is reached\\n\\n    uint256 public totalFunderCount; // Total funders that have contributed.\\n    uint256 public seedRemainder; // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed; // Amount of seed token claimed by the user.\\n    uint256 public feeRemainder; // Amount of seed tokens remaining for the fee\\n    uint256 public fundingCollected; // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn; // Amount of funding token withdrawn from the seed contract.\\n    uint256 public feeClaimed; //Amount of all fee claimed when the seed was claimed.\\n\\n    uint256 private minimalPrice;\\n    uint256 private fee;\\n\\n    ContributorClass[] public classes; // Array of contributor classes\\n\\n    mapping(address => bool) public whitelisted; // funders that are whitelisted and allowed to contribute\\n    mapping(address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\n    event TokensClaimed(\\n        address indexed recipient,\\n        uint256 amount,\\n        address indexed beneficiary,\\n        uint256 feeAmount\\n    );\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    struct FunderPortfolio {\\n        uint8   class; // Contibutor class id\\n        uint256 totalClaimed; // Total amount of seed tokens claimed\\n        uint256 fundingAmount; // Total amount of funding tokens contributed\\n    }\\n\\n    struct ContributorClass {\\n        uint256 classCap; // Amount of tokens that can be donated for class\\n        uint256 individualCap; // Amount of tokens that can be donated by specific contributor\\n        uint256 price; // Price of seed tokens for class, expressed in fundingTokens, with precision of 10**18\\n        uint256 vestingDuration; // Vesting duration for class\\n        uint256 classVestingStartTime;\\n        uint256 classFee; // Fee of class\\n        uint256 classFundingCollected; // Total amount of staked tokens        \\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    modifier classRestriction(uint256 _classVestingStartTime, uint256 _classFee, uint256 _classCap) {\\n        require(\\n            endTime < _classVestingStartTime,\\n            \\\"Seed: vesting start time can't be less than endTime\\\"\\n        );\\n        require(block.timestamp < startTime,\\n            \\\"Seed: vesting is already started\\\"\\n        );\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(\\n            _classFee < MAX_FEE,\\n            \\\"Seed: fee cannot be more than 45%\\\"\\n        );\\n        require(_classCap > 0,\\n            \\\"Seed: class Cap should be bigger then 0\\\"\\n        );\\n        _;\\n    }\\n\\n    function calculateSeedAndFee(uint256 _price, uint256 _classFee, uint256 _classCap) internal {\\n        if(_classFee > fee){\\n            fee = _classFee;\\n        }\\n        if(_price < minimalPrice){\\n            seedAmountRequired = (((hardCap - _classCap) * PRECISION) / minimalPrice)\\n                + (_classCap * PRECISION) / _price;\\n            minimalPrice = _price;\\n        }\\n        feeAmountRequired = (seedAmountRequired * fee) / PRECISION;\\n        seedRemainder = seedAmountRequired;\\n        feeRemainder = feeAmountRequired;\\n    }\\n\\n    function _addClass(\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _price,\\n        uint256 _vestingDuration,\\n        uint256 _classVestingStartTime,\\n        uint256 _classFee\\n    ) internal classRestriction(_classVestingStartTime, _classFee, _classCap){\\n        calculateSeedAndFee(_price, _classFee, _classCap);\\n\\n        // the maximum possible classCap is calculated.\\n        classes.push( ContributorClass(\\n                _classCap,\\n                _individualCap,\\n                _price,\\n                _vestingDuration,\\n                _classVestingStartTime,\\n                _classFee,\\n                0));\\n    }\\n\\n    /**\\n      * @dev                          Initialize Seed.\\n      * @param _beneficiary           The address that recieves fees.\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\n                                      and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                Array containing two params:\\n                                        - The address of the seed token being distributed.\\n      *                                 - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds    Array containing two params:\\n                                        - the minimum funding token collection threshold in wei denomination.\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                 price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTime             Distribution start time in unix timecode.\\n      * @param _endTime               Distribution end time in unix timecode.\\n      * @param _vestingDuration       Vesting period duration in seconds.\\n      * @param _vestingCliff          Cliff duration in seconds.\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _fee                   Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint32 _vestingDuration,\\n        uint32 _vestingCliff,\\n        bool _permissionedSeed,\\n        uint256 _fee\\n    ) external {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        // parameter check\\n        require(\\n            _tokens[0] != _tokens[1],\\n            \\\"SeedFactory: seedToken cannot be fundingToken\\\"\\n        );\\n        require(\\n            _softHardThresholds[1] >= _softHardThresholds[0],\\n            \\\"SeedFactory: hardCap cannot be less than softCap\\\"\\n        );\\n        require(\\n            _vestingDuration >= _vestingCliff,\\n            \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\"\\n        );\\n        require(\\n            _endTime > _startTime,\\n            \\\"SeedFactory: endTime cannot be less than equal to startTime\\\"\\n        );\\n        require(\\n            _fee < MAX_FEE,\\n            \\\"SeedFactory: fee cannot be more than 45%\\\"\\n        );\\n\\n        beneficiary = _beneficiary;\\n        admin = _admin;\\n        softCap = _softHardThresholds[0];\\n        hardCap = _softHardThresholds[1];\\n        startTime = _startTime;\\n        endTime = _endTime;\\n        uint256 vestingStartTime = endTime + 1;\\n        vestingCliff = _vestingCliff;\\n        permissionedSeed = _permissionedSeed;\\n        seedToken = IERC20(_tokens[0]);\\n        fundingToken = IERC20(_tokens[1]);\\n        fee = _fee;\\n        minimalPrice = _price;\\n        \\n        feeClaimed = 0;\\n\\n        seedAmountRequired = (hardCap * PRECISION) / _price;\\n        // (seedAmountRequired*fee) / (100*FEE_PRECISION) = (seedAmountRequired*fee) / PRECISION\\n        //  where FEE_PRECISION = 10**16\\n        feeAmountRequired = (seedAmountRequired * fee) / PRECISION;\\n        // Adding default class of contributors(specifically for non-whitelisted seed)\\n        _addClass( hardCap, hardCap, _price, _vestingDuration, vestingStartTime, _fee);\\n        seedRemainder = seedAmountRequired;\\n        feeRemainder = feeAmountRequired;\\n    }\\n\\n    /**\\n     * @dev                       Add contributor class.\\n     * @param _classCap           The total cap of the contributor class.\\n     * @param _individualCap      The personal cap of each contributor in this class.\\n     * @param _price              The token price for the addresses in this clas.\\n     * @param _vestingDuration    The vesting duration for this contributors class.\\n     * @param _classVestingStartTime The class vesting start time for the contributor class.\\n     * @param _classFee           The fee for the contributor class.\\n     */\\n    function addClass(\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _price,\\n        uint256 _vestingDuration,\\n        uint256 _classVestingStartTime,\\n        uint256 _classFee\\n    ) onlyAdmin external {\\n        require(\\n            classes.length + 1 < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n\\n        _addClass(\\n            _classCap,\\n            _individualCap,\\n            _price,\\n            _vestingDuration,\\n            _classVestingStartTime,\\n            _classFee );\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _address            Address of the contributor.\\n     * @param _class              Class of the contributor.\\n     */\\n    function setClass(\\n        address _address,\\n        uint8 _class\\n    ) onlyAdmin public {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(block.timestamp < startTime,\\n            \\\"Seed: vesting is already started\\\"\\n        );\\n        funders[_address].class = _class;\\n    }\\n\\n    /**\\n     * @dev                       Set contributor classes.\\n     * @param _addresses          Addresses of the contributors.\\n     * @param _classes            Classes of the contributor.\\n     */\\n    function setClassBatch(\\n        address[] memory _addresses,\\n        uint8[] memory _classes\\n    ) onlyAdmin external {\\n        require(_classes.length == _addresses.length, \\\"Seed: incorrect data passed\\\");\\n        for(uint256 i = 0; i < _addresses.length; i++){\\n            setClass(_addresses[i],_classes[i] );\\n        }\\n    }\\n\\n    /**\\n     * @dev                       Change parameters in the class.\\n     * @param _class              Class for changing.\\n     * @param _classCap           The total cap of the contributor class.\\n     * @param _individualCap      The personal cap of each contributor in this class.\\n     * @param _price              The token price for the addresses in this clas.\\n     * @param _vestingDuration    The vesting duration for this contributors class.\\n     * @param _classVestingStartTime The class vesting start time for the contributor class.\\n     * @param _classFee           The fee for the contributor class.\\n     */\\n    function changeClass(\\n        uint8   _class,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _price,\\n        uint256 _vestingDuration,\\n        uint256 _classVestingStartTime,\\n        uint256 _classFee\\n    ) onlyAdmin external classRestriction(_classVestingStartTime, _classFee, _classCap){\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n\\n        calculateSeedAndFee(_price, _classFee, _classCap);\\n\\n        classes[_class].classCap = _classCap;\\n        classes[_class].individualCap = _individualCap;\\n        classes[_class].price = _price;\\n        classes[_class].vestingDuration = _vestingDuration;\\n        classes[_class].classVestingStartTime = _classVestingStartTime;\\n        classes[_class].classFee = _classFee;\\n    }\\n\\n    /**\\n     * @dev                        Add contributor class batch.\\n     * @param _classCaps                The total caps of the contributor class.\\n     * @param _individualCaps        The personal caps of each contributor in this class.\\n     * @param _prices              The token prices for the addresses in this clas.\\n     * @param _vestingDurations    The vesting durations for this contributors class.\\n     * @param _classVestingStartTime The class vesting start time for the contributor class.\\n     * @param _classFee             The fee for the contributor class.\\n     */\\n    function addClassBatch(\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _prices,\\n        uint256[] memory _vestingDurations,\\n        uint256[] memory _classVestingStartTime,\\n        uint256[] memory _classFee\\n    ) onlyAdmin external {\\n        require(_classCaps.length <= 100, \\\"Seed: Can't add batch with more then 100 classes\\\");\\n        require(\\n            classes.length + _classCaps.length < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        require(_classCaps.length == _individualCaps.length &&\\n                _classCaps.length == _prices.length &&\\n                _classCaps.length == _vestingDurations.length &&\\n                _classCaps.length == _classVestingStartTime.length &&\\n                _classCaps.length == _classFee.length,\\n            \\\"Seed: All provided arrays should be same size\\\");\\n        for(uint8 i = 0; i < _classCaps.length; i++){\\n            calculateSeedAndFee(_prices[i], _classFee[i], _classCaps[i]);\\n            _addClass(\\n                _classCaps[i],\\n                _individualCaps[i],\\n                _prices[i],\\n                _vestingDurations[i],\\n                _classVestingStartTime[i],\\n                _classFee[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Buy seed tokens.\\n     * @param _fundingAmount    The amount of funding tokens to contribute.\\n     */\\n    function buy(uint256 _fundingAmount)\\n        external\\n        isActive\\n        returns (uint256, uint256)\\n    {\\n        require(\\n            !permissionedSeed || whitelisted[msg.sender],\\n            \\\"Seed: sender has no rights\\\"\\n        );\\n\\n        ContributorClass memory userClass = classes[funders[msg.sender].class];\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(_fundingAmount > 0, \\\"Seed: cannot buy 0 tokens\\\");\\n        // Checks if contributor has exceeded his personal or class cap.\\n        require((userClass.classFundingCollected + _fundingAmount) <= userClass.classCap,\\n            \\\"Seed: maximum class funding reached\\\");\\n\\n        require((funders[msg.sender].fundingAmount + _fundingAmount) <= userClass.individualCap,\\n            \\\"Seed: maximum personal funding reached\\\");\\n\\n        require(\\n            endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\"\\n        );\\n\\n        if (!isFunded) {\\n            require(\\n                // classSeedAmountRequired is an amount which is needed to be sold\\n                // So when it's reached, for others will their balance be bigger or not - doesn't matter anymore.\\n                seedToken.balanceOf(address(this)) >=\\n                    seedAmountRequired + feeAmountRequired,\\n                \\\"Seed: sufficient seeds not provided\\\"\\n            );\\n            isFunded = true;\\n        }\\n\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount * PRECISION) / userClass.price;\\n\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\n        uint256 feeAmount = (seedAmount * classes[funders[msg.sender].class].classFee) / PRECISION;\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require(\\n            fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\"\\n        );\\n\\n        fundingCollected += _fundingAmount;\\n        classes[funders[msg.sender].class].classFundingCollected += _fundingAmount;\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder = seedRemainder - seedAmount;\\n        feeRemainder = feeRemainder - feeAmount;\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            for(uint8 i = 0; i < classes.length; i++){\\n                classes[i].classVestingStartTime = block.timestamp + (classes[i].classVestingStartTime - endTime);\\n            }\\n        }\\n\\n        //functionality of addFunder\\n        if (funders[msg.sender].fundingAmount == 0) {\\n            totalFunderCount++;\\n        }\\n        funders[msg.sender].fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n\\n        fundingToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            _fundingAmount\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount);\\n\\n        return (seedAmount, feeAmount);\\n    }\\n\\n    /**\\n     * @dev                     Claim vested seed tokens.\\n     * @param _funder           Address of funder to calculate seconds and amount claimable\\n     * @param _claimAmount      The amount of seed token a users wants to claim.\\n     */\\n    function claim(address _funder, uint256 _claimAmount)\\n        external\\n        returns (uint256)\\n    {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        ContributorClass memory claimed = classes[currentId];\\n        uint256 currentClassVestingStartTime = claimed.classVestingStartTime;\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n        require(\\n            currentClassVestingStartTime < block.timestamp,\\n            \\\"Seed: vesting start time for this class is not started yet\\\"\\n        );\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(\\n            amountClaimable >= _claimAmount,\\n            \\\"Seed: request is greater than claimable amount\\\"\\n        );\\n        uint256 currentClassFee = claimed.classFee;\\n        uint256 feeAmountOnClaim = (_claimAmount * currentClassFee) / PRECISION;        \\n\\n        funders[_funder].totalClaimed += _claimAmount;\\n\\n        seedClaimed += _claimAmount;    \\n        feeClaimed += feeAmountOnClaim; \\n\\n        seedToken.safeTransfer(beneficiary, feeAmountOnClaim);\\n        seedToken.safeTransfer(_funder, _claimAmount);\\n\\n        emit TokensClaimed(\\n            _funder,\\n            _claimAmount,\\n            beneficiary,\\n            feeAmountOnClaim\\n        );\\n\\n        return feeAmountOnClaim;\\n    }\\n\\n    /**\\n     * @dev         Returns funding tokens to user.\\n     */\\n    function retrieveFundingTokens() external returns (uint256) {\\n        require(\\n            startTime <= block.timestamp,\\n            \\\"Seed: distribution haven't started\\\"\\n        );\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        feeRemainder += feeForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        classes[tokenFunder.class].classFundingCollected -= fundingAmount;\\n\\n        fundingToken.safeTransfer(msg.sender, fundingAmount);\\n        \\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n     * @dev                     Pause distribution.\\n     */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n     * @dev                     Unpause distribution.\\n     */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the whitelist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n     * @dev                     retrieve remaining seed tokens back to project.\\n     * @param _refundReceiver   refund receiver address\\n     */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed || maximumReached || block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require( seedToken.balanceOf(address(this)) > 0,\\\"Seed: Failed to transfer Seed Token\\\");\\n            seedToken.safeTransfer(\\n                _refundReceiver,\\n                seedToken.balanceOf(address(this)));\\n        } else {\\n            // seed tokens to transfer = balance of seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = (seedAmountRequired +\\n                feeAmountRequired) - (seedRemainder + feeRemainder);\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this)) -\\n                totalSeedDistributed;\\n            seedToken.safeTransfer(_refundReceiver, amountToTransfer);\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add address to whitelist.\\n     * @param _buyer            Address which needs to be whitelisted\\n     * @param _class            Class to which buyer will be assigned\\n     */\\n    function whitelist(address _buyer, uint8 _class) external onlyAdmin {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[_buyer] = true;\\n        funders[_buyer].class = _class;\\n    }\\n\\n    /**\\n     * @dev                     Add multiple addresses to whitelist.\\n     * @param _buyers           Array of addresses to whitelist addresses in batch\\n     * @param _classes          Array of classes assigned in batch\\n     */\\n    function whitelistBatch(address[] memory _buyers, uint8[] memory _classes) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\n            require(_classes[i] < classes.length, \\\"Seed: incorrect class chosen\\\");\\n            whitelisted[_buyers[i]] = true;\\n            funders[_buyers[i]].class = _classes[i];\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Remove address from whitelist.\\n     * @param buyer             Address which needs to be unwhitelisted\\n     */\\n    function unwhitelist(address buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[buyer] = false;\\n    }\\n\\n    /**\\n     * @dev                     Withdraw funds from the contract\\n     */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached || (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        fundingWithdrawn = fundingCollected;\\n        // Send the entire seed contract balance of the funding token to the sale\\u2019s admin\\n        fundingToken.safeTransfer(msg.sender, fundingToken.balanceOf(address(this)));\\n    }\\n\\n    /**\\n     * @dev                     Updates metadata.\\n     * @param _metadata         Seed contract metadata, that is IPFS Hash\\n     */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n     * @dev                     Calculates the maximum claim\\n     * @param _funder           Address of funder to find the maximum claim\\n     */\\n    function calculateClaim(address _funder) public view returns (uint256) {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        ContributorClass memory claimed = classes[currentId];\\n        uint256 currentClassVestingStartTime = claimed.classVestingStartTime;\\n  \\n        if (block.timestamp < currentClassVestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - currentClassVestingStartTime;\\n        if (elapsedSeconds < vestingCliff) {\\n            return 0;\\n        }\\n\\n        uint256 currentVestingDuration = claimed.vestingDuration;\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= currentVestingDuration) {\\n            return seedAmountForFunder(_funder) - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds *\\n                seedAmountForFunder(_funder)) / currentVestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     get fee claimed for funder\\n     * @param _funder           address of funder to check fee claimed\\n     */\\n    function feeClaimedForFunder(address _funder)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        uint256 currentFee = classes[currentId].classFee; \\n\\n        return (funders[_funder].totalClaimed * currentFee) / PRECISION;\\n    }\\n\\n    /**\\n     * @dev                     get fee for funder\\n     * @param _funder           address of funder to check fee\\n     */\\n    function feeForFunder(address _funder) public view returns (uint256) {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        uint256 currentFee = classes[currentId].classFee; \\n\\n        return (seedAmountForFunder(_funder) * currentFee) / PRECISION;\\n    }\\n\\n    /**\\n     * @dev                     get seed amount for funder\\n     * @param _funder           address of funder to seed amount\\n     */\\n    function seedAmountForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].fundingAmount * PRECISION) / classes[funders[_funder].class].price;\\n    }\\n}\",\"keccak256\":\"0x0c510d90274b912f633402597166b4b7bb97bff976b411dfa93fe484ad24b7ff\",\"license\":\"GPL-3.0\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613f99806100206000396000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c806371f4b8e81161019d578063b774682f116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e741461069a578063f851a440146106c4578063fb86a404146106d7578063fc582d41146106e057600080fd5b8063e6e36ebb1461066b578063e7b88e0f14610674578063ea3455401461068757600080fd5b8063b774682f146105e6578063bc0f5f84146105ef578063d936547e146105f8578063d96a094a1461061b578063dc4b9e3814610643578063e565eb4c1461065657600080fd5b806383d59e0011610156578063906a26e011610130578063906a26e0146105a4578063913f962c146105ad5780639a590427146105c0578063aad3ec96146105d357600080fd5b806383d59e001461058b5780638456cb59146105945780638a2448aa1461059c57600080fd5b806371f4b8e8146104f857806378065f271461050157806378e97925146105145780637bc974031461051d5780637c65430314610530578063817dbe9f1461054357600080fd5b80633dba9e411161025c57806347d02f1b116102155780635d85ac0d116101ef5780635d85ac0d146104b65780635e9777e8146104c957806362d8053c146104d257806364da2a18146104e557600080fd5b806347d02f1b1461048e578063597e1fb5146104975780635c975abb146104a457600080fd5b80633dba9e41146104385780633f4ba83a1461044557806342d527c81461044d578063430e99a41461046057806343d726d61461047357806344f9abb81461047b57600080fd5b80632aef2259116102ae5780632aef2259146103ba578063311f8483146103cd5780633197cbb6146103ff57806338af3eed14610408578063392f37e91461041b5780633ccfd60b1461043057600080fd5b8063031b3677146102f657806303aabe311461034d5780630826d2c714610362578063117a36d114610379578063158ef93e1461039d5780631cfe562e146103b1575b600080fd5b61032961030436600461357f565b60176020526000908152604090208054600182015460029092015460ff909116919083565b6040805160ff90941684526020840192909252908201526060015b60405180910390f35b61036061035b36600461357f565b6106f3565b005b61036b600d5481565b604051908152602001610344565b600b5461038d90600160281b900460ff1681565b6040519015158152602001610344565b600b5461038d906301000000900460ff1681565b61036b60105481565b6103606103c83660046135ab565b610a66565b6008546103e790600160281b90046001600160a01b031681565b6040516001600160a01b039091168152602001610344565b61036b60075481565b6000546103e7906001600160a01b031681565b610423610b43565b6040516103449190613636565b610360610bd1565b60085461038d9060ff1681565b610360610d52565b61036061045b366004613649565b610e07565b61036b61046e36600461357f565b610e76565b610360610f38565b6103606104893660046137f1565b610f95565b61036b600e5481565b600b5461038d9060ff1681565b600b5461038d90610100900460ff1681565b61036b6104c436600461357f565b611468565b61036b600c5481565b6103606104e03660046138d5565b6114f7565b6103606104f33660046139ca565b611795565b61036b60125481565b6009546103e7906001600160a01b031681565b61036b60065481565b61036061052b366004613a1d565b6119b1565b600b5461038d9062010000900460ff1681565b610556610551366004613adf565b611a86565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610344565b61036b60115481565b610360611ad8565b61036b611b8e565b61036b60025481565b6103606105bb3660046135ab565b611daf565b6103606105ce36600461357f565b611e6e565b61036b6105e1366004613af8565b611f03565b61036b600f5481565b61036b60045481565b61038d61060636600461357f565b60166020526000908152604090205460ff1681565b61062e610629366004613adf565b612308565b60408051928352602083019190915201610344565b61036b61065136600461357f565b612a91565b600b5461038d90640100000000900460ff1681565b61036b60055481565b610360610682366004613a1d565b612b12565b61036b61069536600461357f565b612c9f565b6008546106af90610100900463ffffffff1681565b60405163ffffffff9091168152602001610344565b6001546103e7906001600160a01b031681565b61036b60035481565b6103606106ee366004613b22565b612e1b565b6001546001600160a01b031633146107265760405162461bcd60e51b815260040161071d90613bb7565b60405180910390fd5b600b5460ff16806107405750600b54600160281b900460ff165b8061074d57506007544210155b6107f05760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c40161071d565b600b54640100000000900460ff16610982576008546040516370a0823160e01b8152306004820152600091600160281b90046001600160a01b0316906370a082319060240160206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108859190613bee565b116108de5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b606482015260840161071d565b6008546040516370a0823160e01b815230600482015261097f918391600160281b9091046001600160a01b0316906370a082319060240160206040518083038186803b15801561092d57600080fd5b505afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190613bee565b600854600160281b90046001600160a01b03169190612f15565b50565b6000600f54600d546109949190613c1d565b6005546004546109a49190613c1d565b6109ae9190613c35565b6008546040516370a0823160e01b81523060048201529192506000918391600160281b90046001600160a01b0316906370a082319060240160206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190613bee565b610a409190613c35565b600854909150610a6190600160281b90046001600160a01b03168483612f15565b505050565b6001546001600160a01b03163314610a905760405162461bcd60e51b815260040161071d90613bb7565b60155460ff821610610ab45760405162461bcd60e51b815260040161071d90613c4c565b600b5460ff1615610ad75760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114610afe5760405162461bcd60e51b815260040161071d90613cba565b6001600160a01b039190911660009081526016602090815260408083208054600160ff19918216179091556017909252909120805490911660ff909216919091179055565b600a8054610b5090613cf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7c90613cf1565b8015610bc95780601f10610b9e57610100808354040283529160200191610bc9565b820191906000526020600020905b815481529060010190602001808311610bac57829003601f168201915b505050505081565b6001546001600160a01b03163314610bfb5760405162461bcd60e51b815260040161071d90613bb7565b600b54600160281b900460ff1680610c2a5750600b54640100000000900460ff168015610c2a57506007544210155b610cb65760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a40161071d565b6010546011556009546040516370a0823160e01b8152306004820152610d509133916001600160a01b03909116906370a082319060240160206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d9190613bee565b6009546001600160a01b03169190612f15565b565b6001546001600160a01b03163314610d7c5760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff16151560011415610da45760405162461bcd60e51b815260040161071d90613c83565b600b5460ff610100909104161515600114610dfa5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b604482015260640161071d565b600b805461ff0019169055565b6001546001600160a01b03163314610e315760405162461bcd60e51b815260040161071d90613bb7565b60155461010090610e43906001613c1d565b10610e605760405162461bcd60e51b815260040161071d90613d2c565b610e6e868686868686612f78565b505050505050565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491929184919083908110610ed457610ed4613d71565b9060005260206000209060070201600501549050670de0b6b3a76400008160176000886001600160a01b03166001600160a01b0316815260200190815260200160002060010154610f259190613d87565b610f2f9190613da6565b95945050505050565b6001546001600160a01b03163314610f625760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615610f855760405162461bcd60e51b815260040161071d90613c83565b600b805461ffff19166001179055565b600b546301000000900460ff1615610ffa5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b606482015260840161071d565b600b805463ff0000001916630100000017905588518990600190811061102257611022613d71565b60200260200101516001600160a01b03168960008151811061104657611046613d71565b60200260200101516001600160a01b031614156110bb5760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b606482015260840161071d565b876000815181106110ce576110ce613d71565b6020026020010151886001815181106110e9576110e9613d71565b602002602001015110156111585760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b606482015260840161071d565b8263ffffffff168463ffffffff1610156111da5760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c696666000000606482015260840161071d565b85851161124f5760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d650000000000606482015260840161071d565b67063eb89da4ed000081106112b75760405162461bcd60e51b815260206004820152602860248201527f53656564466163746f72793a206665652063616e6e6f74206265206d6f7265206044820152677468616e2034352560c01b606482015260840161071d565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e169190921617905588518991906112f4576112f4613d71565b60200260200101516002819055508760018151811061131557611315613d71565b602090810291909101015160035560068690556007859055600061133a866001613c1d565b6008805464ffffffffff191661010063ffffffff88160260ff1916178515151790558a519091508a9060009061137257611372613d71565b6020026020010151600860056101000a8154816001600160a01b0302191690836001600160a01b03160217905550896001815181106113b3576113b3613d71565b6020908102919091010151600980546001600160a01b0319166001600160a01b03909216919091179055601482905560138890556000601255600354889061140490670de0b6b3a764000090613d87565b61140e9190613da6565b6004819055601454670de0b6b3a76400009161142a9190613d87565b6114349190613da6565b60055560035461144e90808a63ffffffff89168587612f78565b5050600454600d555050600554600f555050505050505050565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff168082526001830154948201949094526002909101549181019190915260158054919291849190839081106114c6576114c6613d71565b9060005260206000209060070201600501549050670de0b6b3a7640000816114ed87612a91565b610f259190613d87565b6001546001600160a01b031633146115215760405162461bcd60e51b815260040161071d90613bb7565b60648651111561158c5760405162461bcd60e51b815260206004820152603060248201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060448201526f7468656e2031303020636c617373657360801b606482015260840161071d565b85516015546101009161159e91613c1d565b106115bb5760405162461bcd60e51b815260040161071d90613d2c565b845186511480156115cd575083518651145b80156115da575082518651145b80156115e7575081518651145b80156115f4575080518651145b6116565760405162461bcd60e51b815260206004820152602d60248201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460448201526c2062652073616d652073697a6560981b606482015260840161071d565b60005b86518160ff16101561178c576116c4858260ff168151811061167d5761167d613d71565b6020026020010151838360ff168151811061169a5761169a613d71565b6020026020010151898460ff16815181106116b7576116b7613d71565b6020026020010151613189565b61177a878260ff16815181106116dc576116dc613d71565b6020026020010151878360ff16815181106116f9576116f9613d71565b6020026020010151878460ff168151811061171657611716613d71565b6020026020010151878560ff168151811061173357611733613d71565b6020026020010151878660ff168151811061175057611750613d71565b6020026020010151878760ff168151811061176d5761176d613d71565b6020026020010151612f78565b8061178481613dc8565b915050611659565b50505050505050565b6001546001600160a01b031633146117bf5760405162461bcd60e51b815260040161071d90613bb7565b81818782600754106117e35760405162461bcd60e51b815260040161071d90613de8565b60065442106118045760405162461bcd60e51b815260040161071d90613e3b565b600b5460ff16156118275760405162461bcd60e51b815260040161071d90613c83565b67063eb89da4ed0000821061184e5760405162461bcd60e51b815260040161071d90613e70565b6000811161186e5760405162461bcd60e51b815260040161071d90613eb1565b60155460ff8b16106118925760405162461bcd60e51b815260040161071d90613c4c565b61189d87858b613189565b8860158b60ff16815481106118b4576118b4613d71565b9060005260206000209060070201600001819055508760158b60ff16815481106118e0576118e0613d71565b9060005260206000209060070201600101819055508660158b60ff168154811061190c5761190c613d71565b9060005260206000209060070201600201819055508560158b60ff168154811061193857611938613d71565b9060005260206000209060070201600301819055508460158b60ff168154811061196457611964613d71565b9060005260206000209060070201600401819055508360158b60ff168154811061199057611990613d71565b90600052602060002090600702016005018190555050505050505050505050565b6001546001600160a01b031633146119db5760405162461bcd60e51b815260040161071d90613bb7565b8151815114611a2c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20696e636f72726563742064617461207061737365640000000000604482015260640161071d565b60005b8251811015610a6157611a74838281518110611a4d57611a4d613d71565b6020026020010151838381518110611a6757611a67613d71565b6020026020010151611daf565b80611a7e81613ef8565b915050611a2f565b60158181548110611a9657600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6001546001600160a01b03163314611b025760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615611b255760405162461bcd60e51b815260040161071d90613c83565b600b54610100900460ff1615611b7d5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161071d565b600b805461ff001916610100179055565b6000426006541115611bed5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b606482015260840161071d565b600b54640100000000900460ff1615611c485760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d6574604482015260640161071d565b336000908152601760205260409020600281015480611ca95760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e7400000000000000604482015260640161071d565b611cb233612a91565b600d6000828254611cc39190613c1d565b90915550611cd2905033611468565b600f6000828254611ce39190613c1d565b9091555050600c8054906000611cf883613f13565b9190505550600082600201819055508060106000828254611d199190613c35565b9091555050815460158054839260ff16908110611d3857611d38613d71565b90600052602060002090600702016006016000828254611d589190613c35565b9091555050600954611d74906001600160a01b03163383612f15565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b03163314611dd95760405162461bcd60e51b815260040161071d90613bb7565b60155460ff821610611dfd5760405162461bcd60e51b815260040161071d90613c4c565b600b5460ff1615611e205760405162461bcd60e51b815260040161071d90613c83565b6006544210611e415760405162461bcd60e51b815260040161071d90613e3b565b6001600160a01b03919091166000908152601760205260409020805460ff191660ff909216919091179055565b6001546001600160a01b03163314611e985760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615611ebb5760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114611ee25760405162461bcd60e51b815260040161071d90613cba565b6001600160a01b03166000908152601660205260409020805460ff19169055565b600b54600090640100000000900460ff16611f6c5760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b606482015260840161071d565b6001600160a01b03831660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491939183908110611fc757611fc7613d71565b90600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905060008160800151905042600754108061204a5750600b54600160281b900460ff165b6120aa5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b606482015260840161071d565b42811061211f5760405162461bcd60e51b815260206004820152603a60248201527f536565643a2076657374696e672073746172742074696d6520666f722074686960448201527f7320636c617373206973206e6f74207374617274656420796574000000000000606482015260840161071d565b600061212a88612c9f565b90506000811161217c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161071d565b868110156121e35760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b606482015260840161071d565b60a08301516000670de0b6b3a76400006121fd838b613d87565b6122079190613da6565b6001600160a01b038b16600090815260176020526040812060010180549293508b92909190612237908490613c1d565b9250508190555088600e60008282546122509190613c1d565b9250508190555080601260008282546122699190613c1d565b9091555050600054600854612292916001600160a01b03600160281b9092048216911683612f15565b6008546122b090600160281b90046001600160a01b03168b8b612f15565b600054604080518b8152602081018490526001600160a01b03928316928d16917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a39998505050505050505050565b600b54600090819060ff16156123305760405162461bcd60e51b815260040161071d90613c83565b600b54610100900460ff16156123885760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161071d565b60085460ff1615806123a957503360009081526016602052604090205460ff165b6123f55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f20726967687473000000000000604482015260640161071d565b3360009081526017602052604081205460158054909160ff1690811061241d5761241d613d71565b90600052602060002090600702016040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600b60059054906101000a900460ff16156124db5760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e672072656163686564000000604482015260640161071d565b6000841161252b5760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e7300000000000000604482015260640161071d565b805160c082015161253d908690613c1d565b11156125975760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b606482015260840161071d565b60208082015133600090815260179092526040909120600201546125bc908690613c1d565b11156126195760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b606482015260840161071d565b426007541015801561262d57504260065411155b61268f5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b606482015260840161071d565b600b5462010000900460ff1661279c576005546004546126af9190613c1d565b6008546040516370a0823160e01b8152306004820152600160281b9091046001600160a01b0316906370a082319060240160206040518083038186803b1580156126f857600080fd5b505afa15801561270c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127309190613bee565b101561278a5760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b606482015260840161071d565b600b805462ff00001916620100001790555b60408101516000906127b6670de0b6b3a764000087613d87565b6127c09190613da6565b33600090815260176020526040812054601580549394509192670de0b6b3a7640000929160ff169081106127f6576127f6613d71565b906000526020600020906007020160050154836128139190613d87565b61281d9190613da6565b9050600354866010546128309190613c1d565b11156128915760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b606482015260840161071d565b85601060008282546128a39190613c1d565b90915550503360009081526017602052604090205460158054889260ff169081106128d0576128d0613d71565b906000526020600020906007020160060160008282546128f09190613c1d565b9091555050600d54612903908390613c35565b600d55600f54612914908290613c35565b600f556002546010541061293857600b805464ff0000000019166401000000001790555b600354601054106129e557600b805465ff00000000001916600160281b17905560005b60155460ff821610156129e35760075460158260ff168154811061298157612981613d71565b90600052602060002090600702016004015461299d9190613c35565b6129a79042613c1d565b60158260ff16815481106129bd576129bd613d71565b6000918252602090912060046007909202010155806129db81613dc8565b91505061295b565b505b33600090815260176020526040902060020154612a1257600c8054906000612a0c83613ef8565b91905055505b3360009081526017602052604081206002018054889290612a34908490613c1d565b9091555050600954612a51906001600160a01b0316333089613237565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a2909350915050915091565b6001600160a01b03811660009081526017602052604081205460158054909160ff16908110612ac257612ac2613d71565b6000918252602080832060026007909302018201546001600160a01b0386168452601790915260409092200154612b0290670de0b6b3a764000090613d87565b612b0c9190613da6565b92915050565b6001546001600160a01b03163314612b3c5760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615612b5f5760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114612b865760405162461bcd60e51b815260040161071d90613cba565b60005b8251811015610a61576015548251839083908110612ba957612ba9613d71565b602002602001015160ff1610612bd15760405162461bcd60e51b815260040161071d90613c4c565b600160166000858481518110612be957612be9613d71565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550818181518110612c3a57612c3a613d71565b602002602001015160176000858481518110612c5857612c58613d71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff9290921691909117905580612c9781613ef8565b915050612b89565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491929184919083908110612cfd57612cfd613d71565b90600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905060008160800151905080421015612d7b5750600095945050505050565b6000612d878242613c35565b600854909150610100900463ffffffff16811015612dac575060009695505050505050565b6060830151808210612ddc578560200151612dc689612a91565b612dd09190613c35565b98975050505050505050565b600081612de88a612a91565b612df29085613d87565b612dfc9190613da6565b9050866020015181612e0e9190613c35565b9998505050505050505050565b600b546301000000900460ff1615156001141580612e4357506001546001600160a01b031633145b612ec05760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a40161071d565b8051612ed390600a9060208401906134ca565b5080604051612ee29190613f2a565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b6040516001600160a01b038316602482015260448101829052610a6190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613275565b8181878260075410612f9c5760405162461bcd60e51b815260040161071d90613de8565b6006544210612fbd5760405162461bcd60e51b815260040161071d90613e3b565b600b5460ff1615612fe05760405162461bcd60e51b815260040161071d90613c83565b67063eb89da4ed000082106130075760405162461bcd60e51b815260040161071d90613e70565b600081116130275760405162461bcd60e51b815260040161071d90613eb1565b61303287858b613189565b50506040805160e08101825297885260208801968752870194855250606086019283526080860191825260a08601908152600060c0870181815260158054600181018255925296517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47560079092029182015594517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47686015592517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47785015590517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec478840155517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec479830155517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47a82015590517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47b90910155565b6014548211156131995760148290555b60135483101561320157826131b6670de0b6b3a764000083613d87565b6131c09190613da6565b601354670de0b6b3a7640000836003546131da9190613c35565b6131e49190613d87565b6131ee9190613da6565b6131f89190613c1d565b60045560138390555b670de0b6b3a764000060145460045461321a9190613d87565b6132249190613da6565b6005819055600454600d55600f55505050565b6040516001600160a01b038085166024830152831660448201526064810182905261326f9085906323b872dd60e01b90608401612f41565b50505050565b60006132ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133479092919063ffffffff16565b805190915015610a6157808060200190518101906132e89190613f46565b610a615760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161071d565b60606133568484600085613360565b90505b9392505050565b6060824710156133c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161071d565b6001600160a01b0385163b6134185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161071d565b600080866001600160a01b031685876040516134349190613f2a565b60006040518083038185875af1925050503d8060008114613471576040519150601f19603f3d011682016040523d82523d6000602084013e613476565b606091505b5091509150613486828286613491565b979650505050505050565b606083156134a0575081613359565b8251156134b05782518084602001fd5b8160405162461bcd60e51b815260040161071d9190613636565b8280546134d690613cf1565b90600052602060002090601f0160209004810192826134f8576000855561353e565b82601f1061351157805160ff191683800117855561353e565b8280016001018555821561353e579182015b8281111561353e578251825591602001919060010190613523565b5061354a92915061354e565b5090565b5b8082111561354a576000815560010161354f565b80356001600160a01b038116811461357a57600080fd5b919050565b60006020828403121561359157600080fd5b61335982613563565b803560ff8116811461357a57600080fd5b600080604083850312156135be57600080fd5b6135c783613563565b91506135d56020840161359a565b90509250929050565b60005b838110156135f95781810151838201526020016135e1565b8381111561326f5750506000910152565b600081518084526136228160208601602086016135de565b601f01601f19169290920160200192915050565b602081526000613359602083018461360a565b60008060008060008060c0878903121561366257600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156136cb576136cb61368c565b604052919050565b600067ffffffffffffffff8211156136ed576136ed61368c565b5060051b60200190565b600082601f83011261370857600080fd5b8135602061371d613718836136d3565b6136a2565b82815260059290921b8401810191818101908684111561373c57600080fd5b8286015b8481101561375e5761375181613563565b8352918301918301613740565b509695505050505050565b600082601f83011261377a57600080fd5b8135602061378a613718836136d3565b82815260059290921b840181019181810190868411156137a957600080fd5b8286015b8481101561375e57803583529183019183016137ad565b803563ffffffff8116811461357a57600080fd5b801515811461097f57600080fd5b803561357a816137d8565b60008060008060008060008060008060006101608c8e03121561381357600080fd5b61381c8c613563565b9a5061382a60208d01613563565b995067ffffffffffffffff8060408e0135111561384657600080fd5b6138568e60408f01358f016136f7565b99508060608e0135111561386957600080fd5b5061387a8d60608e01358e01613769565b975060808c0135965060a08c0135955060c08c0135945061389d60e08d016137c4565b93506138ac6101008d016137c4565b92506138bb6101208d016137e6565b91506101408c013590509295989b509295989b9093969950565b60008060008060008060c087890312156138ee57600080fd5b863567ffffffffffffffff8082111561390657600080fd5b6139128a838b01613769565b9750602089013591508082111561392857600080fd5b6139348a838b01613769565b9650604089013591508082111561394a57600080fd5b6139568a838b01613769565b9550606089013591508082111561396c57600080fd5b6139788a838b01613769565b9450608089013591508082111561398e57600080fd5b61399a8a838b01613769565b935060a08901359150808211156139b057600080fd5b506139bd89828a01613769565b9150509295509295509295565b600080600080600080600060e0888a0312156139e557600080fd5b6139ee8861359a565b9960208901359950604089013598606081013598506080810135975060a0810135965060c00135945092505050565b60008060408385031215613a3057600080fd5b823567ffffffffffffffff80821115613a4857600080fd5b613a54868387016136f7565b9350602091508185013581811115613a6b57600080fd5b85019050601f81018613613a7e57600080fd5b8035613a8c613718826136d3565b81815260059190911b82018301908381019088831115613aab57600080fd5b928401925b82841015613ad057613ac18461359a565b82529284019290840190613ab0565b80955050505050509250929050565b600060208284031215613af157600080fd5b5035919050565b60008060408385031215613b0b57600080fd5b613b1483613563565b946020939093013593505050565b60006020808385031215613b3557600080fd5b823567ffffffffffffffff80821115613b4d57600080fd5b818501915085601f830112613b6157600080fd5b813581811115613b7357613b7361368c565b613b85601f8201601f191685016136a2565b91508082528684828501011115613b9b57600080fd5b8084840185840137600090820190930192909252509392505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b600060208284031215613c0057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115613c3057613c30613c07565b500190565b600082821015613c4757613c47613c07565b500390565b6020808252601c908201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b600181811c90821680613d0557607f821691505b60208210811415613d2657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604082015264617373657360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615613da157613da1613c07565b500290565b600082613dc357634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415613ddf57613ddf613c07565b60010192915050565b60208082526033908201527f536565643a2076657374696e672073746172742074696d652063616e2774206260408201527265206c657373207468616e20656e6454696d6560681b606082015260800190565b6020808252818101527f536565643a2076657374696e6720697320616c72656164792073746172746564604082015260600190565b60208082526021908201527f536565643a206665652063616e6e6f74206265206d6f7265207468616e2034356040820152602560f81b606082015260800190565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b6000600019821415613f0c57613f0c613c07565b5060010190565b600081613f2257613f22613c07565b506000190190565b60008251613f3c8184602087016135de565b9190910192915050565b600060208284031215613f5857600080fd5b8151613359816137d856fea2646970667358221220b44fbf78bd42fa0580ee00222cca1728b83dde5660fc2e7b58329875b497ebd564736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102f15760003560e01c806371f4b8e81161019d578063b774682f116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e741461069a578063f851a440146106c4578063fb86a404146106d7578063fc582d41146106e057600080fd5b8063e6e36ebb1461066b578063e7b88e0f14610674578063ea3455401461068757600080fd5b8063b774682f146105e6578063bc0f5f84146105ef578063d936547e146105f8578063d96a094a1461061b578063dc4b9e3814610643578063e565eb4c1461065657600080fd5b806383d59e0011610156578063906a26e011610130578063906a26e0146105a4578063913f962c146105ad5780639a590427146105c0578063aad3ec96146105d357600080fd5b806383d59e001461058b5780638456cb59146105945780638a2448aa1461059c57600080fd5b806371f4b8e8146104f857806378065f271461050157806378e97925146105145780637bc974031461051d5780637c65430314610530578063817dbe9f1461054357600080fd5b80633dba9e411161025c57806347d02f1b116102155780635d85ac0d116101ef5780635d85ac0d146104b65780635e9777e8146104c957806362d8053c146104d257806364da2a18146104e557600080fd5b806347d02f1b1461048e578063597e1fb5146104975780635c975abb146104a457600080fd5b80633dba9e41146104385780633f4ba83a1461044557806342d527c81461044d578063430e99a41461046057806343d726d61461047357806344f9abb81461047b57600080fd5b80632aef2259116102ae5780632aef2259146103ba578063311f8483146103cd5780633197cbb6146103ff57806338af3eed14610408578063392f37e91461041b5780633ccfd60b1461043057600080fd5b8063031b3677146102f657806303aabe311461034d5780630826d2c714610362578063117a36d114610379578063158ef93e1461039d5780631cfe562e146103b1575b600080fd5b61032961030436600461357f565b60176020526000908152604090208054600182015460029092015460ff909116919083565b6040805160ff90941684526020840192909252908201526060015b60405180910390f35b61036061035b36600461357f565b6106f3565b005b61036b600d5481565b604051908152602001610344565b600b5461038d90600160281b900460ff1681565b6040519015158152602001610344565b600b5461038d906301000000900460ff1681565b61036b60105481565b6103606103c83660046135ab565b610a66565b6008546103e790600160281b90046001600160a01b031681565b6040516001600160a01b039091168152602001610344565b61036b60075481565b6000546103e7906001600160a01b031681565b610423610b43565b6040516103449190613636565b610360610bd1565b60085461038d9060ff1681565b610360610d52565b61036061045b366004613649565b610e07565b61036b61046e36600461357f565b610e76565b610360610f38565b6103606104893660046137f1565b610f95565b61036b600e5481565b600b5461038d9060ff1681565b600b5461038d90610100900460ff1681565b61036b6104c436600461357f565b611468565b61036b600c5481565b6103606104e03660046138d5565b6114f7565b6103606104f33660046139ca565b611795565b61036b60125481565b6009546103e7906001600160a01b031681565b61036b60065481565b61036061052b366004613a1d565b6119b1565b600b5461038d9062010000900460ff1681565b610556610551366004613adf565b611a86565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610344565b61036b60115481565b610360611ad8565b61036b611b8e565b61036b60025481565b6103606105bb3660046135ab565b611daf565b6103606105ce36600461357f565b611e6e565b61036b6105e1366004613af8565b611f03565b61036b600f5481565b61036b60045481565b61038d61060636600461357f565b60166020526000908152604090205460ff1681565b61062e610629366004613adf565b612308565b60408051928352602083019190915201610344565b61036b61065136600461357f565b612a91565b600b5461038d90640100000000900460ff1681565b61036b60055481565b610360610682366004613a1d565b612b12565b61036b61069536600461357f565b612c9f565b6008546106af90610100900463ffffffff1681565b60405163ffffffff9091168152602001610344565b6001546103e7906001600160a01b031681565b61036b60035481565b6103606106ee366004613b22565b612e1b565b6001546001600160a01b031633146107265760405162461bcd60e51b815260040161071d90613bb7565b60405180910390fd5b600b5460ff16806107405750600b54600160281b900460ff165b8061074d57506007544210155b6107f05760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c40161071d565b600b54640100000000900460ff16610982576008546040516370a0823160e01b8152306004820152600091600160281b90046001600160a01b0316906370a082319060240160206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108859190613bee565b116108de5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b606482015260840161071d565b6008546040516370a0823160e01b815230600482015261097f918391600160281b9091046001600160a01b0316906370a082319060240160206040518083038186803b15801561092d57600080fd5b505afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190613bee565b600854600160281b90046001600160a01b03169190612f15565b50565b6000600f54600d546109949190613c1d565b6005546004546109a49190613c1d565b6109ae9190613c35565b6008546040516370a0823160e01b81523060048201529192506000918391600160281b90046001600160a01b0316906370a082319060240160206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190613bee565b610a409190613c35565b600854909150610a6190600160281b90046001600160a01b03168483612f15565b505050565b6001546001600160a01b03163314610a905760405162461bcd60e51b815260040161071d90613bb7565b60155460ff821610610ab45760405162461bcd60e51b815260040161071d90613c4c565b600b5460ff1615610ad75760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114610afe5760405162461bcd60e51b815260040161071d90613cba565b6001600160a01b039190911660009081526016602090815260408083208054600160ff19918216179091556017909252909120805490911660ff909216919091179055565b600a8054610b5090613cf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7c90613cf1565b8015610bc95780601f10610b9e57610100808354040283529160200191610bc9565b820191906000526020600020905b815481529060010190602001808311610bac57829003601f168201915b505050505081565b6001546001600160a01b03163314610bfb5760405162461bcd60e51b815260040161071d90613bb7565b600b54600160281b900460ff1680610c2a5750600b54640100000000900460ff168015610c2a57506007544210155b610cb65760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a40161071d565b6010546011556009546040516370a0823160e01b8152306004820152610d509133916001600160a01b03909116906370a082319060240160206040518083038186803b158015610d0557600080fd5b505afa158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d9190613bee565b6009546001600160a01b03169190612f15565b565b6001546001600160a01b03163314610d7c5760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff16151560011415610da45760405162461bcd60e51b815260040161071d90613c83565b600b5460ff610100909104161515600114610dfa5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b604482015260640161071d565b600b805461ff0019169055565b6001546001600160a01b03163314610e315760405162461bcd60e51b815260040161071d90613bb7565b60155461010090610e43906001613c1d565b10610e605760405162461bcd60e51b815260040161071d90613d2c565b610e6e868686868686612f78565b505050505050565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491929184919083908110610ed457610ed4613d71565b9060005260206000209060070201600501549050670de0b6b3a76400008160176000886001600160a01b03166001600160a01b0316815260200190815260200160002060010154610f259190613d87565b610f2f9190613da6565b95945050505050565b6001546001600160a01b03163314610f625760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615610f855760405162461bcd60e51b815260040161071d90613c83565b600b805461ffff19166001179055565b600b546301000000900460ff1615610ffa5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b606482015260840161071d565b600b805463ff0000001916630100000017905588518990600190811061102257611022613d71565b60200260200101516001600160a01b03168960008151811061104657611046613d71565b60200260200101516001600160a01b031614156110bb5760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b606482015260840161071d565b876000815181106110ce576110ce613d71565b6020026020010151886001815181106110e9576110e9613d71565b602002602001015110156111585760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b606482015260840161071d565b8263ffffffff168463ffffffff1610156111da5760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c696666000000606482015260840161071d565b85851161124f5760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d650000000000606482015260840161071d565b67063eb89da4ed000081106112b75760405162461bcd60e51b815260206004820152602860248201527f53656564466163746f72793a206665652063616e6e6f74206265206d6f7265206044820152677468616e2034352560c01b606482015260840161071d565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e169190921617905588518991906112f4576112f4613d71565b60200260200101516002819055508760018151811061131557611315613d71565b602090810291909101015160035560068690556007859055600061133a866001613c1d565b6008805464ffffffffff191661010063ffffffff88160260ff1916178515151790558a519091508a9060009061137257611372613d71565b6020026020010151600860056101000a8154816001600160a01b0302191690836001600160a01b03160217905550896001815181106113b3576113b3613d71565b6020908102919091010151600980546001600160a01b0319166001600160a01b03909216919091179055601482905560138890556000601255600354889061140490670de0b6b3a764000090613d87565b61140e9190613da6565b6004819055601454670de0b6b3a76400009161142a9190613d87565b6114349190613da6565b60055560035461144e90808a63ffffffff89168587612f78565b5050600454600d555050600554600f555050505050505050565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff168082526001830154948201949094526002909101549181019190915260158054919291849190839081106114c6576114c6613d71565b9060005260206000209060070201600501549050670de0b6b3a7640000816114ed87612a91565b610f259190613d87565b6001546001600160a01b031633146115215760405162461bcd60e51b815260040161071d90613bb7565b60648651111561158c5760405162461bcd60e51b815260206004820152603060248201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060448201526f7468656e2031303020636c617373657360801b606482015260840161071d565b85516015546101009161159e91613c1d565b106115bb5760405162461bcd60e51b815260040161071d90613d2c565b845186511480156115cd575083518651145b80156115da575082518651145b80156115e7575081518651145b80156115f4575080518651145b6116565760405162461bcd60e51b815260206004820152602d60248201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460448201526c2062652073616d652073697a6560981b606482015260840161071d565b60005b86518160ff16101561178c576116c4858260ff168151811061167d5761167d613d71565b6020026020010151838360ff168151811061169a5761169a613d71565b6020026020010151898460ff16815181106116b7576116b7613d71565b6020026020010151613189565b61177a878260ff16815181106116dc576116dc613d71565b6020026020010151878360ff16815181106116f9576116f9613d71565b6020026020010151878460ff168151811061171657611716613d71565b6020026020010151878560ff168151811061173357611733613d71565b6020026020010151878660ff168151811061175057611750613d71565b6020026020010151878760ff168151811061176d5761176d613d71565b6020026020010151612f78565b8061178481613dc8565b915050611659565b50505050505050565b6001546001600160a01b031633146117bf5760405162461bcd60e51b815260040161071d90613bb7565b81818782600754106117e35760405162461bcd60e51b815260040161071d90613de8565b60065442106118045760405162461bcd60e51b815260040161071d90613e3b565b600b5460ff16156118275760405162461bcd60e51b815260040161071d90613c83565b67063eb89da4ed0000821061184e5760405162461bcd60e51b815260040161071d90613e70565b6000811161186e5760405162461bcd60e51b815260040161071d90613eb1565b60155460ff8b16106118925760405162461bcd60e51b815260040161071d90613c4c565b61189d87858b613189565b8860158b60ff16815481106118b4576118b4613d71565b9060005260206000209060070201600001819055508760158b60ff16815481106118e0576118e0613d71565b9060005260206000209060070201600101819055508660158b60ff168154811061190c5761190c613d71565b9060005260206000209060070201600201819055508560158b60ff168154811061193857611938613d71565b9060005260206000209060070201600301819055508460158b60ff168154811061196457611964613d71565b9060005260206000209060070201600401819055508360158b60ff168154811061199057611990613d71565b90600052602060002090600702016005018190555050505050505050505050565b6001546001600160a01b031633146119db5760405162461bcd60e51b815260040161071d90613bb7565b8151815114611a2c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20696e636f72726563742064617461207061737365640000000000604482015260640161071d565b60005b8251811015610a6157611a74838281518110611a4d57611a4d613d71565b6020026020010151838381518110611a6757611a67613d71565b6020026020010151611daf565b80611a7e81613ef8565b915050611a2f565b60158181548110611a9657600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154905087565b6001546001600160a01b03163314611b025760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615611b255760405162461bcd60e51b815260040161071d90613c83565b600b54610100900460ff1615611b7d5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161071d565b600b805461ff001916610100179055565b6000426006541115611bed5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b606482015260840161071d565b600b54640100000000900460ff1615611c485760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d6574604482015260640161071d565b336000908152601760205260409020600281015480611ca95760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e7400000000000000604482015260640161071d565b611cb233612a91565b600d6000828254611cc39190613c1d565b90915550611cd2905033611468565b600f6000828254611ce39190613c1d565b9091555050600c8054906000611cf883613f13565b9190505550600082600201819055508060106000828254611d199190613c35565b9091555050815460158054839260ff16908110611d3857611d38613d71565b90600052602060002090600702016006016000828254611d589190613c35565b9091555050600954611d74906001600160a01b03163383612f15565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b03163314611dd95760405162461bcd60e51b815260040161071d90613bb7565b60155460ff821610611dfd5760405162461bcd60e51b815260040161071d90613c4c565b600b5460ff1615611e205760405162461bcd60e51b815260040161071d90613c83565b6006544210611e415760405162461bcd60e51b815260040161071d90613e3b565b6001600160a01b03919091166000908152601760205260409020805460ff191660ff909216919091179055565b6001546001600160a01b03163314611e985760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615611ebb5760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114611ee25760405162461bcd60e51b815260040161071d90613cba565b6001600160a01b03166000908152601660205260409020805460ff19169055565b600b54600090640100000000900460ff16611f6c5760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b606482015260840161071d565b6001600160a01b03831660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491939183908110611fc757611fc7613d71565b90600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905060008160800151905042600754108061204a5750600b54600160281b900460ff165b6120aa5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b606482015260840161071d565b42811061211f5760405162461bcd60e51b815260206004820152603a60248201527f536565643a2076657374696e672073746172742074696d6520666f722074686960448201527f7320636c617373206973206e6f74207374617274656420796574000000000000606482015260840161071d565b600061212a88612c9f565b90506000811161217c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161071d565b868110156121e35760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b606482015260840161071d565b60a08301516000670de0b6b3a76400006121fd838b613d87565b6122079190613da6565b6001600160a01b038b16600090815260176020526040812060010180549293508b92909190612237908490613c1d565b9250508190555088600e60008282546122509190613c1d565b9250508190555080601260008282546122699190613c1d565b9091555050600054600854612292916001600160a01b03600160281b9092048216911683612f15565b6008546122b090600160281b90046001600160a01b03168b8b612f15565b600054604080518b8152602081018490526001600160a01b03928316928d16917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a39998505050505050505050565b600b54600090819060ff16156123305760405162461bcd60e51b815260040161071d90613c83565b600b54610100900460ff16156123885760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161071d565b60085460ff1615806123a957503360009081526016602052604090205460ff165b6123f55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f20726967687473000000000000604482015260640161071d565b3360009081526017602052604081205460158054909160ff1690811061241d5761241d613d71565b90600052602060002090600702016040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050600b60059054906101000a900460ff16156124db5760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e672072656163686564000000604482015260640161071d565b6000841161252b5760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e7300000000000000604482015260640161071d565b805160c082015161253d908690613c1d565b11156125975760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b606482015260840161071d565b60208082015133600090815260179092526040909120600201546125bc908690613c1d565b11156126195760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b606482015260840161071d565b426007541015801561262d57504260065411155b61268f5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b606482015260840161071d565b600b5462010000900460ff1661279c576005546004546126af9190613c1d565b6008546040516370a0823160e01b8152306004820152600160281b9091046001600160a01b0316906370a082319060240160206040518083038186803b1580156126f857600080fd5b505afa15801561270c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127309190613bee565b101561278a5760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b606482015260840161071d565b600b805462ff00001916620100001790555b60408101516000906127b6670de0b6b3a764000087613d87565b6127c09190613da6565b33600090815260176020526040812054601580549394509192670de0b6b3a7640000929160ff169081106127f6576127f6613d71565b906000526020600020906007020160050154836128139190613d87565b61281d9190613da6565b9050600354866010546128309190613c1d565b11156128915760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b606482015260840161071d565b85601060008282546128a39190613c1d565b90915550503360009081526017602052604090205460158054889260ff169081106128d0576128d0613d71565b906000526020600020906007020160060160008282546128f09190613c1d565b9091555050600d54612903908390613c35565b600d55600f54612914908290613c35565b600f556002546010541061293857600b805464ff0000000019166401000000001790555b600354601054106129e557600b805465ff00000000001916600160281b17905560005b60155460ff821610156129e35760075460158260ff168154811061298157612981613d71565b90600052602060002090600702016004015461299d9190613c35565b6129a79042613c1d565b60158260ff16815481106129bd576129bd613d71565b6000918252602090912060046007909202010155806129db81613dc8565b91505061295b565b505b33600090815260176020526040902060020154612a1257600c8054906000612a0c83613ef8565b91905055505b3360009081526017602052604081206002018054889290612a34908490613c1d565b9091555050600954612a51906001600160a01b0316333089613237565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a2909350915050915091565b6001600160a01b03811660009081526017602052604081205460158054909160ff16908110612ac257612ac2613d71565b6000918252602080832060026007909302018201546001600160a01b0386168452601790915260409092200154612b0290670de0b6b3a764000090613d87565b612b0c9190613da6565b92915050565b6001546001600160a01b03163314612b3c5760405162461bcd60e51b815260040161071d90613bb7565b600b5460ff1615612b5f5760405162461bcd60e51b815260040161071d90613c83565b60085460ff161515600114612b865760405162461bcd60e51b815260040161071d90613cba565b60005b8251811015610a61576015548251839083908110612ba957612ba9613d71565b602002602001015160ff1610612bd15760405162461bcd60e51b815260040161071d90613c4c565b600160166000858481518110612be957612be9613d71565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550818181518110612c3a57612c3a613d71565b602002602001015160176000858481518110612c5857612c58613d71565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff9290921691909117905580612c9781613ef8565b915050612b89565b6001600160a01b03811660009081526017602090815260408083208151606081018352815460ff16808252600183015494820194909452600290910154918101919091526015805491929184919083908110612cfd57612cfd613d71565b90600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050905060008160800151905080421015612d7b5750600095945050505050565b6000612d878242613c35565b600854909150610100900463ffffffff16811015612dac575060009695505050505050565b6060830151808210612ddc578560200151612dc689612a91565b612dd09190613c35565b98975050505050505050565b600081612de88a612a91565b612df29085613d87565b612dfc9190613da6565b9050866020015181612e0e9190613c35565b9998505050505050505050565b600b546301000000900460ff1615156001141580612e4357506001546001600160a01b031633145b612ec05760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a40161071d565b8051612ed390600a9060208401906134ca565b5080604051612ee29190613f2a565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b6040516001600160a01b038316602482015260448101829052610a6190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613275565b8181878260075410612f9c5760405162461bcd60e51b815260040161071d90613de8565b6006544210612fbd5760405162461bcd60e51b815260040161071d90613e3b565b600b5460ff1615612fe05760405162461bcd60e51b815260040161071d90613c83565b67063eb89da4ed000082106130075760405162461bcd60e51b815260040161071d90613e70565b600081116130275760405162461bcd60e51b815260040161071d90613eb1565b61303287858b613189565b50506040805160e08101825297885260208801968752870194855250606086019283526080860191825260a08601908152600060c0870181815260158054600181018255925296517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47560079092029182015594517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47686015592517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47785015590517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec478840155517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec479830155517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47a82015590517f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47b90910155565b6014548211156131995760148290555b60135483101561320157826131b6670de0b6b3a764000083613d87565b6131c09190613da6565b601354670de0b6b3a7640000836003546131da9190613c35565b6131e49190613d87565b6131ee9190613da6565b6131f89190613c1d565b60045560138390555b670de0b6b3a764000060145460045461321a9190613d87565b6132249190613da6565b6005819055600454600d55600f55505050565b6040516001600160a01b038085166024830152831660448201526064810182905261326f9085906323b872dd60e01b90608401612f41565b50505050565b60006132ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166133479092919063ffffffff16565b805190915015610a6157808060200190518101906132e89190613f46565b610a615760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161071d565b60606133568484600085613360565b90505b9392505050565b6060824710156133c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161071d565b6001600160a01b0385163b6134185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161071d565b600080866001600160a01b031685876040516134349190613f2a565b60006040518083038185875af1925050503d8060008114613471576040519150601f19603f3d011682016040523d82523d6000602084013e613476565b606091505b5091509150613486828286613491565b979650505050505050565b606083156134a0575081613359565b8251156134b05782518084602001fd5b8160405162461bcd60e51b815260040161071d9190613636565b8280546134d690613cf1565b90600052602060002090601f0160209004810192826134f8576000855561353e565b82601f1061351157805160ff191683800117855561353e565b8280016001018555821561353e579182015b8281111561353e578251825591602001919060010190613523565b5061354a92915061354e565b5090565b5b8082111561354a576000815560010161354f565b80356001600160a01b038116811461357a57600080fd5b919050565b60006020828403121561359157600080fd5b61335982613563565b803560ff8116811461357a57600080fd5b600080604083850312156135be57600080fd5b6135c783613563565b91506135d56020840161359a565b90509250929050565b60005b838110156135f95781810151838201526020016135e1565b8381111561326f5750506000910152565b600081518084526136228160208601602086016135de565b601f01601f19169290920160200192915050565b602081526000613359602083018461360a565b60008060008060008060c0878903121561366257600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156136cb576136cb61368c565b604052919050565b600067ffffffffffffffff8211156136ed576136ed61368c565b5060051b60200190565b600082601f83011261370857600080fd5b8135602061371d613718836136d3565b6136a2565b82815260059290921b8401810191818101908684111561373c57600080fd5b8286015b8481101561375e5761375181613563565b8352918301918301613740565b509695505050505050565b600082601f83011261377a57600080fd5b8135602061378a613718836136d3565b82815260059290921b840181019181810190868411156137a957600080fd5b8286015b8481101561375e57803583529183019183016137ad565b803563ffffffff8116811461357a57600080fd5b801515811461097f57600080fd5b803561357a816137d8565b60008060008060008060008060008060006101608c8e03121561381357600080fd5b61381c8c613563565b9a5061382a60208d01613563565b995067ffffffffffffffff8060408e0135111561384657600080fd5b6138568e60408f01358f016136f7565b99508060608e0135111561386957600080fd5b5061387a8d60608e01358e01613769565b975060808c0135965060a08c0135955060c08c0135945061389d60e08d016137c4565b93506138ac6101008d016137c4565b92506138bb6101208d016137e6565b91506101408c013590509295989b509295989b9093969950565b60008060008060008060c087890312156138ee57600080fd5b863567ffffffffffffffff8082111561390657600080fd5b6139128a838b01613769565b9750602089013591508082111561392857600080fd5b6139348a838b01613769565b9650604089013591508082111561394a57600080fd5b6139568a838b01613769565b9550606089013591508082111561396c57600080fd5b6139788a838b01613769565b9450608089013591508082111561398e57600080fd5b61399a8a838b01613769565b935060a08901359150808211156139b057600080fd5b506139bd89828a01613769565b9150509295509295509295565b600080600080600080600060e0888a0312156139e557600080fd5b6139ee8861359a565b9960208901359950604089013598606081013598506080810135975060a0810135965060c00135945092505050565b60008060408385031215613a3057600080fd5b823567ffffffffffffffff80821115613a4857600080fd5b613a54868387016136f7565b9350602091508185013581811115613a6b57600080fd5b85019050601f81018613613a7e57600080fd5b8035613a8c613718826136d3565b81815260059190911b82018301908381019088831115613aab57600080fd5b928401925b82841015613ad057613ac18461359a565b82529284019290840190613ab0565b80955050505050509250929050565b600060208284031215613af157600080fd5b5035919050565b60008060408385031215613b0b57600080fd5b613b1483613563565b946020939093013593505050565b60006020808385031215613b3557600080fd5b823567ffffffffffffffff80821115613b4d57600080fd5b818501915085601f830112613b6157600080fd5b813581811115613b7357613b7361368c565b613b85601f8201601f191685016136a2565b91508082528684828501011115613b9b57600080fd5b8084840185840137600090820190930192909252509392505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b600060208284031215613c0057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115613c3057613c30613c07565b500190565b600082821015613c4757613c47613c07565b500390565b6020808252601c908201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b600181811c90821680613d0557607f821691505b60208210811415613d2657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604082015264617373657360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615613da157613da1613c07565b500290565b600082613dc357634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415613ddf57613ddf613c07565b60010192915050565b60208082526033908201527f536565643a2076657374696e672073746172742074696d652063616e2774206260408201527265206c657373207468616e20656e6454696d6560681b606082015260800190565b6020808252818101527f536565643a2076657374696e6720697320616c72656164792073746172746564604082015260600190565b60208082526021908201527f536565643a206665652063616e6e6f74206265206d6f7265207468616e2034356040820152602560f81b606082015260800190565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b6000600019821415613f0c57613f0c613c07565b5060010190565b600081613f2257613f22613c07565b506000190190565b60008251613f3c8184602087016135de565b9190910192915050565b600060208284031215613f5857600080fd5b8151613359816137d856fea2646970667358221220b44fbf78bd42fa0580ee00222cca1728b83dde5660fc2e7b58329875b497ebd564736f6c63430008090033",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "addClass(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "Add contributor class.",
        "params": {
          "_classCap": "The total cap of the contributor class.",
          "_classFee": "The fee for the contributor class.",
          "_classVestingStartTime": "The class vesting start time for the contributor class.",
          "_individualCap": "The personal cap of each contributor in this class.",
          "_price": "The token price for the addresses in this clas.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "addClassBatch(uint256[],uint256[],uint256[],uint256[],uint256[],uint256[])": {
        "details": "Add contributor class batch.",
        "params": {
          "_classCaps": "The total caps of the contributor class.",
          "_classFee": "The fee for the contributor class.",
          "_classVestingStartTime": "The class vesting start time for the contributor class.",
          "_individualCaps": "The personal caps of each contributor in this class.",
          "_prices": "The token prices for the addresses in this clas.",
          "_vestingDurations": "The vesting durations for this contributors class."
        }
      },
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "changeClass(uint8,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "Change parameters in the class.",
        "params": {
          "_class": "Class for changing.",
          "_classCap": "The total cap of the contributor class.",
          "_classFee": "The fee for the contributor class.",
          "_classVestingStartTime": "The class vesting start time for the contributor class.",
          "_individualCap": "The personal cap of each contributor in this class.",
          "_price": "The token price for the addresses in this clas.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist."
      },
      "feeClaimedForFunder(address)": {
        "details": "get fee claimed for funder",
        "params": {
          "_funder": "address of funder to check fee claimed"
        }
      },
      "feeForFunder(address)": {
        "details": "get fee for funder",
        "params": {
          "_funder": "address of funder to check fee"
        }
      },
      "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_endTime": "Distribution end time in unix timecode.",
          "_fee": "Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTime": "Distribution start time in unix timecode.",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.",
          "_vestingCliff": "Cliff duration in seconds.",
          "_vestingDuration": "Vesting period duration in seconds."
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "setClass(address,uint8)": {
        "details": "Set contributor class.",
        "params": {
          "_address": "Address of the contributor.",
          "_class": "Class of the contributor."
        }
      },
      "setClassBatch(address[],uint8[])": {
        "details": "Set contributor classes.",
        "params": {
          "_addresses": "Addresses of the contributors.",
          "_classes": "Classes of the contributor."
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "unwhitelist(address)": {
        "details": "Remove address from whitelist.",
        "params": {
          "buyer": "Address which needs to be unwhitelisted"
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address,uint8)": {
        "details": "Add address to whitelist.",
        "params": {
          "_buyer": "Address which needs to be whitelisted",
          "_class": "Class to which buyer will be assigned"
        }
      },
      "whitelistBatch(address[],uint8[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch",
          "_classes": "Array of classes assigned in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1025,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1027,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1029,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1031,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1033,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1035,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeAmountRequired",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1037,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1039,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1041,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 1043,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingCliff",
        "offset": 1,
        "slot": "8",
        "type": "t_uint32"
      },
      {
        "astId": 1046,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 5,
        "slot": "8",
        "type": "t_contract(IERC20)12345"
      },
      {
        "astId": 1049,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IERC20)12345"
      },
      {
        "astId": 1051,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "10",
        "type": "t_bytes_storage"
      },
      {
        "astId": 1067,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1069,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1071,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1073,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1075,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1077,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 1079,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1081,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1083,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 1085,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeRemainder",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 1087,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 1089,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1091,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeClaimed",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1093,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimalPrice",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1095,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fee",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1099,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "classes",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_struct(ContributorClass)1156_storage)dyn_storage"
      },
      {
        "astId": 1103,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1108,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)1141_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ContributorClass)1156_storage)dyn_storage": {
        "base": "t_struct(ContributorClass)1156_storage",
        "encoding": "dynamic_array",
        "label": "struct Seed.ContributorClass[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)12345": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)1141_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)1141_storage"
      },
      "t_struct(ContributorClass)1156_storage": {
        "encoding": "inplace",
        "label": "struct Seed.ContributorClass",
        "members": [
          {
            "astId": 1143,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classCap",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1145,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "individualCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1147,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1149,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1151,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classVestingStartTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1153,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1155,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classFundingCollected",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(FunderPortfolio)1141_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 1136,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "class",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1138,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1140,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}