{
  "address": "0x0564448C22484eeAE4B33C75c6f6718Fb05C3b8c",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "seedRemainder",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "TippingClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "addClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingDurations",
          "type": "uint256[]"
        },
        {
          "internalType": "address[][]",
          "name": "_allowlist",
          "type": "address[][]"
        }
      ],
      "name": "addClassAndWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingDurations",
          "type": "uint256[]"
        }
      ],
      "name": "addClassBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "changeClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTipping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "classes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classFundingCollected",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "class",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowlist",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllClasses",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "vestingDurations",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "classFundingsCollected",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_startTimeAndEndTime",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_defaultClassParameters",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "_whitelistAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tipping",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tipping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tippingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tippingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBuyableSeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "unallowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0d672ec3e63f1227a7e536c7bfe32d6d71e339d07e7a47d85ba82a30ae203234",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x0564448C22484eeAE4B33C75c6f6718Fb05C3b8c",
    "transactionIndex": 44,
    "gasUsed": "3517351",
    "logsBloom": "0x
    "blockHash": "0xe4a4ea050bf9b77ee7050268ce17ebcb414dc5c79975c359608471be16754637",
    "transactionHash": "0x0d672ec3e63f1227a7e536c7bfe32d6d71e339d07e7a47d85ba82a30ae203234",
    "logs": [],
    "blockNumber": 7722179,
    "cumulativeGasUsed": "13670699",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "cbc69086eac9506828adcda64d916b16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"seedRemainder\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"TippingClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"addClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"address[][]\",\"name\":\"_allowlist\",\"type\":\"address[][]\"}],\"name\":\"addClassAndWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingDurations\",\"type\":\"uint256[]\"}],\"name\":\"addClassBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"changeClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTipping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"classes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classFundingCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowlist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClasses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"classFundingsCollected\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_startTimeAndEndTime\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_defaultClassParameters\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"_whitelistAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tipping\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tipping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tippingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tippingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuyableSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"unallowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"addClass(bytes32,uint256,uint256,uint256,uint256)\":{\"details\":\"Add contributor class.\",\"params\":{\"_classCap\":\"The total cap of the contributor class, denominated in Wei.\",\"_className\":\"The name of the class\",\"_individualCap\":\"The personal cap of each contributor in this class, denominated in Wei.\",\"_vestingCliff\":\"The cliff duration, denominated in seconds.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"addClassBatch(bytes32[],uint256[],uint256[],uint256[],uint256[])\":{\"details\":\"Add contributor class batch.\",\"params\":{\"_classCaps\":\"The total caps of the contributor class, denominated in Wei\",\"_classNames\":\"Array of the names of the classes\",\"_individualCaps\":\"The personal caps of each contributor in this class, denominated in Wei.\",\"_vestingCliffs\":\"The cliff duration, denominated in seconds.\",\"_vestingDurations\":\"The vesting durations for this contributors class.\"}},\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)\":{\"details\":\"Change parameters in the class.\",\"params\":{\"_class\":\"Class for changing.\",\"_classCap\":\"The total cap of the contributor class, denominated in Wei.\",\"_className\":\"The name of the class\",\"_individualCap\":\"The personal cap of each contributor in this class, denominated in Wei.\",\"_vestingCliff\":\"The cliff duration, denominated in seconds.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist.\"},\"initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_defaultClassParameters\":\"Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTimeAndEndTime\":\"Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.\",\"_tipping\":\"Array of containing three parameters: - Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tipping vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t - Tipping cliff duration denominated in seconds.\\t\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token.\",\"_whitelistAddresses\":\"Array of addresses to be whitelisted for the default class, at creation time\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"unallowlist(address)\":{\"details\":\"Remove address from allowlist.\",\"params\":{\"_buyer\":\"Address which needs to be unwhitelisted\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address[],uint8[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\",\"_classes\":\"Array of classes assigned in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0\\n// PrimeDAO Seed contract. Smart contract for seed phases of liquid launch.\\n// Copyright (C) 2021 PrimeDao\\n\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.9;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    using SafeERC20 for IERC20;\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution (buyable + tipping)\\n    uint256 public totalBuyableSeed; // Amount of buyable seed tokens\\n    uint256 public tippingAmount; // Amount of seed tokens reserved for tipping\\n    uint256 public startTime;\\n    uint256 public endTime; // set by project admin, this is the last resort endTime to be applied when\\n    //     maximumReached has not been reached by then\\n    uint256 public vestingStartTime; // timestamp for when vesting starts, by default == endTime,\\n    //     otherwise when maximumReached is reached\\n    bool public permissionedSeed;\\n    // uint32 public vestingCliff;\\n    IERC20 public seedToken;\\n    IERC20 public fundingToken;\\n    bytes public metadata; // IPFS Hash\\n\\n    uint256 internal constant PRECISION = 10**18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool public closed; // is the distribution closed\\n    bool public paused; // is the distribution paused\\n    bool public isFunded; // distribution can only start when required seed tokens have been funded\\n    bool public initialized; // is this contract initialized [not necessary that it is funded]\\n    bool public minimumReached; // if the softCap[minimum limit of funding token] is reached\\n    bool public maximumReached; // if the hardCap[maximum limit of funding token] is reached\\n\\n    uint256 public totalFunderCount; // Total funders that have contributed.\\n    uint256 public seedRemainder; // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed; // Amount of seed token claimed by the user.\\n    uint256 public fundingCollected; // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn; // Amount of funding token withdrawn from the seed contract.\\n\\n    uint256 public price;\\n    Tip public tipping;\\n\\n    ContributorClass[] public classes; // Array of contributor classes\\n\\n    mapping(address => bool) public whitelisted; // funders that are whitelisted and allowed to contribute\\n    mapping(address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(\\n        address indexed recipient,\\n        uint256 indexed amountPurchased,\\n        uint256 indexed seedRemainder\\n    );\\n    event TokensClaimed(address indexed recipient, uint256 indexed amount);\\n    event FundingReclaimed(\\n        address indexed recipient,\\n        uint256 indexed amountReclaimed\\n    );\\n    event MetadataUpdated(bytes indexed metadata);\\n    event TippingClaimed(uint256 indexed amountClaimed);\\n\\n    struct FunderPortfolio {\\n        uint8 class; // Contibutor class id\\n        uint256 totalClaimed; // Total amount of seed tokens claimed\\n        uint256 fundingAmount; // Total amount of funding tokens contributed\\n        bool allowlist; // If permissioned Seed, funder needs to be allowlisted\\n    }\\n    // ToDo: add comments\\n    struct ContributorClass {\\n        bytes32 className;\\n        uint256 classCap; // Amount of tokens that can be donated for class\\n        uint256 individualCap; // Amount of tokens that can be donated by specific contributor\\n        uint256 vestingCliff;\\n        uint256 vestingDuration; // Vesting duration for class\\n        uint256 classFundingCollected; // Total amount of staked tokens\\n    }\\n\\n    // ToDo: add comment\\n    struct Tip {\\n        uint256 tippingAmount;\\n        uint256 vestingCliff;\\n        uint256 vestingDuration;\\n        uint256 totalClaimed;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    modifier classRestriction(uint256 _classCap, uint256 _individualCap) {\\n        require(\\n            classes.length + 1 < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        require(\\n            _individualCap <= _classCap && _classCap <= hardCap,\\n            \\\"Seed: caps are invalid\\\"\\n        );\\n        require(\\n            block.timestamp < startTime,\\n            \\\"Seed: vesting is already started\\\"\\n        );\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(_classCap > 0, \\\"Seed: class Cap should be bigger then 0\\\");\\n        _;\\n    }\\n\\n    modifier classBatchRestrictions(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations\\n    ) {\\n        uint256 arrayLength = _classNames.length;\\n        require(\\n            arrayLength <= 100,\\n            \\\"Seed: Can't add batch with more then 100 classes\\\"\\n        );\\n        require(\\n            classes.length + arrayLength < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        require(\\n            arrayLength == _classCaps.length &&\\n                arrayLength == _individualCaps.length &&\\n                arrayLength == _vestingCliffs.length &&\\n                arrayLength == _vestingDurations.length,\\n            \\\"Seed: All provided arrays should be same size\\\"\\n        );\\n        _;\\n    }\\n\\n    function _addClass(\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) internal classRestriction(_classCap, _individualCap) {\\n        classes.push(\\n            ContributorClass(\\n                _className,\\n                _classCap,\\n                _individualCap,\\n                _vestingCliff,\\n                _vestingDuration,\\n                0\\n            )\\n        );\\n    }\\n\\n    /**\\n      * @dev                            Initialize Seed.\\n      * @param _beneficiary             The address that recieves fees.\\n      * @param _admin                   The address of the admin of this contract. Funds contract\\n                                            and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                  Array containing two params:\\n                                            - The address of the seed token being distributed.\\n      *                                     - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds      Array containing two params:\\n                                            - the minimum funding token collection threshold in wei denomination.\\n                                            - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                   Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTimeAndEndTime     Array containing two params:\\n                                            - Distribution start time in unix timecode.\\n                                            - Distribution end time in unix timecode.\\n      * @param _defaultClassParameters  Array containing three params:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Individual buying cap for de default class, expressed in precision 10*18\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Cliff duration, denominated in seconds.\\n                                            - Vesting period duration, denominated in seconds.\\n      * @param _permissionedSeed        Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _whitelistAddresses      Array of addresses to be whitelisted for the default class, at creation time\\n      * @param _tipping                 Array of containing three parameters:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tipping vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tipping cliff duration denominated in seconds.\\t\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256[] memory _startTimeAndEndTime, // 0 = startTime; 1 = endTime\\n        uint256[] memory _defaultClassParameters, //\\n        bool _permissionedSeed,\\n        address[] memory _whitelistAddresses,\\n        uint256[] memory _tipping\\n    ) external {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        beneficiary = _beneficiary;\\n        admin = _admin;\\n        softCap = _softHardThresholds[0];\\n        hardCap = _softHardThresholds[1];\\n        startTime = _startTimeAndEndTime[0];\\n        endTime = _startTimeAndEndTime[1];\\n        vestingStartTime = endTime + 1;\\n        permissionedSeed = _permissionedSeed;\\n        seedToken = IERC20(_tokens[0]);\\n        fundingToken = IERC20(_tokens[1]);\\n        tipping = Tip(_tipping[0], _tipping[1], _tipping[2], 0); // test if this is possible like this\\n\\n        price = _price;\\n\\n        seedAmountRequired = (hardCap * PRECISION) / _price;\\n        // (seedAmountRequired*fee) / (100*FEE_PRECISION) = (seedAmountRequired*fee) / PRECISION\\n        //  where FEE_PRECISION = 10**16\\n        tippingAmount = (seedAmountRequired * _tipping[0]) / PRECISION; //ToDo: Check why calculation is done this way, and not like 2 lines above\\n\\n        // Adding default from init parameters\\n        _addClass(\\n            bytes32(\\\"\\\"),\\n            hardCap,\\n            _defaultClassParameters[0],\\n            _defaultClassParameters[1],\\n            _defaultClassParameters[2]\\n        );\\n\\n        // Add whitelist to the default class\\n        if (permissionedSeed == true && _whitelistAddresses.length > 0) {\\n            uint256 arrayLength = _whitelistAddresses.length;\\n            for (uint256 i; i < arrayLength; ++i) {\\n                _addToClass(_whitelistAddresses[i], 0); // Value 0 for the default class\\n            }\\n            _addToAllowlist(_whitelistAddresses);\\n        }\\n\\n        // ToDo: update this section with answer from biz dev about the tipping (either subtracted or added to Seed amount)\\n        seedRemainder = seedAmountRequired;\\n        totalBuyableSeed = seedRemainder;\\n        seedAmountRequired += tippingAmount;\\n    }\\n\\n    /**\\n     * @dev                           Add contributor class.\\n     * @param _className                   The name of the class\\n     * @param _classCap               The total cap of the contributor class, denominated in Wei.\\n     * @param _individualCap          The personal cap of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliff     The cliff duration, denominated in seconds.\\n     * @param _vestingDuration   The vesting duration for this contributors class.\\n     */\\n    function addClass(\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external onlyAdmin {\\n        _addClass(\\n            _className,\\n            _classCap,\\n            _individualCap,\\n            _vestingCliff,\\n            _vestingDuration\\n        );\\n    }\\n\\n    /**\\n     * @dev                     Change parameters in the class.\\n     * @param _class            Class for changing.\\n     * @param _className        The name of the class\\n     * @param _classCap         The total cap of the contributor class, denominated in Wei.\\n     * @param _individualCap    The personal cap of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliff     The cliff duration, denominated in seconds.\\n     * @param _vestingDuration  The vesting duration for this contributors class.\\n     */\\n    function changeClass(\\n        uint8 _class,\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external onlyAdmin classRestriction(_classCap, _individualCap) {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n\\n        classes[_class].className = _className;\\n        classes[_class].classCap = _classCap;\\n        classes[_class].individualCap = _individualCap;\\n        classes[_class].vestingCliff = _vestingCliff;\\n        classes[_class].vestingDuration = _vestingDuration;\\n    }\\n\\n    /**\\n     * @dev                      Add contributor class batch.\\n     * @param _classNames        Array of the names of the classes\\n     * @param _classCaps         The total caps of the contributor class, denominated in Wei\\n     * @param _individualCaps    The personal caps of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliffs     The cliff duration, denominated in seconds.\\n     * @param _vestingDurations  The vesting durations for this contributors class.\\n     */\\n    function addClassBatch(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations\\n    )\\n        external\\n        onlyAdmin\\n        classBatchRestrictions(\\n            _classNames,\\n            _classCaps,\\n            _individualCaps,\\n            _vestingCliffs,\\n            _vestingDurations\\n        )\\n    {\\n        uint256 arrayLength = _classNames.length;\\n        for (uint8 i = 0; i < arrayLength; i++) {\\n            _addClass(\\n                _classNames[i],\\n                _classCaps[i],\\n                _individualCaps[i],\\n                _vestingCliffs[i],\\n                _vestingDurations[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Buy seed tokens.\\n     * @param _fundingAmount    The amount of funding tokens to contribute.\\n     */\\n    function buy(uint256 _fundingAmount) external isActive returns (uint256) {\\n        require(\\n            !permissionedSeed || whitelisted[msg.sender],\\n            \\\"Seed: sender has no rights\\\"\\n        );\\n\\n        ContributorClass memory userClass = classes[funders[msg.sender].class];\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(_fundingAmount > 0, \\\"Seed: cannot buy 0 tokens\\\");\\n        // Checks if contributor has exceeded his personal or class cap.\\n        require(\\n            (userClass.classFundingCollected + _fundingAmount) <=\\n                userClass.classCap,\\n            \\\"Seed: maximum class funding reached\\\"\\n        );\\n\\n        require(\\n            (funders[msg.sender].fundingAmount + _fundingAmount) <=\\n                userClass.individualCap,\\n            \\\"Seed: maximum personal funding reached\\\"\\n        );\\n\\n        require(\\n            endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\"\\n        );\\n\\n        if (!isFunded) {\\n            require(\\n                // classSeedAmountRequired is an amount which is needed to be sold\\n                // So when it's reached, for others will their balance be bigger or not - doesn't matter anymore.\\n                seedToken.balanceOf(address(this)) >= seedAmountRequired, // ToDo: update this value if tipping gets subtracted from SeedAmount\\n                \\\"Seed: sufficient seeds not provided\\\"\\n            );\\n            isFunded = true;\\n        }\\n\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount * PRECISION) / price;\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require(\\n            fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\"\\n        );\\n\\n        fundingCollected += _fundingAmount;\\n        classes[funders[msg.sender].class]\\n            .classFundingCollected += _fundingAmount;\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder = seedRemainder - seedAmount;\\n        // feeRemainder = feeRemainder - feeAmount;\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = block.timestamp;\\n        }\\n\\n        //functionality of addFunder\\n        if (funders[msg.sender].fundingAmount == 0) {\\n            totalFunderCount++;\\n        }\\n        funders[msg.sender].fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n\\n        fundingToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            _fundingAmount\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount, seedRemainder);\\n\\n        return (seedAmount);\\n    }\\n\\n    /**\\n     * @dev                     Claim vested seed tokens.\\n     * @param _funder           Address of funder to calculate seconds and amount claimable\\n     * @param _claimAmount      The amount of seed token a users wants to claim.\\n     */\\n    function claim(address _funder, uint256 _claimAmount) external {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(\\n            amountClaimable >= _claimAmount,\\n            \\\"Seed: request is greater than claimable amount\\\"\\n        );\\n\\n        funders[_funder].totalClaimed += _claimAmount;\\n\\n        seedClaimed += _claimAmount;\\n\\n        seedToken.safeTransfer(_funder, _claimAmount);\\n\\n        emit TokensClaimed(_funder, _claimAmount);\\n    }\\n\\n    function claimTipping() external returns (uint256) {\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n        if (elapsedSeconds < tipping.vestingCliff) {\\n            return 0;\\n        }\\n\\n        uint256 amountClaimable;\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= tipping.vestingDuration) {\\n            amountClaimable = tipping.tippingAmount - tipping.totalClaimed;\\n        } else {\\n            // calculate claimable amount\\n            uint256 amountVested = (elapsedSeconds * tipping.tippingAmount) /\\n                tipping.vestingDuration;\\n            amountClaimable = amountVested - tipping.totalClaimed;\\n        }\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n\\n        tipping.totalClaimed += amountClaimable;\\n\\n        seedToken.safeTransfer(beneficiary, amountClaimable);\\n\\n        emit TippingClaimed(amountClaimable);\\n\\n        return amountClaimable;\\n    }\\n\\n    /**\\n     * @dev         Returns funding tokens to user.\\n     */\\n    function retrieveFundingTokens() external returns (uint256) {\\n        require(\\n            startTime <= block.timestamp,\\n            \\\"Seed: distribution haven't started\\\"\\n        );\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        classes[tokenFunder.class].classFundingCollected -= fundingAmount;\\n\\n        fundingToken.safeTransfer(msg.sender, fundingAmount);\\n\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n     * @dev                     Pause distribution.\\n     */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n     * @dev                     Unpause distribution.\\n     */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the whitelist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n     * @dev                     retrieve remaining seed tokens back to project.\\n     * @param _refundReceiver   refund receiver address\\n     */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed || maximumReached || block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require(\\n                seedToken.balanceOf(address(this)) > 0,\\n                \\\"Seed: Failed to transfer Seed Token\\\" // ToDo: better error message\\n            );\\n            // subtract tipping from Seed tokens\\n            uint256 retrievableSeedAmount = seedToken.balanceOf(address(this)) -\\n                tipping.tippingAmount;\\n            seedToken.safeTransfer(_refundReceiver, retrievableSeedAmount);\\n        } else {\\n            // seed tokens to transfer = buyable seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = totalBuyableSeed - seedRemainder;\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this)) -\\n                totalSeedDistributed;\\n            seedToken.safeTransfer(_refundReceiver, amountToTransfer);\\n        }\\n    }\\n\\n    //ToDo: add comment\\n    function addClassAndWhitelist(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations,\\n        address[][] memory _allowlist\\n    )\\n        external\\n        onlyAdmin\\n        classBatchRestrictions(\\n            _classNames,\\n            _classCaps,\\n            _individualCaps,\\n            _vestingCliffs,\\n            _vestingDurations\\n        )\\n    {\\n        //ToDo: check if we need require for permission\\n        uint256 classArrayLength = _classNames.length;\\n        uint8 currentClassId = uint8(classes.length);\\n        for (uint8 i; i < classArrayLength; ++i) {\\n            _addClass(\\n                _classNames[i],\\n                _classCaps[i],\\n                _individualCaps[i],\\n                _vestingCliffs[i],\\n                _vestingDurations[i]\\n            );\\n        }\\n\\n        uint256 ArrayLength = _allowlist.length;\\n        if (permissionedSeed) {\\n            for (uint256 i; i < ArrayLength; ++i) {\\n                _addToAllowlist(_allowlist[i]);\\n            }\\n        }\\n        for (uint256 i; i < ArrayLength; ++i) {\\n            uint256 numberOfAddresses = _allowlist[i].length;\\n            for (uint256 j; j < numberOfAddresses; ++j) {\\n                _addToClass(_allowlist[i][j], currentClassId);\\n            }\\n            ++currentClassId;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add multiple addresses to whitelist.\\n     * @param _buyers        Array of addresses to whitelist addresses in batch\\n     * @param _classes          Array of classes assigned in batch\\n     */\\n    function whitelist(address[] memory _buyers, uint8[] memory _classes)\\n        external\\n        onlyAdmin\\n    {\\n        uint256 buyersArrayLength = _buyers.length;\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n\\n        //ToDo: Check require below after bizdev decision\\n        // require(\\n        //     block.timestamp < startTime,\\n        //     \\\"Seed: vesting is already started\\\"\\n        // );\\n        if (permissionedSeed) {\\n            _addToAllowlist(_buyers);\\n        }\\n\\n        _addMultipleAdressesToClass(_buyers, _classes);\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _buyer            Address of the contributor.\\n     * @param _class              Class of the contributor.\\n     */\\n    function _addToClass(address _buyer, uint8 _class) internal {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        funders[_buyer].class = _class;\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _buyers          Address of the contributor.\\n     * @param _classes            Class of the contributor.\\n     */\\n    function _addMultipleAdressesToClass(\\n        address[] memory _buyers,\\n        uint8[] memory _classes\\n    ) internal {\\n        uint256 arrayLength = _buyers.length;\\n        require(\\n            _classes.length == arrayLength,\\n            \\\"Seed: mismatch in array length\\\"\\n        );\\n        for (uint256 i; i < arrayLength; ++i) {\\n            _addToClass(_buyers[i], _classes[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add address to allowlist.\\n     * @param _buyers        Address which needs to be whitelisted\\n     */\\n    function _addToAllowlist(address[] memory _buyers) internal {\\n        uint256 arrayLength = _buyers.length;\\n        for (uint256 i; i < arrayLength; ++i) {\\n            funders[_buyers[i]].allowlist = true;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Remove address from allowlist.\\n     * @param _buyer             Address which needs to be unwhitelisted\\n     */\\n    function unallowlist(address _buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        funders[_buyer].allowlist = true;\\n    }\\n\\n    /**\\n     * @dev                     Withdraw funds from the contract\\n     */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached || (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        fundingWithdrawn = fundingCollected;\\n        // Send the entire seed contract balance of the funding token to the sale\\u2019s admin\\n        fundingToken.safeTransfer(\\n            msg.sender,\\n            fundingToken.balanceOf(address(this))\\n        );\\n    }\\n\\n    /**\\n     * @dev                     Updates metadata.\\n     * @param _metadata         Seed contract metadata, that is IPFS Hash\\n     */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n     * @dev                     Calculates the maximum claim\\n     * @param _funder           Address of funder to find the maximum claim\\n     */\\n    function calculateClaim(address _funder) public view returns (uint256) {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        ContributorClass memory claimed = classes[currentId];\\n        // uint256 currentClassVestingStartTime = claimed.classVestingStartTime;\\n\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n        if (elapsedSeconds < claimed.vestingCliff) {\\n            return 0;\\n        }\\n\\n        uint256 currentVestingDuration = claimed.vestingDuration;\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= currentVestingDuration) {\\n            return seedAmountForFunder(_funder) - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds *\\n                seedAmountForFunder(_funder)) / currentVestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    function getAllClasses()\\n        external\\n        view\\n        returns (\\n            bytes32[] memory classNames,\\n            uint256[] memory classCaps,\\n            uint256[] memory individualCaps,\\n            uint256[] memory vestingCliffs,\\n            uint256[] memory vestingDurations,\\n            uint256[] memory classFundingsCollected\\n        )\\n    {\\n        uint256 numberOfClasses = classes.length;\\n        classNames = new bytes32[](numberOfClasses);\\n        classCaps = new uint256[](numberOfClasses);\\n        individualCaps = new uint256[](numberOfClasses);\\n        vestingCliffs = new uint256[](numberOfClasses);\\n        vestingDurations = new uint256[](numberOfClasses);\\n        classFundingsCollected = new uint256[](numberOfClasses);\\n        for (uint256 i; i < numberOfClasses; ++i) {\\n            ContributorClass storage class = classes[i];\\n            classNames[i] = class.className;\\n            classCaps[i] = class.classCap;\\n            individualCaps[i] = class.individualCap;\\n            vestingCliffs[i] = class.vestingCliff;\\n            vestingDurations[i] = class.vestingDuration;\\n            classFundingsCollected[i] = class.classFundingCollected;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     get seed amount for funder\\n     * @param _funder           address of funder to seed amount\\n     */\\n    function seedAmountForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].fundingAmount * PRECISION) / price;\\n    }\\n}\\n\",\"keccak256\":\"0x1bce17ba94a3e7d03548c52c8e0e6efad6ede572da0ea23a37ce0029467d2327\",\"license\":\"GPL-3.0\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613eac806100206000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c8063817dbe9f11610182578063d936547e116100e9578063e5ee7728116100a2578063f851a4401161007c578063f851a44014610670578063fb86a40414610683578063fc582d411461068c578063fd3cfafd1461069f57600080fd5b8063e5ee772814610614578063ea3455401461064a578063ec11d7261461065d57600080fd5b8063d936547e14610590578063d96a094a146105b3578063da3b2cc6146105c6578063dc4b9e38146105d9578063e2e266d0146105ec578063e565eb4c146105ff57600080fd5b8063a8660a781161013b578063a8660a781461053c578063aad3ec9614610545578063bad9355614610558578063bc0f5f8414610561578063c210b92d1461056a578063d68097581461057d57600080fd5b8063817dbe9f146104d157806383d59e00146105115780638456cb591461051a5780638a2448aa14610522578063906a26e01461052a578063a035b1fe1461053357600080fd5b80633f4ba83a116102415780636bda75dd116101fa57806376f210c9116101d457806376f210c91461049957806378065f27146104a257806378e97925146104b55780637c654303146104be57600080fd5b80636bda75dd146104645780636cb1bc611461047e5780636dae16ee1461048657600080fd5b80633f4ba83a1461042357806343d726d61461042b57806347d02f1b14610433578063597e1fb51461043c5780635c975abb146104495780635e9777e81461045b57600080fd5b8063311f848311610293578063311f8483146103ad5780633197cbb6146103dd57806338af3eed146103e6578063392f37e9146103f95780633ccfd60b1461040e5780633dba9e411461041657600080fd5b8063031b3677146102db57806303aabe31146103405780630826d2c714610355578063117a36d11461036c578063158ef93e146103905780631cfe562e146103a4575b600080fd5b6103156102e93660046132b9565b601a60205260009081526040902080546001820154600283015460039093015460ff9283169391921684565b6040805160ff9095168552602085019390935291830152151560608201526080015b60405180910390f35b61035361034e3660046132b9565b6106b2565b005b61035e600f5481565b604051908152602001610337565b600d5461038090600160281b900460ff1681565b6040519015158152602001610337565b600d54610380906301000000900460ff1681565b61035e60115481565b600a546103c59061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610337565b61035e60085481565b6000546103c5906001600160a01b031681565b610401610a14565b604051610337919061332c565b610353610aa2565b600a546103809060ff1681565b610353610c23565b610353610cd8565b61035e60105481565b600d546103809060ff1681565b600d5461038090610100900460ff1681565b61035e600e5481565b61046c610d35565b6040516103379695949392919061337a565b61035e610ffc565b6103536104943660046134f9565b61117a565b61035e60065481565b600b546103c5906001600160a01b031681565b61035e60075481565b600d546103809062010000900460ff1681565b6104e46104df3660046135ca565b61130d565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610337565b61035e60125481565b610353611353565b61035e611409565b61035e60025481565b61035e60135481565b61035e60095481565b6103536105533660046135e3565b611602565b61035e60055481565b61035e60045481565b61035361057836600461360d565b611801565b61035361058b3660046132b9565b61183f565b61038061059e3660046132b9565b60196020526000908152604090205460ff1681565b61035e6105c13660046135ca565b61190a565b6103536105d4366004613729565b611f80565b61035e6105e73660046132b9565b6121f6565b6103536105fa36600461382e565b61223b565b600d5461038090640100000000900460ff1681565b60145460155460165460175461062a9392919084565b604080519485526020850193909352918301526060820152608001610337565b61035e6106583660046132b9565b6122a8565b61035361066b366004613908565b61241a565b6001546103c5906001600160a01b031681565b61035e60035481565b61035361069a366004613a3b565b6127cc565b6103536106ad366004613acf565b6128c6565b6001546001600160a01b031633146106e55760405162461bcd60e51b81526004016106dc90613b19565b60405180910390fd5b600d5460ff16806106ff5750600d54600160281b900460ff165b8061070c57506008544210155b6107af5760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c4016106dc565b600d54640100000000900460ff1661094d57600a546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a082319060240160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108429190613b50565b1161089b5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b60648201526084016106dc565b601454600a546040516370a0823160e01b81523060048201526000929161010090046001600160a01b0316906370a082319060240160206040518083038186803b1580156108e857600080fd5b505afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190613b50565b61092a9190613b7f565b600a549091506109499061010090046001600160a01b03168383612b48565b5050565b6000600f5460055461095f9190613b7f565b600a546040516370a0823160e01b8152306004820152919250600091839161010090046001600160a01b0316906370a082319060240160206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190613b50565b6109ef9190613b7f565b600a54909150610a0e9061010090046001600160a01b03168483612b48565b50505b50565b600c8054610a2190613b96565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4d90613b96565b8015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b505050505081565b6001546001600160a01b03163314610acc5760405162461bcd60e51b81526004016106dc90613b19565b600d54600160281b900460ff1680610afb5750600d54640100000000900460ff168015610afb57506008544210155b610b875760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a4016106dc565b601154601255600b546040516370a0823160e01b8152306004820152610c219133916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bd657600080fd5b505afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190613b50565b600b546001600160a01b03169190612b48565b565b6001546001600160a01b03163314610c4d5760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff16151560011415610c755760405162461bcd60e51b81526004016106dc90613bd1565b600d5460ff610100909104161515600114610ccb5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106dc565b600d805461ff0019169055565b6001546001600160a01b03163314610d025760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff1615610d255760405162461bcd60e51b81526004016106dc90613bd1565b600d805461ffff19166001179055565b60608060608060608060006018805490509050806001600160401b03811115610d6057610d60613425565b604051908082528060200260200182016040528015610d89578160200160208202803683370190505b509650806001600160401b03811115610da457610da4613425565b604051908082528060200260200182016040528015610dcd578160200160208202803683370190505b509550806001600160401b03811115610de857610de8613425565b604051908082528060200260200182016040528015610e11578160200160208202803683370190505b509450806001600160401b03811115610e2c57610e2c613425565b604051908082528060200260200182016040528015610e55578160200160208202803683370190505b509350806001600160401b03811115610e7057610e70613425565b604051908082528060200260200182016040528015610e99578160200160208202803683370190505b509250806001600160401b03811115610eb457610eb4613425565b604051908082528060200260200182016040528015610edd578160200160208202803683370190505b50915060005b81811015610ff257600060188281548110610f0057610f00613c08565b906000526020600020906006020190508060000154898381518110610f2757610f27613c08565b6020026020010181815250508060010154888381518110610f4a57610f4a613c08565b6020026020010181815250508060020154878381518110610f6d57610f6d613c08565b6020026020010181815250508060030154868381518110610f9057610f90613c08565b6020026020010181815250508060040154858381518110610fb357610fb3613c08565b6020026020010181815250508060050154848381518110610fd657610fd6613c08565b602090810291909101015250610feb81613c1e565b9050610ee3565b5050909192939495565b600060095442101561100e5750600090565b4260085410806110275750600d54600160281b900460ff165b6110435760405162461bcd60e51b81526004016106dc90613c39565b6000600954426110539190613b7f565b60155490915081101561106857600091505090565b601654600090821061108b576017546014546110849190613b7f565b90506110bd565b6016546014546000919061109f9085613c84565b6110a99190613ca3565b6017549091506110b99082613b7f565b9150505b6000811161110d5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106dc565b80601460030160008282546111229190613cc5565b9091555050600054600a54611149916001600160a01b036101009092048216911683612b48565b60405181907f3fde5a54858711118781b59cb6d7ba8ed09c4736d8def0f9653966b7e7423f9f90600090a292915050565b6001546001600160a01b031633146111a45760405162461bcd60e51b81526004016106dc90613b19565b848484848460008551905060648111156111d05760405162461bcd60e51b81526004016106dc90613cdd565b601854610100906111e2908390613cc5565b106111ff5760405162461bcd60e51b81526004016106dc90613d2d565b84518114801561120f5750835181145b801561121b5750825181145b80156112275750815181145b6112435760405162461bcd60e51b81526004016106dc90613d72565b8a5160005b818160ff1610156112fe576112ec8d8260ff168151811061126b5761126b613c08565b60200260200101518d8360ff168151811061128857611288613c08565b60200260200101518d8460ff16815181106112a5576112a5613c08565b60200260200101518d8560ff16815181106112c2576112c2613c08565b60200260200101518d8660ff16815181106112df576112df613c08565b6020026020010151612bab565b806112f681613dbf565b915050611248565b50505050505050505050505050565b6018818154811061131d57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909286565b6001546001600160a01b0316331461137d5760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff16156113a05760405162461bcd60e51b81526004016106dc90613bd1565b600d54610100900460ff16156113f85760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106dc565b600d805461ff001916610100179055565b60004260075411156114685760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106dc565b600d54640100000000900460ff16156114c35760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d657460448201526064016106dc565b336000908152601a602052604090206002810154806115245760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106dc565b61152d336121f6565b600f600082825461153e9190613cc5565b9091555050600e805490600061155383613ddf565b91905055506000826002018190555080601160008282546115749190613b7f565b9091555050815460188054839260ff1690811061159357611593613c08565b906000526020600020906006020160050160008282546115b39190613b7f565b9091555050600b546115cf906001600160a01b03163383612b48565b604051819033907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b69106495090600090a392915050565b600d54640100000000900460ff166116685760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b60648201526084016106dc565b4260085410806116815750600d54600160281b900460ff165b61169d5760405162461bcd60e51b81526004016106dc90613c39565b60006116a8836122a8565b9050600081116116fa5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106dc565b818110156117615760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106dc565b6001600160a01b0383166000908152601a60205260408120600101805484929061178c908490613cc5565b9250508190555081601060008282546117a59190613cc5565b9091555050600a546117c69061010090046001600160a01b03168484612b48565b60405182906001600160a01b038516907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43090600090a3505050565b6001546001600160a01b0316331461182b5760405162461bcd60e51b81526004016106dc90613b19565b6118388585858585612bab565b5050505050565b6001546001600160a01b031633146118695760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff161561188c5760405162461bcd60e51b81526004016106dc90613bd1565b600a5460ff1615156001146118e35760405162461bcd60e51b815260206004820152601d60248201527f536565643a2073656564206973206e6f742077686974656c697374656400000060448201526064016106dc565b6001600160a01b03166000908152601a60205260409020600301805460ff19166001179055565b600d5460009060ff16156119305760405162461bcd60e51b81526004016106dc90613bd1565b600d54610100900460ff16156119885760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106dc565b600a5460ff1615806119a957503360009081526019602052604090205460ff165b6119f55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106dc565b336000908152601a602052604081205460188054909160ff16908110611a1d57611a1d613c08565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050600d60059054906101000a900460ff1615611ad15760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106dc565b60008311611b215760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e730000000000000060448201526064016106dc565b8060200151838260a00151611b369190613cc5565b1115611b905760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b60648201526084016106dc565b604080820151336000908152601a6020529190912060020154611bb4908590613cc5565b1115611c115760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b60648201526084016106dc565b4260085410158015611c2557504260075411155b611c875760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106dc565b600d5462010000900460ff16611d8a5760048054600a546040516370a0823160e01b8152309381019390935290916101009091046001600160a01b0316906370a082319060240160206040518083038186803b158015611ce657600080fd5b505afa158015611cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1e9190613b50565b1015611d785760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106dc565b600d805462ff00001916620100001790555b601354600090611da2670de0b6b3a764000086613c84565b611dac9190613ca3565b905060035484601154611dbf9190613cc5565b1115611e205760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106dc565b8360116000828254611e329190613cc5565b9091555050336000908152601a602052604090205460188054869260ff16908110611e5f57611e5f613c08565b90600052602060002090600602016005016000828254611e7f9190613cc5565b9091555050600f54611e92908290613b7f565b600f5560025460115410611eb657600d805464ff0000000019166401000000001790555b60035460115410611edb57600d805465ff00000000001916600160281b179055426009555b336000908152601a6020526040902060020154611f0857600e8054906000611f0283613c1e565b91905055505b336000908152601a602052604081206002018054869290611f2a908490613cc5565b9091555050600b54611f47906001600160a01b0316333087612df2565b600f54604051829033907fda8c9af77929af2caa4dea1f45f48f246846d971e045df75beb9155709769e1290600090a49150505b919050565b6001546001600160a01b03163314611faa5760405162461bcd60e51b81526004016106dc90613b19565b85858585856000855190506064811115611fd65760405162461bcd60e51b81526004016106dc90613cdd565b60185461010090611fe8908390613cc5565b106120055760405162461bcd60e51b81526004016106dc90613d2d565b8451811480156120155750835181145b80156120215750825181145b801561202d5750815181145b6120495760405162461bcd60e51b81526004016106dc90613d72565b8b5160185460005b828160ff1610156120f8576120e88f8260ff168151811061207457612074613c08565b60200260200101518f8360ff168151811061209157612091613c08565b60200260200101518f8460ff16815181106120ae576120ae613c08565b60200260200101518f8560ff16815181106120cb576120cb613c08565b60200260200101518f8660ff16815181106112df576112df613c08565b6120f181613dbf565b9050612051565b508851600a5460ff16156121455760005b81811015612143576121338b828151811061212657612126613c08565b6020026020010151612e30565b61213c81613c1e565b9050612109565b505b60005b818110156121e45760008b828151811061216457612164613c08565b602002602001015151905060005b818110156121c6576121b68d848151811061218f5761218f613c08565b602002602001015182815181106121a8576121a8613c08565b602002602001015186612e9a565b6121bf81613c1e565b9050612172565b506121d084613dbf565b935050806121dd90613c1e565b9050612148565b50505050505050505050505050505050565b6013546001600160a01b0382166000908152601a602052604081206002015490919061222b90670de0b6b3a764000090613c84565b6122359190613ca3565b92915050565b6001546001600160a01b031633146122655760405162461bcd60e51b81526004016106dc90613b19565b8151600d5460ff161561228a5760405162461bcd60e51b81526004016106dc90613bd1565b600a5460ff161561229e5761229e83612e30565b610a0e8383612f1b565b6001600160a01b0381166000908152601a602090815260408083208151608081018352815460ff90811680835260018401549583019590955260028301549382019390935260039091015490911615156060820152601880549192918491908390811061231757612317613c08565b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905060095442101561238357506000949350505050565b6000600954426123939190613b7f565b905081606001518110156123ad5750600095945050505050565b60808201518082106123dc5784602001516123c7886121f6565b6123d19190613b7f565b979650505050505050565b6000816123e8896121f6565b6123f29085613c84565b6123fc9190613ca3565b905085602001518161240e9190613b7f565b98975050505050505050565b600d546301000000900460ff161561247f5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106dc565b600d805463ff00000019166301000000179055600080546001600160a01b03808d166001600160a01b031992831617835560018054918d169190921617905587518891906124cf576124cf613c08565b6020026020010151600281905550866001815181106124f0576124f0613c08565b60200260200101516003819055508460008151811061251157612511613c08565b60200260200101516007819055508460018151811061253257612532613c08565b6020026020010151600881905550600854600161254f9190613cc5565b600955600a805460ff19168415151790558751889060009061257357612573613c08565b6020026020010151600a60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550876001815181106125b4576125b4613c08565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405180608001604052808260008151811061260057612600613c08565b602002602001015181526020018260018151811061262057612620613c08565b602002602001015181526020018260028151811061264057612640613c08565b602090810291909101810151825260009181019190915281516014558101516015556040810151601655606001516017556013869055600354869061268e90670de0b6b3a764000090613c84565b6126989190613ca3565b600481905550670de0b6b3a7640000816000815181106126ba576126ba613c08565b60200260200101516004546126cf9190613c84565b6126d99190613ca3565b6006819055506127306000600354866000815181106126fa576126fa613c08565b60200260200101518760018151811061271557612715613c08565b6020026020010151886002815181106112df576112df613c08565b600a5460ff1615156001148015612748575060008251115b1561279a57815160005b8181101561278e5761277e84828151811061276f5761276f613c08565b60200260200101516000612e9a565b61278781613c1e565b9050612752565b5061279883612e30565b505b60048054600f819055600581905560065491906000906127bb908490613cc5565b909155505050505050505050505050565b600d546301000000900460ff16151560011415806127f457506001546001600160a01b031633145b6128715760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106dc565b805161288490600c906020840190613209565b50806040516128939190613df6565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b6001546001600160a01b031633146128f05760405162461bcd60e51b81526004016106dc90613b19565b6018548490849061010090612906906001613cc5565b106129235760405162461bcd60e51b81526004016106dc90613d2d565b81811115801561293557506003548211155b61297a5760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106dc565b60075442106129cb5760405162461bcd60e51b815260206004820181905260248201527f536565643a2076657374696e6720697320616c7265616479207374617274656460448201526064016106dc565b600d5460ff16156129ee5760405162461bcd60e51b81526004016106dc90613bd1565b60008211612a0e5760405162461bcd60e51b81526004016106dc90613e12565b60185460ff891610612a625760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e0000000060448201526064016106dc565b8660188960ff1681548110612a7957612a79613c08565b9060005260206000209060060201600001819055508560188960ff1681548110612aa557612aa5613c08565b9060005260206000209060060201600101819055508460188960ff1681548110612ad157612ad1613c08565b9060005260206000209060060201600201819055508360188960ff1681548110612afd57612afd613c08565b9060005260206000209060060201600301819055508260188960ff1681548110612b2957612b29613c08565b9060005260206000209060060201600401819055505050505050505050565b6040516001600160a01b038316602482015260448101829052610a0e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612fc4565b6018548490849061010090612bc1906001613cc5565b10612bde5760405162461bcd60e51b81526004016106dc90613d2d565b818111158015612bf057506003548211155b612c355760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106dc565b6007544210612c865760405162461bcd60e51b815260206004820181905260248201527f536565643a2076657374696e6720697320616c7265616479207374617274656460448201526064016106dc565b600d5460ff1615612ca95760405162461bcd60e51b81526004016106dc90613bd1565b60008211612cc95760405162461bcd60e51b81526004016106dc90613e12565b50506040805160c0810182529586526020860194855285019283526060850191825260808501908152600060a0860181815260188054600181018255925295517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e60069092029182015593517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2f85015591517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d30840155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d31830155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3282015590517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3390910155565b6040516001600160a01b0380851660248301528316604482015260648101829052612e2a9085906323b872dd60e01b90608401612b74565b50505050565b805160005b81811015610a0e576001601a6000858481518110612e5557612e55613c08565b6020908102919091018101516001600160a01b03168252810191909152604001600020600301805460ff1916911515919091179055612e9381613c1e565b9050612e35565b60185460ff821610612eee5760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e0000000060448201526064016106dc565b6001600160a01b03919091166000908152601a60205260409020805460ff191660ff909216919091179055565b815181518114612f6d5760405162461bcd60e51b815260206004820152601e60248201527f536565643a206d69736d6174636820696e206172726179206c656e677468000060448201526064016106dc565b60005b81811015612e2a57612fb4848281518110612f8d57612f8d613c08565b6020026020010151848381518110612fa757612fa7613c08565b6020026020010151612e9a565b612fbd81613c1e565b9050612f70565b6000613019826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130969092919063ffffffff16565b805190915015610a0e57808060200190518101906130379190613e59565b610a0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106dc565b60606130a584846000856130af565b90505b9392505050565b6060824710156131105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106dc565b6001600160a01b0385163b6131675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106dc565b600080866001600160a01b031685876040516131839190613df6565b60006040518083038185875af1925050503d80600081146131c0576040519150601f19603f3d011682016040523d82523d6000602084013e6131c5565b606091505b50915091506123d1828286606083156131df5750816130a8565b8251156131ef5782518084602001fd5b8160405162461bcd60e51b81526004016106dc919061332c565b82805461321590613b96565b90600052602060002090601f016020900481019282613237576000855561327d565b82601f1061325057805160ff191683800117855561327d565b8280016001018555821561327d579182015b8281111561327d578251825591602001919060010190613262565b5061328992915061328d565b5090565b5b80821115613289576000815560010161328e565b80356001600160a01b0381168114611f7b57600080fd5b6000602082840312156132cb57600080fd5b6130a8826132a2565b60005b838110156132ef5781810151838201526020016132d7565b83811115612e2a5750506000910152565b600081518084526133188160208601602086016132d4565b601f01601f19169290920160200192915050565b6020815260006130a86020830184613300565b600081518084526020808501945080840160005b8381101561336f57815187529582019590820190600101613353565b509495945050505050565b60c0808252875190820181905260009060209060e0840190828b01845b828110156133b357815184529284019290840190600101613397565b505050838103828501526133c7818a61333f565b91505082810360408401526133dc818861333f565b905082810360608401526133f0818761333f565b90508281036080840152613404818661333f565b905082810360a0840152613418818561333f565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561346357613463613425565b604052919050565b60006001600160401b0382111561348457613484613425565b5060051b60200190565b600082601f83011261349f57600080fd5b813560206134b46134af8361346b565b61343b565b82815260059290921b840181019181810190868411156134d357600080fd5b8286015b848110156134ee57803583529183019183016134d7565b509695505050505050565b600080600080600060a0868803121561351157600080fd5b85356001600160401b038082111561352857600080fd5b61353489838a0161348e565b9650602088013591508082111561354a57600080fd5b61355689838a0161348e565b9550604088013591508082111561356c57600080fd5b61357889838a0161348e565b9450606088013591508082111561358e57600080fd5b61359a89838a0161348e565b935060808801359150808211156135b057600080fd5b506135bd8882890161348e565b9150509295509295909350565b6000602082840312156135dc57600080fd5b5035919050565b600080604083850312156135f657600080fd5b6135ff836132a2565b946020939093013593505050565b600080600080600060a0868803121561362557600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600082601f83011261365957600080fd5b813560206136696134af8361346b565b82815260059290921b8401810191818101908684111561368857600080fd5b8286015b848110156134ee5761369d816132a2565b835291830191830161368c565b600082601f8301126136bb57600080fd5b813560206136cb6134af8361346b565b82815260059290921b840181019181810190868411156136ea57600080fd5b8286015b848110156134ee5780356001600160401b0381111561370d5760008081fd5b61371b8986838b0101613648565b8452509183019183016136ee565b60008060008060008060c0878903121561374257600080fd5b86356001600160401b038082111561375957600080fd5b6137658a838b0161348e565b9750602089013591508082111561377b57600080fd5b6137878a838b0161348e565b9650604089013591508082111561379d57600080fd5b6137a98a838b0161348e565b955060608901359150808211156137bf57600080fd5b6137cb8a838b0161348e565b945060808901359150808211156137e157600080fd5b6137ed8a838b0161348e565b935060a089013591508082111561380357600080fd5b5061381089828a016136aa565b9150509295509295509295565b803560ff81168114611f7b57600080fd5b6000806040838503121561384157600080fd5b82356001600160401b038082111561385857600080fd5b61386486838701613648565b935060209150818501358181111561387b57600080fd5b85019050601f8101861361388e57600080fd5b803561389c6134af8261346b565b81815260059190911b820183019083810190888311156138bb57600080fd5b928401925b828410156138e0576138d18461381d565b825292840192908401906138c0565b80955050505050509250929050565b8015158114610a1157600080fd5b8035611f7b816138ef565b6000806000806000806000806000806101408b8d03121561392857600080fd5b6139318b6132a2565b995061393f60208c016132a2565b985060408b01356001600160401b038082111561395b57600080fd5b6139678e838f01613648565b995060608d013591508082111561397d57600080fd5b6139898e838f0161348e565b985060808d0135975060a08d01359150808211156139a657600080fd5b6139b28e838f0161348e565b965060c08d01359150808211156139c857600080fd5b6139d48e838f0161348e565b95506139e260e08e016138fd565b94506101008d01359150808211156139f957600080fd5b613a058e838f01613648565b93506101208d0135915080821115613a1c57600080fd5b50613a298d828e0161348e565b9150509295989b9194979a5092959850565b60006020808385031215613a4e57600080fd5b82356001600160401b0380821115613a6557600080fd5b818501915085601f830112613a7957600080fd5b813581811115613a8b57613a8b613425565b613a9d601f8201601f1916850161343b565b91508082528684828501011115613ab357600080fd5b8084840185840137600090820190930192909252509392505050565b60008060008060008060c08789031215613ae857600080fd5b613af18761381d565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b600060208284031215613b6257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015613b9157613b91613b69565b500390565b600181811c90821680613baa57607f821691505b60208210811415613bcb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613c3257613c32613b69565b5060010190565b6020808252602b908201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960408201526a195d08199a5b9a5cda195960aa1b606082015260800190565b6000816000190483118215151615613c9e57613c9e613b69565b500290565b600082613cc057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115613cd857613cd8613b69565b500190565b60208082526030908201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060408201526f7468656e2031303020636c617373657360801b606082015260800190565b60208082526025908201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604082015264617373657360d81b606082015260800190565b6020808252602d908201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460408201526c2062652073616d652073697a6560981b606082015260800190565b600060ff821660ff811415613dd657613dd6613b69565b60010192915050565b600081613dee57613dee613b69565b506000190190565b60008251613e088184602087016132d4565b9190910192915050565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b600060208284031215613e6b57600080fd5b81516130a8816138ef56fea2646970667358221220e0eef468ecce39d65075bc2bfeccf34153504d3bc511e05f589b7f64c5dd965064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d65760003560e01c8063817dbe9f11610182578063d936547e116100e9578063e5ee7728116100a2578063f851a4401161007c578063f851a44014610670578063fb86a40414610683578063fc582d411461068c578063fd3cfafd1461069f57600080fd5b8063e5ee772814610614578063ea3455401461064a578063ec11d7261461065d57600080fd5b8063d936547e14610590578063d96a094a146105b3578063da3b2cc6146105c6578063dc4b9e38146105d9578063e2e266d0146105ec578063e565eb4c146105ff57600080fd5b8063a8660a781161013b578063a8660a781461053c578063aad3ec9614610545578063bad9355614610558578063bc0f5f8414610561578063c210b92d1461056a578063d68097581461057d57600080fd5b8063817dbe9f146104d157806383d59e00146105115780638456cb591461051a5780638a2448aa14610522578063906a26e01461052a578063a035b1fe1461053357600080fd5b80633f4ba83a116102415780636bda75dd116101fa57806376f210c9116101d457806376f210c91461049957806378065f27146104a257806378e97925146104b55780637c654303146104be57600080fd5b80636bda75dd146104645780636cb1bc611461047e5780636dae16ee1461048657600080fd5b80633f4ba83a1461042357806343d726d61461042b57806347d02f1b14610433578063597e1fb51461043c5780635c975abb146104495780635e9777e81461045b57600080fd5b8063311f848311610293578063311f8483146103ad5780633197cbb6146103dd57806338af3eed146103e6578063392f37e9146103f95780633ccfd60b1461040e5780633dba9e411461041657600080fd5b8063031b3677146102db57806303aabe31146103405780630826d2c714610355578063117a36d11461036c578063158ef93e146103905780631cfe562e146103a4575b600080fd5b6103156102e93660046132b9565b601a60205260009081526040902080546001820154600283015460039093015460ff9283169391921684565b6040805160ff9095168552602085019390935291830152151560608201526080015b60405180910390f35b61035361034e3660046132b9565b6106b2565b005b61035e600f5481565b604051908152602001610337565b600d5461038090600160281b900460ff1681565b6040519015158152602001610337565b600d54610380906301000000900460ff1681565b61035e60115481565b600a546103c59061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610337565b61035e60085481565b6000546103c5906001600160a01b031681565b610401610a14565b604051610337919061332c565b610353610aa2565b600a546103809060ff1681565b610353610c23565b610353610cd8565b61035e60105481565b600d546103809060ff1681565b600d5461038090610100900460ff1681565b61035e600e5481565b61046c610d35565b6040516103379695949392919061337a565b61035e610ffc565b6103536104943660046134f9565b61117a565b61035e60065481565b600b546103c5906001600160a01b031681565b61035e60075481565b600d546103809062010000900460ff1681565b6104e46104df3660046135ca565b61130d565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610337565b61035e60125481565b610353611353565b61035e611409565b61035e60025481565b61035e60135481565b61035e60095481565b6103536105533660046135e3565b611602565b61035e60055481565b61035e60045481565b61035361057836600461360d565b611801565b61035361058b3660046132b9565b61183f565b61038061059e3660046132b9565b60196020526000908152604090205460ff1681565b61035e6105c13660046135ca565b61190a565b6103536105d4366004613729565b611f80565b61035e6105e73660046132b9565b6121f6565b6103536105fa36600461382e565b61223b565b600d5461038090640100000000900460ff1681565b60145460155460165460175461062a9392919084565b604080519485526020850193909352918301526060820152608001610337565b61035e6106583660046132b9565b6122a8565b61035361066b366004613908565b61241a565b6001546103c5906001600160a01b031681565b61035e60035481565b61035361069a366004613a3b565b6127cc565b6103536106ad366004613acf565b6128c6565b6001546001600160a01b031633146106e55760405162461bcd60e51b81526004016106dc90613b19565b60405180910390fd5b600d5460ff16806106ff5750600d54600160281b900460ff165b8061070c57506008544210155b6107af5760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c4016106dc565b600d54640100000000900460ff1661094d57600a546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a082319060240160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108429190613b50565b1161089b5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b60648201526084016106dc565b601454600a546040516370a0823160e01b81523060048201526000929161010090046001600160a01b0316906370a082319060240160206040518083038186803b1580156108e857600080fd5b505afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190613b50565b61092a9190613b7f565b600a549091506109499061010090046001600160a01b03168383612b48565b5050565b6000600f5460055461095f9190613b7f565b600a546040516370a0823160e01b8152306004820152919250600091839161010090046001600160a01b0316906370a082319060240160206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190613b50565b6109ef9190613b7f565b600a54909150610a0e9061010090046001600160a01b03168483612b48565b50505b50565b600c8054610a2190613b96565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4d90613b96565b8015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b505050505081565b6001546001600160a01b03163314610acc5760405162461bcd60e51b81526004016106dc90613b19565b600d54600160281b900460ff1680610afb5750600d54640100000000900460ff168015610afb57506008544210155b610b875760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a4016106dc565b601154601255600b546040516370a0823160e01b8152306004820152610c219133916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bd657600080fd5b505afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190613b50565b600b546001600160a01b03169190612b48565b565b6001546001600160a01b03163314610c4d5760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff16151560011415610c755760405162461bcd60e51b81526004016106dc90613bd1565b600d5460ff610100909104161515600114610ccb5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106dc565b600d805461ff0019169055565b6001546001600160a01b03163314610d025760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff1615610d255760405162461bcd60e51b81526004016106dc90613bd1565b600d805461ffff19166001179055565b60608060608060608060006018805490509050806001600160401b03811115610d6057610d60613425565b604051908082528060200260200182016040528015610d89578160200160208202803683370190505b509650806001600160401b03811115610da457610da4613425565b604051908082528060200260200182016040528015610dcd578160200160208202803683370190505b509550806001600160401b03811115610de857610de8613425565b604051908082528060200260200182016040528015610e11578160200160208202803683370190505b509450806001600160401b03811115610e2c57610e2c613425565b604051908082528060200260200182016040528015610e55578160200160208202803683370190505b509350806001600160401b03811115610e7057610e70613425565b604051908082528060200260200182016040528015610e99578160200160208202803683370190505b509250806001600160401b03811115610eb457610eb4613425565b604051908082528060200260200182016040528015610edd578160200160208202803683370190505b50915060005b81811015610ff257600060188281548110610f0057610f00613c08565b906000526020600020906006020190508060000154898381518110610f2757610f27613c08565b6020026020010181815250508060010154888381518110610f4a57610f4a613c08565b6020026020010181815250508060020154878381518110610f6d57610f6d613c08565b6020026020010181815250508060030154868381518110610f9057610f90613c08565b6020026020010181815250508060040154858381518110610fb357610fb3613c08565b6020026020010181815250508060050154848381518110610fd657610fd6613c08565b602090810291909101015250610feb81613c1e565b9050610ee3565b5050909192939495565b600060095442101561100e5750600090565b4260085410806110275750600d54600160281b900460ff165b6110435760405162461bcd60e51b81526004016106dc90613c39565b6000600954426110539190613b7f565b60155490915081101561106857600091505090565b601654600090821061108b576017546014546110849190613b7f565b90506110bd565b6016546014546000919061109f9085613c84565b6110a99190613ca3565b6017549091506110b99082613b7f565b9150505b6000811161110d5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106dc565b80601460030160008282546111229190613cc5565b9091555050600054600a54611149916001600160a01b036101009092048216911683612b48565b60405181907f3fde5a54858711118781b59cb6d7ba8ed09c4736d8def0f9653966b7e7423f9f90600090a292915050565b6001546001600160a01b031633146111a45760405162461bcd60e51b81526004016106dc90613b19565b848484848460008551905060648111156111d05760405162461bcd60e51b81526004016106dc90613cdd565b601854610100906111e2908390613cc5565b106111ff5760405162461bcd60e51b81526004016106dc90613d2d565b84518114801561120f5750835181145b801561121b5750825181145b80156112275750815181145b6112435760405162461bcd60e51b81526004016106dc90613d72565b8a5160005b818160ff1610156112fe576112ec8d8260ff168151811061126b5761126b613c08565b60200260200101518d8360ff168151811061128857611288613c08565b60200260200101518d8460ff16815181106112a5576112a5613c08565b60200260200101518d8560ff16815181106112c2576112c2613c08565b60200260200101518d8660ff16815181106112df576112df613c08565b6020026020010151612bab565b806112f681613dbf565b915050611248565b50505050505050505050505050565b6018818154811061131d57600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909286565b6001546001600160a01b0316331461137d5760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff16156113a05760405162461bcd60e51b81526004016106dc90613bd1565b600d54610100900460ff16156113f85760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106dc565b600d805461ff001916610100179055565b60004260075411156114685760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106dc565b600d54640100000000900460ff16156114c35760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d657460448201526064016106dc565b336000908152601a602052604090206002810154806115245760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106dc565b61152d336121f6565b600f600082825461153e9190613cc5565b9091555050600e805490600061155383613ddf565b91905055506000826002018190555080601160008282546115749190613b7f565b9091555050815460188054839260ff1690811061159357611593613c08565b906000526020600020906006020160050160008282546115b39190613b7f565b9091555050600b546115cf906001600160a01b03163383612b48565b604051819033907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b69106495090600090a392915050565b600d54640100000000900460ff166116685760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b60648201526084016106dc565b4260085410806116815750600d54600160281b900460ff165b61169d5760405162461bcd60e51b81526004016106dc90613c39565b60006116a8836122a8565b9050600081116116fa5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106dc565b818110156117615760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106dc565b6001600160a01b0383166000908152601a60205260408120600101805484929061178c908490613cc5565b9250508190555081601060008282546117a59190613cc5565b9091555050600a546117c69061010090046001600160a01b03168484612b48565b60405182906001600160a01b038516907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43090600090a3505050565b6001546001600160a01b0316331461182b5760405162461bcd60e51b81526004016106dc90613b19565b6118388585858585612bab565b5050505050565b6001546001600160a01b031633146118695760405162461bcd60e51b81526004016106dc90613b19565b600d5460ff161561188c5760405162461bcd60e51b81526004016106dc90613bd1565b600a5460ff1615156001146118e35760405162461bcd60e51b815260206004820152601d60248201527f536565643a2073656564206973206e6f742077686974656c697374656400000060448201526064016106dc565b6001600160a01b03166000908152601a60205260409020600301805460ff19166001179055565b600d5460009060ff16156119305760405162461bcd60e51b81526004016106dc90613bd1565b600d54610100900460ff16156119885760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106dc565b600a5460ff1615806119a957503360009081526019602052604090205460ff165b6119f55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106dc565b336000908152601a602052604081205460188054909160ff16908110611a1d57611a1d613c08565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050600d60059054906101000a900460ff1615611ad15760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106dc565b60008311611b215760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e730000000000000060448201526064016106dc565b8060200151838260a00151611b369190613cc5565b1115611b905760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b60648201526084016106dc565b604080820151336000908152601a6020529190912060020154611bb4908590613cc5565b1115611c115760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b60648201526084016106dc565b4260085410158015611c2557504260075411155b611c875760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106dc565b600d5462010000900460ff16611d8a5760048054600a546040516370a0823160e01b8152309381019390935290916101009091046001600160a01b0316906370a082319060240160206040518083038186803b158015611ce657600080fd5b505afa158015611cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1e9190613b50565b1015611d785760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106dc565b600d805462ff00001916620100001790555b601354600090611da2670de0b6b3a764000086613c84565b611dac9190613ca3565b905060035484601154611dbf9190613cc5565b1115611e205760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106dc565b8360116000828254611e329190613cc5565b9091555050336000908152601a602052604090205460188054869260ff16908110611e5f57611e5f613c08565b90600052602060002090600602016005016000828254611e7f9190613cc5565b9091555050600f54611e92908290613b7f565b600f5560025460115410611eb657600d805464ff0000000019166401000000001790555b60035460115410611edb57600d805465ff00000000001916600160281b179055426009555b336000908152601a6020526040902060020154611f0857600e8054906000611f0283613c1e565b91905055505b336000908152601a602052604081206002018054869290611f2a908490613cc5565b9091555050600b54611f47906001600160a01b0316333087612df2565b600f54604051829033907fda8c9af77929af2caa4dea1f45f48f246846d971e045df75beb9155709769e1290600090a49150505b919050565b6001546001600160a01b03163314611faa5760405162461bcd60e51b81526004016106dc90613b19565b85858585856000855190506064811115611fd65760405162461bcd60e51b81526004016106dc90613cdd565b60185461010090611fe8908390613cc5565b106120055760405162461bcd60e51b81526004016106dc90613d2d565b8451811480156120155750835181145b80156120215750825181145b801561202d5750815181145b6120495760405162461bcd60e51b81526004016106dc90613d72565b8b5160185460005b828160ff1610156120f8576120e88f8260ff168151811061207457612074613c08565b60200260200101518f8360ff168151811061209157612091613c08565b60200260200101518f8460ff16815181106120ae576120ae613c08565b60200260200101518f8560ff16815181106120cb576120cb613c08565b60200260200101518f8660ff16815181106112df576112df613c08565b6120f181613dbf565b9050612051565b508851600a5460ff16156121455760005b81811015612143576121338b828151811061212657612126613c08565b6020026020010151612e30565b61213c81613c1e565b9050612109565b505b60005b818110156121e45760008b828151811061216457612164613c08565b602002602001015151905060005b818110156121c6576121b68d848151811061218f5761218f613c08565b602002602001015182815181106121a8576121a8613c08565b602002602001015186612e9a565b6121bf81613c1e565b9050612172565b506121d084613dbf565b935050806121dd90613c1e565b9050612148565b50505050505050505050505050505050565b6013546001600160a01b0382166000908152601a602052604081206002015490919061222b90670de0b6b3a764000090613c84565b6122359190613ca3565b92915050565b6001546001600160a01b031633146122655760405162461bcd60e51b81526004016106dc90613b19565b8151600d5460ff161561228a5760405162461bcd60e51b81526004016106dc90613bd1565b600a5460ff161561229e5761229e83612e30565b610a0e8383612f1b565b6001600160a01b0381166000908152601a602090815260408083208151608081018352815460ff90811680835260018401549583019590955260028301549382019390935260039091015490911615156060820152601880549192918491908390811061231757612317613c08565b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905060095442101561238357506000949350505050565b6000600954426123939190613b7f565b905081606001518110156123ad5750600095945050505050565b60808201518082106123dc5784602001516123c7886121f6565b6123d19190613b7f565b979650505050505050565b6000816123e8896121f6565b6123f29085613c84565b6123fc9190613ca3565b905085602001518161240e9190613b7f565b98975050505050505050565b600d546301000000900460ff161561247f5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106dc565b600d805463ff00000019166301000000179055600080546001600160a01b03808d166001600160a01b031992831617835560018054918d169190921617905587518891906124cf576124cf613c08565b6020026020010151600281905550866001815181106124f0576124f0613c08565b60200260200101516003819055508460008151811061251157612511613c08565b60200260200101516007819055508460018151811061253257612532613c08565b6020026020010151600881905550600854600161254f9190613cc5565b600955600a805460ff19168415151790558751889060009061257357612573613c08565b6020026020010151600a60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550876001815181106125b4576125b4613c08565b6020026020010151600b60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405180608001604052808260008151811061260057612600613c08565b602002602001015181526020018260018151811061262057612620613c08565b602002602001015181526020018260028151811061264057612640613c08565b602090810291909101810151825260009181019190915281516014558101516015556040810151601655606001516017556013869055600354869061268e90670de0b6b3a764000090613c84565b6126989190613ca3565b600481905550670de0b6b3a7640000816000815181106126ba576126ba613c08565b60200260200101516004546126cf9190613c84565b6126d99190613ca3565b6006819055506127306000600354866000815181106126fa576126fa613c08565b60200260200101518760018151811061271557612715613c08565b6020026020010151886002815181106112df576112df613c08565b600a5460ff1615156001148015612748575060008251115b1561279a57815160005b8181101561278e5761277e84828151811061276f5761276f613c08565b60200260200101516000612e9a565b61278781613c1e565b9050612752565b5061279883612e30565b505b60048054600f819055600581905560065491906000906127bb908490613cc5565b909155505050505050505050505050565b600d546301000000900460ff16151560011415806127f457506001546001600160a01b031633145b6128715760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106dc565b805161288490600c906020840190613209565b50806040516128939190613df6565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b6001546001600160a01b031633146128f05760405162461bcd60e51b81526004016106dc90613b19565b6018548490849061010090612906906001613cc5565b106129235760405162461bcd60e51b81526004016106dc90613d2d565b81811115801561293557506003548211155b61297a5760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106dc565b60075442106129cb5760405162461bcd60e51b815260206004820181905260248201527f536565643a2076657374696e6720697320616c7265616479207374617274656460448201526064016106dc565b600d5460ff16156129ee5760405162461bcd60e51b81526004016106dc90613bd1565b60008211612a0e5760405162461bcd60e51b81526004016106dc90613e12565b60185460ff891610612a625760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e0000000060448201526064016106dc565b8660188960ff1681548110612a7957612a79613c08565b9060005260206000209060060201600001819055508560188960ff1681548110612aa557612aa5613c08565b9060005260206000209060060201600101819055508460188960ff1681548110612ad157612ad1613c08565b9060005260206000209060060201600201819055508360188960ff1681548110612afd57612afd613c08565b9060005260206000209060060201600301819055508260188960ff1681548110612b2957612b29613c08565b9060005260206000209060060201600401819055505050505050505050565b6040516001600160a01b038316602482015260448101829052610a0e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612fc4565b6018548490849061010090612bc1906001613cc5565b10612bde5760405162461bcd60e51b81526004016106dc90613d2d565b818111158015612bf057506003548211155b612c355760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106dc565b6007544210612c865760405162461bcd60e51b815260206004820181905260248201527f536565643a2076657374696e6720697320616c7265616479207374617274656460448201526064016106dc565b600d5460ff1615612ca95760405162461bcd60e51b81526004016106dc90613bd1565b60008211612cc95760405162461bcd60e51b81526004016106dc90613e12565b50506040805160c0810182529586526020860194855285019283526060850191825260808501908152600060a0860181815260188054600181018255925295517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e60069092029182015593517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2f85015591517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d30840155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d31830155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3282015590517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3390910155565b6040516001600160a01b0380851660248301528316604482015260648101829052612e2a9085906323b872dd60e01b90608401612b74565b50505050565b805160005b81811015610a0e576001601a6000858481518110612e5557612e55613c08565b6020908102919091018101516001600160a01b03168252810191909152604001600020600301805460ff1916911515919091179055612e9381613c1e565b9050612e35565b60185460ff821610612eee5760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e0000000060448201526064016106dc565b6001600160a01b03919091166000908152601a60205260409020805460ff191660ff909216919091179055565b815181518114612f6d5760405162461bcd60e51b815260206004820152601e60248201527f536565643a206d69736d6174636820696e206172726179206c656e677468000060448201526064016106dc565b60005b81811015612e2a57612fb4848281518110612f8d57612f8d613c08565b6020026020010151848381518110612fa757612fa7613c08565b6020026020010151612e9a565b612fbd81613c1e565b9050612f70565b6000613019826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130969092919063ffffffff16565b805190915015610a0e57808060200190518101906130379190613e59565b610a0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106dc565b60606130a584846000856130af565b90505b9392505050565b6060824710156131105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106dc565b6001600160a01b0385163b6131675760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106dc565b600080866001600160a01b031685876040516131839190613df6565b60006040518083038185875af1925050503d80600081146131c0576040519150601f19603f3d011682016040523d82523d6000602084013e6131c5565b606091505b50915091506123d1828286606083156131df5750816130a8565b8251156131ef5782518084602001fd5b8160405162461bcd60e51b81526004016106dc919061332c565b82805461321590613b96565b90600052602060002090601f016020900481019282613237576000855561327d565b82601f1061325057805160ff191683800117855561327d565b8280016001018555821561327d579182015b8281111561327d578251825591602001919060010190613262565b5061328992915061328d565b5090565b5b80821115613289576000815560010161328e565b80356001600160a01b0381168114611f7b57600080fd5b6000602082840312156132cb57600080fd5b6130a8826132a2565b60005b838110156132ef5781810151838201526020016132d7565b83811115612e2a5750506000910152565b600081518084526133188160208601602086016132d4565b601f01601f19169290920160200192915050565b6020815260006130a86020830184613300565b600081518084526020808501945080840160005b8381101561336f57815187529582019590820190600101613353565b509495945050505050565b60c0808252875190820181905260009060209060e0840190828b01845b828110156133b357815184529284019290840190600101613397565b505050838103828501526133c7818a61333f565b91505082810360408401526133dc818861333f565b905082810360608401526133f0818761333f565b90508281036080840152613404818661333f565b905082810360a0840152613418818561333f565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561346357613463613425565b604052919050565b60006001600160401b0382111561348457613484613425565b5060051b60200190565b600082601f83011261349f57600080fd5b813560206134b46134af8361346b565b61343b565b82815260059290921b840181019181810190868411156134d357600080fd5b8286015b848110156134ee57803583529183019183016134d7565b509695505050505050565b600080600080600060a0868803121561351157600080fd5b85356001600160401b038082111561352857600080fd5b61353489838a0161348e565b9650602088013591508082111561354a57600080fd5b61355689838a0161348e565b9550604088013591508082111561356c57600080fd5b61357889838a0161348e565b9450606088013591508082111561358e57600080fd5b61359a89838a0161348e565b935060808801359150808211156135b057600080fd5b506135bd8882890161348e565b9150509295509295909350565b6000602082840312156135dc57600080fd5b5035919050565b600080604083850312156135f657600080fd5b6135ff836132a2565b946020939093013593505050565b600080600080600060a0868803121561362557600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600082601f83011261365957600080fd5b813560206136696134af8361346b565b82815260059290921b8401810191818101908684111561368857600080fd5b8286015b848110156134ee5761369d816132a2565b835291830191830161368c565b600082601f8301126136bb57600080fd5b813560206136cb6134af8361346b565b82815260059290921b840181019181810190868411156136ea57600080fd5b8286015b848110156134ee5780356001600160401b0381111561370d5760008081fd5b61371b8986838b0101613648565b8452509183019183016136ee565b60008060008060008060c0878903121561374257600080fd5b86356001600160401b038082111561375957600080fd5b6137658a838b0161348e565b9750602089013591508082111561377b57600080fd5b6137878a838b0161348e565b9650604089013591508082111561379d57600080fd5b6137a98a838b0161348e565b955060608901359150808211156137bf57600080fd5b6137cb8a838b0161348e565b945060808901359150808211156137e157600080fd5b6137ed8a838b0161348e565b935060a089013591508082111561380357600080fd5b5061381089828a016136aa565b9150509295509295509295565b803560ff81168114611f7b57600080fd5b6000806040838503121561384157600080fd5b82356001600160401b038082111561385857600080fd5b61386486838701613648565b935060209150818501358181111561387b57600080fd5b85019050601f8101861361388e57600080fd5b803561389c6134af8261346b565b81815260059190911b820183019083810190888311156138bb57600080fd5b928401925b828410156138e0576138d18461381d565b825292840192908401906138c0565b80955050505050509250929050565b8015158114610a1157600080fd5b8035611f7b816138ef565b6000806000806000806000806000806101408b8d03121561392857600080fd5b6139318b6132a2565b995061393f60208c016132a2565b985060408b01356001600160401b038082111561395b57600080fd5b6139678e838f01613648565b995060608d013591508082111561397d57600080fd5b6139898e838f0161348e565b985060808d0135975060a08d01359150808211156139a657600080fd5b6139b28e838f0161348e565b965060c08d01359150808211156139c857600080fd5b6139d48e838f0161348e565b95506139e260e08e016138fd565b94506101008d01359150808211156139f957600080fd5b613a058e838f01613648565b93506101208d0135915080821115613a1c57600080fd5b50613a298d828e0161348e565b9150509295989b9194979a5092959850565b60006020808385031215613a4e57600080fd5b82356001600160401b0380821115613a6557600080fd5b818501915085601f830112613a7957600080fd5b813581811115613a8b57613a8b613425565b613a9d601f8201601f1916850161343b565b91508082528684828501011115613ab357600080fd5b8084840185840137600090820190930192909252509392505050565b60008060008060008060c08789031215613ae857600080fd5b613af18761381d565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b600060208284031215613b6257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015613b9157613b91613b69565b500390565b600181811c90821680613baa57607f821691505b60208210811415613bcb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613c3257613c32613b69565b5060010190565b6020808252602b908201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960408201526a195d08199a5b9a5cda195960aa1b606082015260800190565b6000816000190483118215151615613c9e57613c9e613b69565b500290565b600082613cc057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115613cd857613cd8613b69565b500190565b60208082526030908201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060408201526f7468656e2031303020636c617373657360801b606082015260800190565b60208082526025908201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604082015264617373657360d81b606082015260800190565b6020808252602d908201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460408201526c2062652073616d652073697a6560981b606082015260800190565b600060ff821660ff811415613dd657613dd6613b69565b60010192915050565b600081613dee57613dee613b69565b506000190190565b60008251613e088184602087016132d4565b9190910192915050565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b600060208284031215613e6b57600080fd5b81516130a8816138ef56fea2646970667358221220e0eef468ecce39d65075bc2bfeccf34153504d3bc511e05f589b7f64c5dd965064736f6c63430008090033",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "addClass(bytes32,uint256,uint256,uint256,uint256)": {
        "details": "Add contributor class.",
        "params": {
          "_classCap": "The total cap of the contributor class, denominated in Wei.",
          "_className": "The name of the class",
          "_individualCap": "The personal cap of each contributor in this class, denominated in Wei.",
          "_vestingCliff": "The cliff duration, denominated in seconds.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "addClassBatch(bytes32[],uint256[],uint256[],uint256[],uint256[])": {
        "details": "Add contributor class batch.",
        "params": {
          "_classCaps": "The total caps of the contributor class, denominated in Wei",
          "_classNames": "Array of the names of the classes",
          "_individualCaps": "The personal caps of each contributor in this class, denominated in Wei.",
          "_vestingCliffs": "The cliff duration, denominated in seconds.",
          "_vestingDurations": "The vesting durations for this contributors class."
        }
      },
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)": {
        "details": "Change parameters in the class.",
        "params": {
          "_class": "Class for changing.",
          "_classCap": "The total cap of the contributor class, denominated in Wei.",
          "_className": "The name of the class",
          "_individualCap": "The personal cap of each contributor in this class, denominated in Wei.",
          "_vestingCliff": "The cliff duration, denominated in seconds.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist."
      },
      "initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_defaultClassParameters": "Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "Price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTimeAndEndTime": "Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.",
          "_tipping": "Array of containing three parameters: - Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tipping vesting period duration denominated in seconds.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t - Tipping cliff duration denominated in seconds.\t",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token.",
          "_whitelistAddresses": "Array of addresses to be whitelisted for the default class, at creation time"
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "unallowlist(address)": {
        "details": "Remove address from allowlist.",
        "params": {
          "_buyer": "Address which needs to be unwhitelisted"
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address[],uint8[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch",
          "_classes": "Array of classes assigned in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 29,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 31,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 33,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 35,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalBuyableSeed",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 41,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "tippingAmount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 43,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 45,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 47,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 49,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "10",
        "type": "t_bool"
      },
      {
        "astId": 52,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 1,
        "slot": "10",
        "type": "t_contract(IERC20)2907"
      },
      {
        "astId": 55,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(IERC20)2907"
      },
      {
        "astId": 57,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "12",
        "type": "t_bytes_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 66,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 68,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 70,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 72,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 74,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 76,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 78,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 80,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 82,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 84,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 86,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "tipping",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(Tip)161_storage"
      },
      {
        "astId": 93,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "classes",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_struct(ContributorClass)152_storage)dyn_storage"
      },
      {
        "astId": 97,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 102,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)139_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ContributorClass)152_storage)dyn_storage": {
        "base": "t_struct(ContributorClass)152_storage",
        "encoding": "dynamic_array",
        "label": "struct Seed.ContributorClass[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)2907": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)139_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)139_storage"
      },
      "t_struct(ContributorClass)152_storage": {
        "encoding": "inplace",
        "label": "struct Seed.ContributorClass",
        "members": [
          {
            "astId": 141,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "className",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 143,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 145,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "individualCap",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 147,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingCliff",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 151,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classFundingCollected",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(FunderPortfolio)139_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "class",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 134,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 136,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "allowlist",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Tip)161_storage": {
        "encoding": "inplace",
        "label": "struct Seed.Tip",
        "members": [
          {
            "astId": 154,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "tippingAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 156,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingCliff",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 158,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 160,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}