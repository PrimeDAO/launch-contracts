{
  "address": "0x30e79A727fE2A22Ef1E91BEAddD74CD2E6544267",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "seedRemainder",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountClaimed",
          "type": "uint256"
        }
      ],
      "name": "TipClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingDurations",
          "type": "uint256[]"
        },
        {
          "internalType": "address[][]",
          "name": "_allowlist",
          "type": "address[][]"
        }
      ],
      "name": "addClassesAndAllowlists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "allowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateClaimBeneficiary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaimFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "changeClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "classes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classFundingCollected",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "class",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowlist",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllClasses",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "vestingDurations",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "classFundingsCollected",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softAndHardCap",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_startTimeAndEndTime",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_defaultClassParameters",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "_allowlistAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tip",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tipPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tipAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBuyableSeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "unAllowlist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xad7a28f3edb45aed91ce0ceb93dd2193ba2893782e42a7ff7288969203e13768",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x30e79A727fE2A22Ef1E91BEAddD74CD2E6544267",
    "transactionIndex": 57,
    "gasUsed": "3257287",
    "logsBloom": "0x
    "blockHash": "0x6ad4c7cf78593e377a028fd50e74ea83ab369a5a56dc919af8b71701b03b763d",
    "transactionHash": "0xad7a28f3edb45aed91ce0ceb93dd2193ba2893782e42a7ff7288969203e13768",
    "logs": [],
    "blockNumber": 7797166,
    "cumulativeGasUsed": "12490937",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "413e69ed699083a7c487f89c7eb239ae",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"seedRemainder\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"TipClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"address[][]\",\"name\":\"_allowlist\",\"type\":\"address[][]\"}],\"name\":\"addClassesAndAllowlists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"allowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateClaimBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaimFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"changeClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"classes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classFundingCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowlist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClasses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vestingDurations\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"classFundingsCollected\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softAndHardCap\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_startTimeAndEndTime\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_defaultClassParameters\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"_allowlistAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tip\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tipPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tipAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuyableSeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"unAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"allowlist(address[],uint8[])\":{\"details\":\"Add multiple addresses to contributor classes, and if applicable allowlist them.\",\"params\":{\"_buyers\":\"Array of addresses to be allowlisted\",\"_classes\":\"Array of classes assigned in batch\"}},\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaimFunder(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)\":{\"details\":\"Change parameters in the class.\",\"params\":{\"_class\":\"Class for changing.\",\"_classCap\":\"The total cap of the contributor class, denominated in Wei.\",\"_className\":\"The name of the class\",\"_individualCap\":\"The personal cap of each contributor in this class, denominated in Wei.\",\"_vestingCliff\":\"The cliff duration, denominated in seconds.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the allowlist.\"},\"initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to allowlist users, pause and close contract.\",\"_allowlistAddresses\":\"Array of addresses to be allowlisted for the default class, at creation time\",\"_beneficiary\":\"The address that recieves fees.\",\"_defaultClassParameters\":\"Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.\",\"_permissionedSeed\":\"Set to true if only allowlisted adresses are allowed to participate.\",\"_price\":\"Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softAndHardCap\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTimeAndEndTime\":\"Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.\",\"_tip\":\"Array of containing three parameters: - Total amount of tip percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tip vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t - Tipcliff duration denominated in seconds.\\t\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"unAllowlist(address)\":{\"details\":\"Remove address from allowlist.\",\"params\":{\"_buyer\":\"Address which needs to be un-allowlisted\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0\\n// PrimeDAO Seed contract. Smart contract for seed phases of liquid launch.\\n// Copyright (C) 2021 PrimeDao\\n\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    using SafeERC20 for IERC20;\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution (buyable + tip)\\n    uint256 public totalBuyableSeed; // Amount of buyable seed tokens\\n    uint256 public startTime;\\n    uint256 public endTime; // set by project admin, this is the last resort endTime to be applied when\\n    //     maximumReached has not been reached by then\\n    uint256 public vestingStartTime; // timestamp for when vesting starts, by default == endTime,\\n    //     otherwise when maximumReached is reached\\n    bool public permissionedSeed;\\n    IERC20 public seedToken;\\n    IERC20 public fundingToken;\\n    bytes public metadata; // IPFS Hash\\n\\n    uint256 internal constant PRECISION = 10**18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool public closed; // is the distribution closed\\n    bool public paused; // is the distribution paused\\n    bool public isFunded; // distribution can only start when required seed tokens have been funded\\n    bool public initialized; // is this contract initialized [not necessary that it is funded]\\n    bool public minimumReached; // if the softCap[minimum limit of funding token] is reached\\n    bool public maximumReached; // if the hardCap[maximum limit of funding token] is reached\\n\\n    uint256 public totalFunderCount; // Total funders that have contributed.\\n    uint256 public seedRemainder; // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed; // Amount of seed token claimed by the user.\\n    uint256 public fundingCollected; // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn; // Amount of funding token withdrawn from the seed contract.\\n\\n    uint256 public price;\\n    Tip public tip;\\n\\n    ContributorClass[] public classes; // Array of contributor classes\\n\\n    mapping(address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(\\n        address indexed recipient,\\n        uint256 indexed amountPurchased,\\n        uint256 indexed seedRemainder\\n    );\\n    event TokensClaimed(address indexed recipient, uint256 indexed amount);\\n    event FundingReclaimed(\\n        address indexed recipient,\\n        uint256 indexed amountReclaimed\\n    );\\n    event MetadataUpdated(bytes indexed metadata);\\n    event TipClaimed(uint256 indexed amountClaimed);\\n\\n    struct FunderPortfolio {\\n        uint8 class; // Contibutor class id\\n        uint256 totalClaimed; // Total amount of seed tokens claimed\\n        uint256 fundingAmount; // Total amount of funding tokens contributed\\n        bool allowlist; // If permissioned Seed, funder needs to be allowlisted\\n    }\\n    // ToDo: add comments\\n    struct ContributorClass {\\n        bytes32 className;\\n        uint256 classCap; // Amount of tokens that can be donated for class\\n        uint256 individualCap; // Amount of tokens that can be donated by specific contributor\\n        uint256 vestingCliff;\\n        uint256 vestingDuration; // Vesting duration for class\\n        uint256 classFundingCollected; // Total amount of staked tokens\\n    }\\n\\n    // ToDo: add comment\\n    struct Tip {\\n        uint256 tipPercentage;\\n        uint256 vestingCliff;\\n        uint256 vestingDuration;\\n        uint256 tipAmount;\\n        uint256 totalClaimed;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    modifier isLive() {\\n        require(\\n            !closed && block.timestamp < vestingStartTime,\\n            \\\"Seed: sale not live\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier classRestriction(uint256 _classCap, uint256 _individualCap) {\\n        require(\\n            _individualCap <= _classCap && _classCap <= hardCap,\\n            \\\"Seed: caps are invalid\\\"\\n        );\\n        require(_classCap > 0, \\\"Seed: class Cap should be bigger then 0\\\");\\n        _;\\n    }\\n\\n    modifier classBatchRestrictions(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations,\\n        address[][] memory _allowlist\\n    ) {\\n        uint256 arrayLength = _classNames.length;\\n        require(\\n            arrayLength == _classCaps.length &&\\n                arrayLength == _individualCaps.length &&\\n                arrayLength == _vestingCliffs.length &&\\n                arrayLength == _vestingDurations.length &&\\n                arrayLength == _allowlist.length,\\n            \\\"Seed: All provided arrays should be same size\\\"\\n        );\\n        require(\\n            arrayLength <= 100,\\n            \\\"Seed: Can't add batch with more then 100 classes\\\"\\n        );\\n        require(\\n            classes.length + arrayLength <= 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        _;\\n    }\\n\\n    function _addClass(\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) internal classRestriction(_classCap, _individualCap) {\\n        classes.push(\\n            ContributorClass(\\n                _className,\\n                _classCap,\\n                _individualCap,\\n                _vestingCliff,\\n                _vestingDuration,\\n                0\\n            )\\n        );\\n    }\\n\\n    /**\\n      * @dev                            Initialize Seed.\\n      * @param _beneficiary             The address that recieves fees.\\n      * @param _admin                   The address of the admin of this contract. Funds contract\\n                                            and has permissions to allowlist users, pause and close contract.\\n      * @param _tokens                  Array containing two params:\\n                                            - The address of the seed token being distributed.\\n      *                                     - The address of the funding token being exchanged for seed token.\\n      * @param _softAndHardCap          Array containing two params:\\n                                            - the minimum funding token collection threshold in wei denomination.\\n                                            - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                   Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTimeAndEndTime     Array containing two params:\\n                                            - Distribution start time in unix timecode.\\n                                            - Distribution end time in unix timecode.\\n      * @param _defaultClassParameters  Array containing three params:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Individual buying cap for de default class, expressed in precision 10*18\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Cliff duration, denominated in seconds.\\n                                            - Vesting period duration, denominated in seconds.\\n      * @param _permissionedSeed        Set to true if only allowlisted adresses are allowed to participate.\\n      * @param _allowlistAddresses      Array of addresses to be allowlisted for the default class, at creation time\\n      * @param _tip                     Array of containing three parameters:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Total amount of tip percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tip vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tipcliff duration denominated in seconds.\\t\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softAndHardCap,\\n        uint256 _price,\\n        uint256[] memory _startTimeAndEndTime,\\n        uint256[] memory _defaultClassParameters,\\n        bool _permissionedSeed,\\n        address[] memory _allowlistAddresses,\\n        uint256[] memory _tip\\n    ) external {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        beneficiary = _beneficiary;\\n        admin = _admin;\\n        softCap = _softAndHardCap[0];\\n        hardCap = _softAndHardCap[1];\\n        startTime = _startTimeAndEndTime[0];\\n        endTime = _startTimeAndEndTime[1];\\n        vestingStartTime = endTime + 1;\\n        permissionedSeed = _permissionedSeed;\\n        seedToken = IERC20(_tokens[0]);\\n        fundingToken = IERC20(_tokens[1]);\\n        price = _price;\\n\\n        totalBuyableSeed = (hardCap * PRECISION) / _price;\\n        // Calculate tip\\n        uint256 tipAmount = (totalBuyableSeed * _tip[0]) / PRECISION;\\n        tip = Tip(_tip[0], _tip[1], _tip[2], tipAmount, 0);\\n        // Add default class\\n        _addClass(\\n            bytes32(\\\"\\\"),\\n            hardCap,\\n            _defaultClassParameters[0],\\n            _defaultClassParameters[1],\\n            _defaultClassParameters[2]\\n        );\\n\\n        // Add allowlist to the default class\\n        if (permissionedSeed == true && _allowlistAddresses.length > 0) {\\n            uint256 arrayLength = _allowlistAddresses.length;\\n            for (uint256 i; i < arrayLength; ++i) {\\n                _addToClass(0, _allowlistAddresses[i]); // Value 0 for the default class\\n            }\\n            _addAddressesToAllowlist(_allowlistAddresses);\\n        }\\n\\n        seedRemainder = totalBuyableSeed;\\n        seedAmountRequired = tipAmount + seedRemainder;\\n    }\\n\\n    /**\\n     * @dev                     Change parameters in the class.\\n     * @param _class            Class for changing.\\n     * @param _className        The name of the class\\n     * @param _classCap         The total cap of the contributor class, denominated in Wei.\\n     * @param _individualCap    The personal cap of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliff     The cliff duration, denominated in seconds.\\n     * @param _vestingDuration  The vesting duration for this contributors class.\\n     */\\n    function changeClass(\\n        uint8 _class,\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external classRestriction(_classCap, _individualCap) onlyAdmin isLive {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n\\n        classes[_class].className = _className;\\n        classes[_class].classCap = _classCap;\\n        classes[_class].individualCap = _individualCap;\\n        classes[_class].vestingCliff = _vestingCliff;\\n        classes[_class].vestingDuration = _vestingDuration;\\n    }\\n\\n    /**\\n     * @dev                     Buy seed tokens.\\n     * @param _fundingAmount    The amount of funding tokens to contribute.\\n     */\\n    function buy(uint256 _fundingAmount) external isActive returns (uint256) {\\n        FunderPortfolio storage funder = funders[msg.sender];\\n        require(\\n            !permissionedSeed || funder.allowlist,\\n            \\\"Seed: sender has no rights\\\"\\n        );\\n\\n        ContributorClass memory userClass = classes[funder.class];\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(_fundingAmount > 0, \\\"Seed: cannot buy 0 tokens\\\");\\n        // Checks if contributor has exceeded his personal or class cap.\\n        require(\\n            (userClass.classFundingCollected + _fundingAmount) <=\\n                userClass.classCap,\\n            \\\"Seed: maximum class funding reached\\\"\\n        );\\n\\n        require(\\n            (funder.fundingAmount + _fundingAmount) <= userClass.individualCap,\\n            \\\"Seed: maximum personal funding reached\\\"\\n        );\\n\\n        require(\\n            endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\"\\n        );\\n\\n        if (!isFunded) {\\n            require(\\n                seedToken.balanceOf(address(this)) >= seedAmountRequired,\\n                \\\"Seed: sufficient seeds not provided\\\"\\n            );\\n            isFunded = true;\\n        }\\n\\n        uint256 seedAmount = (_fundingAmount * PRECISION) / price;\\n        // total fundingAmount should not be greater than the hardCap\\n        require(\\n            fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\"\\n        );\\n\\n        fundingCollected += _fundingAmount;\\n        classes[funder.class].classFundingCollected += _fundingAmount;\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder = seedRemainder - seedAmount;\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = block.timestamp;\\n        }\\n\\n        //functionality of addFunder\\n        if (funder.fundingAmount == 0) {\\n            totalFunderCount++;\\n        }\\n        funder.fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n\\n        fundingToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            _fundingAmount\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount, seedRemainder);\\n\\n        return (seedAmount);\\n    }\\n\\n    /**\\n     * @dev                     Claim vested seed tokens.\\n     * @param _funder           Address of funder to calculate seconds and amount claimable\\n     * @param _claimAmount      The amount of seed token a users wants to claim.\\n     */\\n    function claim(address _funder, uint256 _claimAmount) external {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaimFunder(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(\\n            amountClaimable >= _claimAmount,\\n            \\\"Seed: request is greater than claimable amount\\\"\\n        );\\n\\n        funders[_funder].totalClaimed += _claimAmount;\\n\\n        seedClaimed += _claimAmount;\\n\\n        seedToken.safeTransfer(_funder, _claimAmount);\\n\\n        emit TokensClaimed(_funder, _claimAmount);\\n    }\\n\\n    function claimTip() external returns (uint256) {\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaimBeneficiary();\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n\\n        tip.totalClaimed += amountClaimable;\\n\\n        seedToken.safeTransfer(beneficiary, amountClaimable);\\n\\n        emit TipClaimed(amountClaimable);\\n\\n        return amountClaimable;\\n    }\\n\\n    /**\\n     * @dev         Returns funding tokens to user.\\n     */\\n    function retrieveFundingTokens() external returns (uint256) {\\n        require(\\n            startTime <= block.timestamp,\\n            \\\"Seed: distribution haven't started\\\"\\n        );\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        classes[tokenFunder.class].classFundingCollected -= fundingAmount;\\n\\n        fundingToken.safeTransfer(msg.sender, fundingAmount);\\n\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n     * @dev                     Pause distribution.\\n     */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n     * @dev                     Unpause distribution.\\n     */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the allowlist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n     * @dev                     retrieve remaining seed tokens back to project.\\n     * @param _refundReceiver   refund receiver address\\n     */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed || maximumReached || block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require(\\n                seedToken.balanceOf(address(this)) > 0,\\n                \\\"Seed: Failed to transfer Seed Token\\\" // ToDo: better error message\\n            );\\n            // subtract tip from Seed tokens\\n            uint256 retrievableSeedAmount = seedToken.balanceOf(address(this)) -\\n                tip.tipAmount;\\n            seedToken.safeTransfer(_refundReceiver, retrievableSeedAmount);\\n        } else {\\n            // seed tokens to transfer = buyable seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = totalBuyableSeed - seedRemainder;\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this)) -\\n                totalSeedDistributed;\\n            seedToken.safeTransfer(_refundReceiver, amountToTransfer);\\n        }\\n    }\\n\\n    //ToDo: add comment\\n    function addClassesAndAllowlists(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations,\\n        address[][] memory _allowlist\\n    )\\n        external\\n        onlyAdmin\\n        isLive\\n        classBatchRestrictions(\\n            _classNames,\\n            _classCaps,\\n            _individualCaps,\\n            _vestingCliffs,\\n            _vestingDurations,\\n            _allowlist\\n        )\\n    {\\n        uint256 currentClassId = uint256(classes.length);\\n        for (uint8 i; i < _classNames.length; ++i) {\\n            _addClass(\\n                _classNames[i],\\n                _classCaps[i],\\n                _individualCaps[i],\\n                _vestingCliffs[i],\\n                _vestingDurations[i]\\n            );\\n        }\\n        uint256 arrayLength = _allowlist.length;\\n        if (permissionedSeed) {\\n            for (uint256 i; i < arrayLength; ++i) {\\n                _addAddressesToAllowlist(_allowlist[i]);\\n            }\\n        }\\n        for (uint256 i; i < arrayLength; ++i) {\\n            uint256 numberOfAddresses = _allowlist[i].length;\\n            for (uint256 j; j < numberOfAddresses; ++j) {\\n                _addToClass(uint8(currentClassId), _allowlist[i][j]);\\n            }\\n            ++currentClassId;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add multiple addresses to contributor classes, and if applicable\\n                                    allowlist them.\\n     * @param _buyers           Array of addresses to be allowlisted\\n     * @param _classes          Array of classes assigned in batch\\n     */\\n    function allowlist(address[] memory _buyers, uint8[] memory _classes)\\n        external\\n        onlyAdmin\\n        isLive\\n    {\\n        if (permissionedSeed) {\\n            _addAddressesToAllowlist(_buyers);\\n        }\\n        _addMultipleAdressesToClass(_buyers, _classes);\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _classId              Class of the contributor.\\n     * @param _buyer            Address of the contributor.\\n     */\\n    function _addToClass(uint8 _classId, address _buyer) internal {\\n        require(_classId < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        funders[_buyer].class = _classId;\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _buyers          Address of the contributor.\\n     * @param _classes            Class of the contributor.\\n     */\\n    function _addMultipleAdressesToClass(\\n        address[] memory _buyers,\\n        uint8[] memory _classes\\n    ) internal {\\n        uint256 arrayLength = _buyers.length;\\n        require(\\n            _classes.length == arrayLength,\\n            \\\"Seed: mismatch in array length\\\"\\n        );\\n\\n        for (uint256 i; i < arrayLength; ++i) {\\n            _addToClass(_classes[i], _buyers[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add address to allowlist.\\n     * @param _buyers        Address which needs to be allowlisted\\n     */\\n    function _addAddressesToAllowlist(address[] memory _buyers) internal {\\n        uint256 arrayLength = _buyers.length;\\n        for (uint256 i; i < arrayLength; ++i) {\\n            funders[_buyers[i]].allowlist = true;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Remove address from allowlist.\\n     * @param _buyer             Address which needs to be un-allowlisted\\n     */\\n    function unAllowlist(address _buyer) external onlyAdmin isLive {\\n        require(permissionedSeed == true, \\\"Seed: seed is not permissioned\\\");\\n\\n        funders[_buyer].allowlist = false;\\n    }\\n\\n    /**\\n     * @dev                     Withdraw funds from the contract\\n     */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached || (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        fundingWithdrawn = fundingCollected;\\n        // Send the entire seed contract balance of the funding token to the sale\\u2019s admin\\n        fundingToken.safeTransfer(\\n            msg.sender,\\n            fundingToken.balanceOf(address(this))\\n        );\\n    }\\n\\n    /**\\n     * @dev                     Updates metadata.\\n     * @param _metadata         Seed contract metadata, that is IPFS Hash\\n     */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n     * @dev                     Calculates the maximum claim\\n     * @param _funder           Address of funder to find the maximum claim\\n     */\\n    function calculateClaimFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        ContributorClass memory claimed = classes[currentId];\\n\\n        return\\n            _calculateClaim(\\n                seedAmountForFunder(_funder),\\n                claimed.vestingCliff,\\n                claimed.vestingDuration,\\n                tokenFunder.totalClaimed\\n            );\\n    }\\n\\n    function calculateClaimBeneficiary() public view returns (uint256) {\\n        return\\n            _calculateClaim(\\n                tip.tipAmount,\\n                tip.vestingCliff,\\n                tip.vestingDuration,\\n                tip.totalClaimed\\n            );\\n    }\\n\\n    function _calculateClaim(\\n        uint256 seedAmount,\\n        uint256 vestingCliff,\\n        uint256 vestingDuration,\\n        uint256 totalClaimed\\n    ) internal view returns (uint256) {\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n        if (elapsedSeconds < vestingCliff) {\\n            return 0;\\n        }\\n\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= vestingDuration) {\\n            return seedAmount - totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds * seedAmount) /\\n                vestingDuration;\\n            return amountVested - totalClaimed;\\n        }\\n    }\\n\\n    function getAllClasses()\\n        external\\n        view\\n        returns (\\n            bytes32[] memory classNames,\\n            uint256[] memory classCaps,\\n            uint256[] memory individualCaps,\\n            uint256[] memory vestingCliffs,\\n            uint256[] memory vestingDurations,\\n            uint256[] memory classFundingsCollected\\n        )\\n    {\\n        uint256 numberOfClasses = classes.length;\\n        classNames = new bytes32[](numberOfClasses);\\n        classCaps = new uint256[](numberOfClasses);\\n        individualCaps = new uint256[](numberOfClasses);\\n        vestingCliffs = new uint256[](numberOfClasses);\\n        vestingDurations = new uint256[](numberOfClasses);\\n        classFundingsCollected = new uint256[](numberOfClasses);\\n        for (uint256 i; i < numberOfClasses; ++i) {\\n            ContributorClass storage class = classes[i];\\n            classNames[i] = class.className;\\n            classCaps[i] = class.classCap;\\n            individualCaps[i] = class.individualCap;\\n            vestingCliffs[i] = class.vestingCliff;\\n            vestingDurations[i] = class.vestingDuration;\\n            classFundingsCollected[i] = class.classFundingCollected;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     get seed amount for funder\\n     * @param _funder           address of funder to seed amount\\n     */\\n    function seedAmountForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].fundingAmount * PRECISION) / price;\\n    }\\n}\\n\",\"keccak256\":\"0x13d0f4e37f2027f725b2a4f97120496cc890d5ede60af896aab1c6645a71f725\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506139f7806100206000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c8063817dbe9f11610167578063c24ffe3d116100ce578063e565eb4c11610087578063e565eb4c146105c9578063ec11d726146105de578063f851a440146105f1578063fb86a40414610604578063fc582d411461060d578063fd3cfafd1461062057600080fd5b8063c24ffe3d1461056d578063c934b7b814610575578063d96a094a14610588578063dae0f1981461059b578063dc4b9e38146105a3578063e5652b38146105b657600080fd5b8063a8660a7811610120578063a8660a7814610519578063aad3ec9614610522578063ac2a811014610535578063b79456b914610548578063bad935561461055b578063bc0f5f841461056457600080fd5b8063817dbe9f146104ae57806383d59e00146104ee5780638456cb59146104f75780638a2448aa146104ff578063906a26e014610507578063a035b1fe1461051057600080fd5b80633ccfd60b1161020b5780635c975abb116101c45780635c975abb1461044a5780635e9777e81461045c5780636bda75dd1461046557806378065f271461047f57806378e97925146104925780637c6543031461049b57600080fd5b80633ccfd60b1461040f5780633dba9e41146104175780633f4ba83a1461042457806343d726d61461042c57806347d02f1b14610434578063597e1fb51461043d57600080fd5b80631cfe562e1161025d5780631cfe562e146103635780632755cd2d1461036c578063311f8483146103ae5780633197cbb6146103de57806338af3eed146103e7578063392f37e9146103fa57600080fd5b8063031b36771461029a57806303aabe31146102ff5780630826d2c714610314578063117a36d11461032b578063158ef93e1461034f575b600080fd5b6102d46102a8366004612ed5565b601960205260009081526040902080546001820154600283015460039093015460ff9283169391921684565b6040805160ff9095168552602085019390935291830152151560608201526080015b60405180910390f35b61031261030d366004612ed5565b610633565b005b61031d600e5481565b6040519081526020016102f6565b600c5461033f90600160281b900460ff1681565b60405190151581526020016102f6565b600c5461033f906301000000900460ff1681565b61031d60105481565b601354601454601554601654601754610386949392919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102f6565b6009546103c69061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016102f6565b61031d60075481565b6000546103c6906001600160a01b031681565b610402610968565b6040516102f69190612f40565b6103126109f6565b60095461033f9060ff1681565b610312610b68565b610312610c1c565b61031d600f5481565b600c5461033f9060ff1681565b600c5461033f90610100900460ff1681565b61031d600d5481565b61046d610c79565b6040516102f696959493929190612f8e565b600a546103c6906001600160a01b031681565b61031d60065481565b600c5461033f9062010000900460ff1681565b6104c16104bc366004613039565b610f40565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016102f6565b61031d60115481565b610312610f86565b61031d61103c565b61031d60025481565b61031d60125481565b61031d60085481565b610312610530366004613052565b611235565b610312610543366004613168565b611434565b610312610556366004613303565b6114ac565b61031d60055481565b61031d60045481565b61031d611839565b61031d610583366004612ed5565b611938565b61031d610596366004613039565b611a27565b61031d612050565b61031d6105b1366004612ed5565b612071565b6103126105c4366004612ed5565b6120b6565b600c5461033f90640100000000900460ff1681565b6103126105ec366004613410565b61218b565b6001546103c6906001600160a01b031681565b61031d60035481565b61031261061b366004613543565b612530565b61031261062e3660046135d7565b612623565b6001546001600160a01b031633146106665760405162461bcd60e51b815260040161065d90613621565b60405180910390fd5b600c5460ff16806106805750600c54600160281b900460ff165b8061068d57506007544210155b6107305760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c40161065d565b600c54640100000000900460ff166108b0576009546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190613658565b1161080d5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b606482015260840161065d565b6016546009546040516370a0823160e01b81523060048201526000929161010090046001600160a01b0316906370a0823190602401602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613658565b61088d9190613687565b6009549091506108ac9061010090046001600160a01b03168383612830565b5050565b6000600e546005546108c29190613687565b6009546040516370a0823160e01b8152306004820152919250600091839161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190613658565b6109439190613687565b6009549091506109629061010090046001600160a01b03168483612830565b50505b50565b600b80546109759061369a565b80601f01602080910402602001604051908101604052809291908181526020018280546109a19061369a565b80156109ee5780601f106109c3576101008083540402835291602001916109ee565b820191906000526020600020905b8154815290600101906020018083116109d157829003601f168201915b505050505081565b6001546001600160a01b03163314610a205760405162461bcd60e51b815260040161065d90613621565b600c54600160281b900460ff1680610a4f5750600c54640100000000900460ff168015610a4f57506007544210155b610adb5760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a40161065d565b601054601155600a546040516370a0823160e01b8152306004820152610b669133916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b539190613658565b600a546001600160a01b03169190612830565b565b6001546001600160a01b03163314610b925760405162461bcd60e51b815260040161065d90613621565b600c5460ff161515600103610bb95760405162461bcd60e51b815260040161065d906136d4565b600c5460ff610100909104161515600114610c0f5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b604482015260640161065d565b600c805461ff0019169055565b6001546001600160a01b03163314610c465760405162461bcd60e51b815260040161065d90613621565b600c5460ff1615610c695760405162461bcd60e51b815260040161065d906136d4565b600c805461ffff19166001179055565b60608060608060608060006018805490509050806001600160401b03811115610ca457610ca461307c565b604051908082528060200260200182016040528015610ccd578160200160208202803683370190505b509650806001600160401b03811115610ce857610ce861307c565b604051908082528060200260200182016040528015610d11578160200160208202803683370190505b509550806001600160401b03811115610d2c57610d2c61307c565b604051908082528060200260200182016040528015610d55578160200160208202803683370190505b509450806001600160401b03811115610d7057610d7061307c565b604051908082528060200260200182016040528015610d99578160200160208202803683370190505b509350806001600160401b03811115610db457610db461307c565b604051908082528060200260200182016040528015610ddd578160200160208202803683370190505b509250806001600160401b03811115610df857610df861307c565b604051908082528060200260200182016040528015610e21578160200160208202803683370190505b50915060005b81811015610f3657600060188281548110610e4457610e4461370b565b906000526020600020906006020190508060000154898381518110610e6b57610e6b61370b565b6020026020010181815250508060010154888381518110610e8e57610e8e61370b565b6020026020010181815250508060020154878381518110610eb157610eb161370b565b6020026020010181815250508060030154868381518110610ed457610ed461370b565b6020026020010181815250508060040154858381518110610ef757610ef761370b565b6020026020010181815250508060050154848381518110610f1a57610f1a61370b565b602090810291909101015250610f2f81613721565b9050610e27565b5050909192939495565b60188181548110610f5057600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909286565b6001546001600160a01b03163314610fb05760405162461bcd60e51b815260040161065d90613621565b600c5460ff1615610fd35760405162461bcd60e51b815260040161065d906136d4565b600c54610100900460ff161561102b5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161065d565b600c805461ff001916610100179055565b600042600654111561109b5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b606482015260840161065d565b600c54640100000000900460ff16156110f65760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d6574604482015260640161065d565b3360009081526019602052604090206002810154806111575760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e7400000000000000604482015260640161065d565b61116033612071565b600e6000828254611171919061373a565b9091555050600d80549060006111868361374d565b91905055506000826002018190555080601060008282546111a79190613687565b9091555050815460188054839260ff169081106111c6576111c661370b565b906000526020600020906006020160050160008282546111e69190613687565b9091555050600a54611202906001600160a01b03163383612830565b604051819033907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b69106495090600090a392915050565b600c54640100000000900460ff1661129b5760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b606482015260840161065d565b4260075410806112b45750600c54600160281b900460ff165b6112d05760405162461bcd60e51b815260040161065d90613764565b60006112db83611938565b90506000811161132d5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161065d565b818110156113945760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b606482015260840161065d565b6001600160a01b038316600090815260196020526040812060010180548492906113bf90849061373a565b9250508190555081600f60008282546113d8919061373a565b90915550506009546113f99061010090046001600160a01b03168484612830565b60405182906001600160a01b038516907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43090600090a3505050565b6001546001600160a01b0316331461145e5760405162461bcd60e51b815260040161065d90613621565b600c5460ff16158015611472575060085442105b61148e5760405162461bcd60e51b815260040161065d906137af565b60095460ff16156114a2576114a282612893565b6108ac82826128fd565b6001546001600160a01b031633146114d65760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156114ea575060085442105b6115065760405162461bcd60e51b815260040161065d906137af565b8585858585856000865190508551811480156115225750845181145b801561152e5750835181145b801561153a5750825181145b80156115465750815181145b6115a85760405162461bcd60e51b815260206004820152602d60248201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460448201526c2062652073616d652073697a6560981b606482015260840161065d565b60648111156116125760405162461bcd60e51b815260206004820152603060248201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060448201526f7468656e2031303020636c617373657360801b606482015260840161065d565b6018546101009061162490839061373a565b11156116805760405162461bcd60e51b815260206004820152602560248201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604482015264617373657360d81b606482015260840161065d565b60185460005b8e518160ff16101561173b5761172b8f8260ff16815181106116aa576116aa61370b565b60200260200101518f8360ff16815181106116c7576116c761370b565b60200260200101518f8460ff16815181106116e4576116e461370b565b60200260200101518f8560ff16815181106117015761170161370b565b60200260200101518f8660ff168151811061171e5761171e61370b565b602002602001015161299f565b611734816137dc565b9050611686565b50885160095460ff16156117885760005b81811015611786576117768b82815181106117695761176961370b565b6020026020010151612893565b61177f81613721565b905061174c565b505b60005b818110156118275760008b82815181106117a7576117a761370b565b602002602001015151905060005b81811015611809576117f9858e85815181106117d3576117d361370b565b602002602001015183815181106117ec576117ec61370b565b6020026020010151612b41565b61180281613721565b90506117b5565b5061181384613721565b9350508061182090613721565b905061178b565b50505050505050505050505050505050565b60004260075410806118545750600c54600160281b900460ff165b6118705760405162461bcd60e51b815260040161065d90613764565b600061187a612050565b9050600081116118cc5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161065d565b80601360040160008282546118e1919061373a565b9091555050600054600954611908916001600160a01b036101009092048216911683612830565b60405181907fecc980da7c913e12084687ea0133e12ca310132a33ffff999d177bd941c2073590600090a2919050565b6001600160a01b03811660009081526019602090815260408083208151608081018352815460ff9081168083526001840154958301959095526002830154938201939093526003909101549091161515606082015260188054919291849190839081106119a7576119a761370b565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050611a1e611a0a86612071565b826060015183608001518660200151612bc0565b95945050505050565b600c5460009060ff1615611a4d5760405162461bcd60e51b815260040161065d906136d4565b600c54610100900460ff1615611aa55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161065d565b33600090815260196020526040902060095460ff161580611aca5750600381015460ff165b611b165760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f20726967687473000000000000604482015260640161065d565b80546018805460009260ff16908110611b3157611b3161370b565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050600c60059054906101000a900460ff1615611be55760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e672072656163686564000000604482015260640161065d565b60008411611c355760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e7300000000000000604482015260640161065d565b8060200151848260a00151611c4a919061373a565b1115611ca45760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b606482015260840161065d565b8060400151848360020154611cb9919061373a565b1115611d165760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b606482015260840161065d565b4260075410158015611d2a57504260065411155b611d8c5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b606482015260840161065d565b600c5462010000900460ff16611e8057600480546009546040516370a0823160e01b8152309381019390935290916101009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015611df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e149190613658565b1015611e6e5760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b606482015260840161065d565b600c805462ff00001916620100001790555b601254600090611e98670de0b6b3a7640000876137fb565b611ea29190613812565b905060035485601054611eb5919061373a565b1115611f165760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b606482015260840161065d565b8460106000828254611f28919061373a565b9091555050825460188054879260ff16908110611f4757611f4761370b565b90600052602060002090600602016005016000828254611f67919061373a565b9091555050600e54611f7a908290613687565b600e5560025460105410611f9e57600c805464ff0000000019166401000000001790555b60035460105410611fc357600c805465ff00000000001916600160281b179055426008555b8260020154600003611fe557600d8054906000611fdf83613721565b91905055505b84836002016000828254611ff9919061373a565b9091555050600a54612016906001600160a01b0316333088612c41565b600e54604051829033907fda8c9af77929af2caa4dea1f45f48f246846d971e045df75beb9155709769e1290600090a4925050505b919050565b60165460145460155460175460009361206c9390929091612bc0565b905090565b6012546001600160a01b0382166000908152601960205260408120600201549091906120a690670de0b6b3a7640000906137fb565b6120b09190613812565b92915050565b6001546001600160a01b031633146120e05760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156120f4575060085442105b6121105760405162461bcd60e51b815260040161065d906137af565b60095460ff1615156001146121675760405162461bcd60e51b815260206004820152601e60248201527f536565643a2073656564206973206e6f74207065726d697373696f6e65640000604482015260640161065d565b6001600160a01b03166000908152601960205260409020600301805460ff19169055565b600c546301000000900460ff16156121f05760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b606482015260840161065d565b600c805463ff00000019166301000000179055600080546001600160a01b03808d166001600160a01b031992831617835560018054918d169190921617905587518891906122405761224061370b565b6020026020010151600281905550866001815181106122615761226161370b565b6020026020010151600381905550846000815181106122825761228261370b565b6020026020010151600681905550846001815181106122a3576122a361370b565b602002602001015160078190555060075460016122c0919061373a565b6008556009805460ff1916841515179055875188906000906122e4576122e461370b565b6020026020010151600960016101000a8154816001600160a01b0302191690836001600160a01b03160217905550876001815181106123255761232561370b565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560128190555085670de0b6b3a764000060035461237191906137fb565b61237b9190613812565b6005819055506000670de0b6b3a76400008260008151811061239f5761239f61370b565b60200260200101516005546123b491906137fb565b6123be9190613812565b90506040518060a00160405280836000815181106123de576123de61370b565b60200260200101518152602001836001815181106123fe576123fe61370b565b602002602001015181526020018360028151811061241e5761241e61370b565b60209081029190910181015182528181018490526000604092830181905283516013559083015160145590820151601555606082015160165560809091015160175560035486516124b19291908890839061247b5761247b61370b565b6020026020010151886001815181106124965761249661370b565b60200260200101518960028151811061171e5761171e61370b565b60095460ff16151560011480156124c9575060008351115b1561250e57825160005b81811015612502576124f260008683815181106117ec576117ec61370b565b6124fb81613721565b90506124d3565b5061250c84612893565b505b600554600e819055612520908261373a565b6004555050505050505050505050565b600c546301000000900460ff161515600114158061255857506001546001600160a01b031633145b6125d55760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a40161065d565b600b6125e18282613882565b50806040516125f09190613941565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b838381811115801561263757506003548211155b61267c5760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b604482015260640161065d565b6000821161269c5760405162461bcd60e51b815260040161065d9061395d565b6001546001600160a01b031633146126c65760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156126da575060085442105b6126f65760405162461bcd60e51b815260040161065d906137af565b60185460ff89161061274a5760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604482015260640161065d565b8660188960ff16815481106127615761276161370b565b9060005260206000209060060201600001819055508560188960ff168154811061278d5761278d61370b565b9060005260206000209060060201600101819055508460188960ff16815481106127b9576127b961370b565b9060005260206000209060060201600201819055508360188960ff16815481106127e5576127e561370b565b9060005260206000209060060201600301819055508260188960ff16815481106128115761281161370b565b9060005260206000209060060201600401819055505050505050505050565b6040516001600160a01b03831660248201526044810182905261096290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c79565b805160005b81811015610962576001601960008584815181106128b8576128b861370b565b6020908102919091018101516001600160a01b03168252810191909152604001600020600301805460ff19169115159190911790556128f681613721565b9050612898565b81518151811461294f5760405162461bcd60e51b815260206004820152601e60248201527f536565643a206d69736d6174636820696e206172726179206c656e6774680000604482015260640161065d565b60005b818110156129995761298983828151811061296f5761296f61370b565b60200260200101518583815181106117ec576117ec61370b565b61299281613721565b9050612952565b50505050565b83838181111580156129b357506003548211155b6129f85760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b604482015260640161065d565b60008211612a185760405162461bcd60e51b815260040161065d9061395d565b50506040805160c0810182529586526020860194855285019283526060850191825260808501908152600060a0860181815260188054600181018255925295517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e60069092029182015593517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2f85015591517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d30840155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d31830155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3282015590517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3390910155565b60185460ff831610612b955760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604482015260640161065d565b6001600160a01b03166000908152601960205260409020805460ff191660ff92909216919091179055565b6000600854421015612bd457506000612c39565b600060085442612be49190613687565b905084811015612bf8576000915050612c39565b838110612c1157612c098387613687565b915050612c39565b600084612c1e88846137fb565b612c289190613812565b9050612c348482613687565b925050505b949350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526129999085906323b872dd60e01b9060840161285c565b6000612cce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d4b9092919063ffffffff16565b8051909150156109625780806020019051810190612cec91906139a4565b6109625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161065d565b6060612d5a8484600085612d64565b90505b9392505050565b606082471015612dc55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161065d565b6001600160a01b0385163b612e1c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161065d565b600080866001600160a01b03168587604051612e389190613941565b60006040518083038185875af1925050503d8060008114612e75576040519150601f19603f3d011682016040523d82523d6000602084013e612e7a565b606091505b5091509150612c3482828660608315612e94575081612d5d565b825115612ea45782518084602001fd5b8160405162461bcd60e51b815260040161065d9190612f40565b80356001600160a01b038116811461204b57600080fd5b600060208284031215612ee757600080fd5b612d5d82612ebe565b60005b83811015612f0b578181015183820152602001612ef3565b50506000910152565b60008151808452612f2c816020860160208601612ef0565b601f01601f19169290920160200192915050565b602081526000612d5d6020830184612f14565b600081518084526020808501945080840160005b83811015612f8357815187529582019590820190600101612f67565b509495945050505050565b60c0808252875190820181905260009060209060e0840190828b01845b82811015612fc757815184529284019290840190600101612fab565b50505083810382850152612fdb818a612f53565b9150508281036040840152612ff08188612f53565b905082810360608401526130048187612f53565b905082810360808401526130188186612f53565b905082810360a084015261302c8185612f53565b9998505050505050505050565b60006020828403121561304b57600080fd5b5035919050565b6000806040838503121561306557600080fd5b61306e83612ebe565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156130ba576130ba61307c565b604052919050565b60006001600160401b038211156130db576130db61307c565b5060051b60200190565b600082601f8301126130f657600080fd5b8135602061310b613106836130c2565b613092565b82815260059290921b8401810191818101908684111561312a57600080fd5b8286015b8481101561314c5761313f81612ebe565b835291830191830161312e565b509695505050505050565b803560ff8116811461204b57600080fd5b6000806040838503121561317b57600080fd5b82356001600160401b038082111561319257600080fd5b61319e868387016130e5565b93506020915081850135818111156131b557600080fd5b85019050601f810186136131c857600080fd5b80356131d6613106826130c2565b81815260059190911b820183019083810190888311156131f557600080fd5b928401925b8284101561321a5761320b84613157565b825292840192908401906131fa565b80955050505050509250929050565b600082601f83011261323a57600080fd5b8135602061324a613106836130c2565b82815260059290921b8401810191818101908684111561326957600080fd5b8286015b8481101561314c578035835291830191830161326d565b600082601f83011261329557600080fd5b813560206132a5613106836130c2565b82815260059290921b840181019181810190868411156132c457600080fd5b8286015b8481101561314c5780356001600160401b038111156132e75760008081fd5b6132f58986838b01016130e5565b8452509183019183016132c8565b60008060008060008060c0878903121561331c57600080fd5b86356001600160401b038082111561333357600080fd5b61333f8a838b01613229565b9750602089013591508082111561335557600080fd5b6133618a838b01613229565b9650604089013591508082111561337757600080fd5b6133838a838b01613229565b9550606089013591508082111561339957600080fd5b6133a58a838b01613229565b945060808901359150808211156133bb57600080fd5b6133c78a838b01613229565b935060a08901359150808211156133dd57600080fd5b506133ea89828a01613284565b9150509295509295509295565b801515811461096557600080fd5b803561204b816133f7565b6000806000806000806000806000806101408b8d03121561343057600080fd5b6134398b612ebe565b995061344760208c01612ebe565b985060408b01356001600160401b038082111561346357600080fd5b61346f8e838f016130e5565b995060608d013591508082111561348557600080fd5b6134918e838f01613229565b985060808d0135975060a08d01359150808211156134ae57600080fd5b6134ba8e838f01613229565b965060c08d01359150808211156134d057600080fd5b6134dc8e838f01613229565b95506134ea60e08e01613405565b94506101008d013591508082111561350157600080fd5b61350d8e838f016130e5565b93506101208d013591508082111561352457600080fd5b506135318d828e01613229565b9150509295989b9194979a5092959850565b6000602080838503121561355657600080fd5b82356001600160401b038082111561356d57600080fd5b818501915085601f83011261358157600080fd5b8135818111156135935761359361307c565b6135a5601f8201601f19168501613092565b915080825286848285010111156135bb57600080fd5b8084840185840137600090820190930192909252509392505050565b60008060008060008060c087890312156135f057600080fd5b6135f987613157565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b60006020828403121561366a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156120b0576120b0613671565b600181811c908216806136ae57607f821691505b6020821081036136ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161373357613733613671565b5060010190565b808201808211156120b0576120b0613671565b60008161375c5761375c613671565b506000190190565b6020808252602b908201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960408201526a195d08199a5b9a5cda195960aa1b606082015260800190565b602080825260139082015272536565643a2073616c65206e6f74206c69766560681b604082015260600190565b600060ff821660ff81036137f2576137f2613671565b60010192915050565b80820281158282048414176120b0576120b0613671565b60008261382f57634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561096257600081815260208120601f850160051c8101602086101561385b5750805b601f850160051c820191505b8181101561387a57828155600101613867565b505050505050565b81516001600160401b0381111561389b5761389b61307c565b6138af816138a9845461369a565b84613834565b602080601f8311600181146138e457600084156138cc5750858301515b600019600386901b1c1916600185901b17855561387a565b600085815260208120601f198616915b82811015613913578886015182559484019460019091019084016138f4565b50858210156139315787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613953818460208701612ef0565b9190910192915050565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b6000602082840312156139b657600080fd5b8151612d5d816133f756fea2646970667358221220c63a025ac8680dbd3e7390a1e576dd88e60ecbb3a93498d16d31880c6601c2da64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c8063817dbe9f11610167578063c24ffe3d116100ce578063e565eb4c11610087578063e565eb4c146105c9578063ec11d726146105de578063f851a440146105f1578063fb86a40414610604578063fc582d411461060d578063fd3cfafd1461062057600080fd5b8063c24ffe3d1461056d578063c934b7b814610575578063d96a094a14610588578063dae0f1981461059b578063dc4b9e38146105a3578063e5652b38146105b657600080fd5b8063a8660a7811610120578063a8660a7814610519578063aad3ec9614610522578063ac2a811014610535578063b79456b914610548578063bad935561461055b578063bc0f5f841461056457600080fd5b8063817dbe9f146104ae57806383d59e00146104ee5780638456cb59146104f75780638a2448aa146104ff578063906a26e014610507578063a035b1fe1461051057600080fd5b80633ccfd60b1161020b5780635c975abb116101c45780635c975abb1461044a5780635e9777e81461045c5780636bda75dd1461046557806378065f271461047f57806378e97925146104925780637c6543031461049b57600080fd5b80633ccfd60b1461040f5780633dba9e41146104175780633f4ba83a1461042457806343d726d61461042c57806347d02f1b14610434578063597e1fb51461043d57600080fd5b80631cfe562e1161025d5780631cfe562e146103635780632755cd2d1461036c578063311f8483146103ae5780633197cbb6146103de57806338af3eed146103e7578063392f37e9146103fa57600080fd5b8063031b36771461029a57806303aabe31146102ff5780630826d2c714610314578063117a36d11461032b578063158ef93e1461034f575b600080fd5b6102d46102a8366004612ed5565b601960205260009081526040902080546001820154600283015460039093015460ff9283169391921684565b6040805160ff9095168552602085019390935291830152151560608201526080015b60405180910390f35b61031261030d366004612ed5565b610633565b005b61031d600e5481565b6040519081526020016102f6565b600c5461033f90600160281b900460ff1681565b60405190151581526020016102f6565b600c5461033f906301000000900460ff1681565b61031d60105481565b601354601454601554601654601754610386949392919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102f6565b6009546103c69061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016102f6565b61031d60075481565b6000546103c6906001600160a01b031681565b610402610968565b6040516102f69190612f40565b6103126109f6565b60095461033f9060ff1681565b610312610b68565b610312610c1c565b61031d600f5481565b600c5461033f9060ff1681565b600c5461033f90610100900460ff1681565b61031d600d5481565b61046d610c79565b6040516102f696959493929190612f8e565b600a546103c6906001600160a01b031681565b61031d60065481565b600c5461033f9062010000900460ff1681565b6104c16104bc366004613039565b610f40565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016102f6565b61031d60115481565b610312610f86565b61031d61103c565b61031d60025481565b61031d60125481565b61031d60085481565b610312610530366004613052565b611235565b610312610543366004613168565b611434565b610312610556366004613303565b6114ac565b61031d60055481565b61031d60045481565b61031d611839565b61031d610583366004612ed5565b611938565b61031d610596366004613039565b611a27565b61031d612050565b61031d6105b1366004612ed5565b612071565b6103126105c4366004612ed5565b6120b6565b600c5461033f90640100000000900460ff1681565b6103126105ec366004613410565b61218b565b6001546103c6906001600160a01b031681565b61031d60035481565b61031261061b366004613543565b612530565b61031261062e3660046135d7565b612623565b6001546001600160a01b031633146106665760405162461bcd60e51b815260040161065d90613621565b60405180910390fd5b600c5460ff16806106805750600c54600160281b900460ff165b8061068d57506007544210155b6107305760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c40161065d565b600c54640100000000900460ff166108b0576009546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190613658565b1161080d5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b606482015260840161065d565b6016546009546040516370a0823160e01b81523060048201526000929161010090046001600160a01b0316906370a0823190602401602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613658565b61088d9190613687565b6009549091506108ac9061010090046001600160a01b03168383612830565b5050565b6000600e546005546108c29190613687565b6009546040516370a0823160e01b8152306004820152919250600091839161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190613658565b6109439190613687565b6009549091506109629061010090046001600160a01b03168483612830565b50505b50565b600b80546109759061369a565b80601f01602080910402602001604051908101604052809291908181526020018280546109a19061369a565b80156109ee5780601f106109c3576101008083540402835291602001916109ee565b820191906000526020600020905b8154815290600101906020018083116109d157829003601f168201915b505050505081565b6001546001600160a01b03163314610a205760405162461bcd60e51b815260040161065d90613621565b600c54600160281b900460ff1680610a4f5750600c54640100000000900460ff168015610a4f57506007544210155b610adb5760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a40161065d565b601054601155600a546040516370a0823160e01b8152306004820152610b669133916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b539190613658565b600a546001600160a01b03169190612830565b565b6001546001600160a01b03163314610b925760405162461bcd60e51b815260040161065d90613621565b600c5460ff161515600103610bb95760405162461bcd60e51b815260040161065d906136d4565b600c5460ff610100909104161515600114610c0f5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b604482015260640161065d565b600c805461ff0019169055565b6001546001600160a01b03163314610c465760405162461bcd60e51b815260040161065d90613621565b600c5460ff1615610c695760405162461bcd60e51b815260040161065d906136d4565b600c805461ffff19166001179055565b60608060608060608060006018805490509050806001600160401b03811115610ca457610ca461307c565b604051908082528060200260200182016040528015610ccd578160200160208202803683370190505b509650806001600160401b03811115610ce857610ce861307c565b604051908082528060200260200182016040528015610d11578160200160208202803683370190505b509550806001600160401b03811115610d2c57610d2c61307c565b604051908082528060200260200182016040528015610d55578160200160208202803683370190505b509450806001600160401b03811115610d7057610d7061307c565b604051908082528060200260200182016040528015610d99578160200160208202803683370190505b509350806001600160401b03811115610db457610db461307c565b604051908082528060200260200182016040528015610ddd578160200160208202803683370190505b509250806001600160401b03811115610df857610df861307c565b604051908082528060200260200182016040528015610e21578160200160208202803683370190505b50915060005b81811015610f3657600060188281548110610e4457610e4461370b565b906000526020600020906006020190508060000154898381518110610e6b57610e6b61370b565b6020026020010181815250508060010154888381518110610e8e57610e8e61370b565b6020026020010181815250508060020154878381518110610eb157610eb161370b565b6020026020010181815250508060030154868381518110610ed457610ed461370b565b6020026020010181815250508060040154858381518110610ef757610ef761370b565b6020026020010181815250508060050154848381518110610f1a57610f1a61370b565b602090810291909101015250610f2f81613721565b9050610e27565b5050909192939495565b60188181548110610f5057600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909286565b6001546001600160a01b03163314610fb05760405162461bcd60e51b815260040161065d90613621565b600c5460ff1615610fd35760405162461bcd60e51b815260040161065d906136d4565b600c54610100900460ff161561102b5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161065d565b600c805461ff001916610100179055565b600042600654111561109b5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b606482015260840161065d565b600c54640100000000900460ff16156110f65760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d6574604482015260640161065d565b3360009081526019602052604090206002810154806111575760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e7400000000000000604482015260640161065d565b61116033612071565b600e6000828254611171919061373a565b9091555050600d80549060006111868361374d565b91905055506000826002018190555080601060008282546111a79190613687565b9091555050815460188054839260ff169081106111c6576111c661370b565b906000526020600020906006020160050160008282546111e69190613687565b9091555050600a54611202906001600160a01b03163383612830565b604051819033907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b69106495090600090a392915050565b600c54640100000000900460ff1661129b5760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b606482015260840161065d565b4260075410806112b45750600c54600160281b900460ff165b6112d05760405162461bcd60e51b815260040161065d90613764565b60006112db83611938565b90506000811161132d5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161065d565b818110156113945760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b606482015260840161065d565b6001600160a01b038316600090815260196020526040812060010180548492906113bf90849061373a565b9250508190555081600f60008282546113d8919061373a565b90915550506009546113f99061010090046001600160a01b03168484612830565b60405182906001600160a01b038516907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43090600090a3505050565b6001546001600160a01b0316331461145e5760405162461bcd60e51b815260040161065d90613621565b600c5460ff16158015611472575060085442105b61148e5760405162461bcd60e51b815260040161065d906137af565b60095460ff16156114a2576114a282612893565b6108ac82826128fd565b6001546001600160a01b031633146114d65760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156114ea575060085442105b6115065760405162461bcd60e51b815260040161065d906137af565b8585858585856000865190508551811480156115225750845181145b801561152e5750835181145b801561153a5750825181145b80156115465750815181145b6115a85760405162461bcd60e51b815260206004820152602d60248201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460448201526c2062652073616d652073697a6560981b606482015260840161065d565b60648111156116125760405162461bcd60e51b815260206004820152603060248201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060448201526f7468656e2031303020636c617373657360801b606482015260840161065d565b6018546101009061162490839061373a565b11156116805760405162461bcd60e51b815260206004820152602560248201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604482015264617373657360d81b606482015260840161065d565b60185460005b8e518160ff16101561173b5761172b8f8260ff16815181106116aa576116aa61370b565b60200260200101518f8360ff16815181106116c7576116c761370b565b60200260200101518f8460ff16815181106116e4576116e461370b565b60200260200101518f8560ff16815181106117015761170161370b565b60200260200101518f8660ff168151811061171e5761171e61370b565b602002602001015161299f565b611734816137dc565b9050611686565b50885160095460ff16156117885760005b81811015611786576117768b82815181106117695761176961370b565b6020026020010151612893565b61177f81613721565b905061174c565b505b60005b818110156118275760008b82815181106117a7576117a761370b565b602002602001015151905060005b81811015611809576117f9858e85815181106117d3576117d361370b565b602002602001015183815181106117ec576117ec61370b565b6020026020010151612b41565b61180281613721565b90506117b5565b5061181384613721565b9350508061182090613721565b905061178b565b50505050505050505050505050505050565b60004260075410806118545750600c54600160281b900460ff165b6118705760405162461bcd60e51b815260040161065d90613764565b600061187a612050565b9050600081116118cc5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c6520697320300000000000604482015260640161065d565b80601360040160008282546118e1919061373a565b9091555050600054600954611908916001600160a01b036101009092048216911683612830565b60405181907fecc980da7c913e12084687ea0133e12ca310132a33ffff999d177bd941c2073590600090a2919050565b6001600160a01b03811660009081526019602090815260408083208151608081018352815460ff9081168083526001840154958301959095526002830154938201939093526003909101549091161515606082015260188054919291849190839081106119a7576119a761370b565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050611a1e611a0a86612071565b826060015183608001518660200151612bc0565b95945050505050565b600c5460009060ff1615611a4d5760405162461bcd60e51b815260040161065d906136d4565b600c54610100900460ff1615611aa55760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604482015260640161065d565b33600090815260196020526040902060095460ff161580611aca5750600381015460ff165b611b165760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f20726967687473000000000000604482015260640161065d565b80546018805460009260ff16908110611b3157611b3161370b565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050600c60059054906101000a900460ff1615611be55760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e672072656163686564000000604482015260640161065d565b60008411611c355760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e7300000000000000604482015260640161065d565b8060200151848260a00151611c4a919061373a565b1115611ca45760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b606482015260840161065d565b8060400151848360020154611cb9919061373a565b1115611d165760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b606482015260840161065d565b4260075410158015611d2a57504260065411155b611d8c5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b606482015260840161065d565b600c5462010000900460ff16611e8057600480546009546040516370a0823160e01b8152309381019390935290916101009091046001600160a01b0316906370a0823190602401602060405180830381865afa158015611df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e149190613658565b1015611e6e5760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b606482015260840161065d565b600c805462ff00001916620100001790555b601254600090611e98670de0b6b3a7640000876137fb565b611ea29190613812565b905060035485601054611eb5919061373a565b1115611f165760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b606482015260840161065d565b8460106000828254611f28919061373a565b9091555050825460188054879260ff16908110611f4757611f4761370b565b90600052602060002090600602016005016000828254611f67919061373a565b9091555050600e54611f7a908290613687565b600e5560025460105410611f9e57600c805464ff0000000019166401000000001790555b60035460105410611fc357600c805465ff00000000001916600160281b179055426008555b8260020154600003611fe557600d8054906000611fdf83613721565b91905055505b84836002016000828254611ff9919061373a565b9091555050600a54612016906001600160a01b0316333088612c41565b600e54604051829033907fda8c9af77929af2caa4dea1f45f48f246846d971e045df75beb9155709769e1290600090a4925050505b919050565b60165460145460155460175460009361206c9390929091612bc0565b905090565b6012546001600160a01b0382166000908152601960205260408120600201549091906120a690670de0b6b3a7640000906137fb565b6120b09190613812565b92915050565b6001546001600160a01b031633146120e05760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156120f4575060085442105b6121105760405162461bcd60e51b815260040161065d906137af565b60095460ff1615156001146121675760405162461bcd60e51b815260206004820152601e60248201527f536565643a2073656564206973206e6f74207065726d697373696f6e65640000604482015260640161065d565b6001600160a01b03166000908152601960205260409020600301805460ff19169055565b600c546301000000900460ff16156121f05760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b606482015260840161065d565b600c805463ff00000019166301000000179055600080546001600160a01b03808d166001600160a01b031992831617835560018054918d169190921617905587518891906122405761224061370b565b6020026020010151600281905550866001815181106122615761226161370b565b6020026020010151600381905550846000815181106122825761228261370b565b6020026020010151600681905550846001815181106122a3576122a361370b565b602002602001015160078190555060075460016122c0919061373a565b6008556009805460ff1916841515179055875188906000906122e4576122e461370b565b6020026020010151600960016101000a8154816001600160a01b0302191690836001600160a01b03160217905550876001815181106123255761232561370b565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b031602179055508560128190555085670de0b6b3a764000060035461237191906137fb565b61237b9190613812565b6005819055506000670de0b6b3a76400008260008151811061239f5761239f61370b565b60200260200101516005546123b491906137fb565b6123be9190613812565b90506040518060a00160405280836000815181106123de576123de61370b565b60200260200101518152602001836001815181106123fe576123fe61370b565b602002602001015181526020018360028151811061241e5761241e61370b565b60209081029190910181015182528181018490526000604092830181905283516013559083015160145590820151601555606082015160165560809091015160175560035486516124b19291908890839061247b5761247b61370b565b6020026020010151886001815181106124965761249661370b565b60200260200101518960028151811061171e5761171e61370b565b60095460ff16151560011480156124c9575060008351115b1561250e57825160005b81811015612502576124f260008683815181106117ec576117ec61370b565b6124fb81613721565b90506124d3565b5061250c84612893565b505b600554600e819055612520908261373a565b6004555050505050505050505050565b600c546301000000900460ff161515600114158061255857506001546001600160a01b031633145b6125d55760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a40161065d565b600b6125e18282613882565b50806040516125f09190613941565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b838381811115801561263757506003548211155b61267c5760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b604482015260640161065d565b6000821161269c5760405162461bcd60e51b815260040161065d9061395d565b6001546001600160a01b031633146126c65760405162461bcd60e51b815260040161065d90613621565b600c5460ff161580156126da575060085442105b6126f65760405162461bcd60e51b815260040161065d906137af565b60185460ff89161061274a5760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604482015260640161065d565b8660188960ff16815481106127615761276161370b565b9060005260206000209060060201600001819055508560188960ff168154811061278d5761278d61370b565b9060005260206000209060060201600101819055508460188960ff16815481106127b9576127b961370b565b9060005260206000209060060201600201819055508360188960ff16815481106127e5576127e561370b565b9060005260206000209060060201600301819055508260188960ff16815481106128115761281161370b565b9060005260206000209060060201600401819055505050505050505050565b6040516001600160a01b03831660248201526044810182905261096290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c79565b805160005b81811015610962576001601960008584815181106128b8576128b861370b565b6020908102919091018101516001600160a01b03168252810191909152604001600020600301805460ff19169115159190911790556128f681613721565b9050612898565b81518151811461294f5760405162461bcd60e51b815260206004820152601e60248201527f536565643a206d69736d6174636820696e206172726179206c656e6774680000604482015260640161065d565b60005b818110156129995761298983828151811061296f5761296f61370b565b60200260200101518583815181106117ec576117ec61370b565b61299281613721565b9050612952565b50505050565b83838181111580156129b357506003548211155b6129f85760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b604482015260640161065d565b60008211612a185760405162461bcd60e51b815260040161065d9061395d565b50506040805160c0810182529586526020860194855285019283526060850191825260808501908152600060a0860181815260188054600181018255925295517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e60069092029182015593517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2f85015591517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d30840155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d31830155517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3282015590517fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d3390910155565b60185460ff831610612b955760405162461bcd60e51b815260206004820152601c60248201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604482015260640161065d565b6001600160a01b03166000908152601960205260409020805460ff191660ff92909216919091179055565b6000600854421015612bd457506000612c39565b600060085442612be49190613687565b905084811015612bf8576000915050612c39565b838110612c1157612c098387613687565b915050612c39565b600084612c1e88846137fb565b612c289190613812565b9050612c348482613687565b925050505b949350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526129999085906323b872dd60e01b9060840161285c565b6000612cce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d4b9092919063ffffffff16565b8051909150156109625780806020019051810190612cec91906139a4565b6109625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161065d565b6060612d5a8484600085612d64565b90505b9392505050565b606082471015612dc55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161065d565b6001600160a01b0385163b612e1c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161065d565b600080866001600160a01b03168587604051612e389190613941565b60006040518083038185875af1925050503d8060008114612e75576040519150601f19603f3d011682016040523d82523d6000602084013e612e7a565b606091505b5091509150612c3482828660608315612e94575081612d5d565b825115612ea45782518084602001fd5b8160405162461bcd60e51b815260040161065d9190612f40565b80356001600160a01b038116811461204b57600080fd5b600060208284031215612ee757600080fd5b612d5d82612ebe565b60005b83811015612f0b578181015183820152602001612ef3565b50506000910152565b60008151808452612f2c816020860160208601612ef0565b601f01601f19169290920160200192915050565b602081526000612d5d6020830184612f14565b600081518084526020808501945080840160005b83811015612f8357815187529582019590820190600101612f67565b509495945050505050565b60c0808252875190820181905260009060209060e0840190828b01845b82811015612fc757815184529284019290840190600101612fab565b50505083810382850152612fdb818a612f53565b9150508281036040840152612ff08188612f53565b905082810360608401526130048187612f53565b905082810360808401526130188186612f53565b905082810360a084015261302c8185612f53565b9998505050505050505050565b60006020828403121561304b57600080fd5b5035919050565b6000806040838503121561306557600080fd5b61306e83612ebe565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156130ba576130ba61307c565b604052919050565b60006001600160401b038211156130db576130db61307c565b5060051b60200190565b600082601f8301126130f657600080fd5b8135602061310b613106836130c2565b613092565b82815260059290921b8401810191818101908684111561312a57600080fd5b8286015b8481101561314c5761313f81612ebe565b835291830191830161312e565b509695505050505050565b803560ff8116811461204b57600080fd5b6000806040838503121561317b57600080fd5b82356001600160401b038082111561319257600080fd5b61319e868387016130e5565b93506020915081850135818111156131b557600080fd5b85019050601f810186136131c857600080fd5b80356131d6613106826130c2565b81815260059190911b820183019083810190888311156131f557600080fd5b928401925b8284101561321a5761320b84613157565b825292840192908401906131fa565b80955050505050509250929050565b600082601f83011261323a57600080fd5b8135602061324a613106836130c2565b82815260059290921b8401810191818101908684111561326957600080fd5b8286015b8481101561314c578035835291830191830161326d565b600082601f83011261329557600080fd5b813560206132a5613106836130c2565b82815260059290921b840181019181810190868411156132c457600080fd5b8286015b8481101561314c5780356001600160401b038111156132e75760008081fd5b6132f58986838b01016130e5565b8452509183019183016132c8565b60008060008060008060c0878903121561331c57600080fd5b86356001600160401b038082111561333357600080fd5b61333f8a838b01613229565b9750602089013591508082111561335557600080fd5b6133618a838b01613229565b9650604089013591508082111561337757600080fd5b6133838a838b01613229565b9550606089013591508082111561339957600080fd5b6133a58a838b01613229565b945060808901359150808211156133bb57600080fd5b6133c78a838b01613229565b935060a08901359150808211156133dd57600080fd5b506133ea89828a01613284565b9150509295509295509295565b801515811461096557600080fd5b803561204b816133f7565b6000806000806000806000806000806101408b8d03121561343057600080fd5b6134398b612ebe565b995061344760208c01612ebe565b985060408b01356001600160401b038082111561346357600080fd5b61346f8e838f016130e5565b995060608d013591508082111561348557600080fd5b6134918e838f01613229565b985060808d0135975060a08d01359150808211156134ae57600080fd5b6134ba8e838f01613229565b965060c08d01359150808211156134d057600080fd5b6134dc8e838f01613229565b95506134ea60e08e01613405565b94506101008d013591508082111561350157600080fd5b61350d8e838f016130e5565b93506101208d013591508082111561352457600080fd5b506135318d828e01613229565b9150509295989b9194979a5092959850565b6000602080838503121561355657600080fd5b82356001600160401b038082111561356d57600080fd5b818501915085601f83011261358157600080fd5b8135818111156135935761359361307c565b6135a5601f8201601f19168501613092565b915080825286848285010111156135bb57600080fd5b8084840185840137600090820190930192909252509392505050565b60008060008060008060c087890312156135f057600080fd5b6135f987613157565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b60006020828403121561366a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156120b0576120b0613671565b600181811c908216806136ae57607f821691505b6020821081036136ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006001820161373357613733613671565b5060010190565b808201808211156120b0576120b0613671565b60008161375c5761375c613671565b506000190190565b6020808252602b908201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960408201526a195d08199a5b9a5cda195960aa1b606082015260800190565b602080825260139082015272536565643a2073616c65206e6f74206c69766560681b604082015260600190565b600060ff821660ff81036137f2576137f2613671565b60010192915050565b80820281158282048414176120b0576120b0613671565b60008261382f57634e487b7160e01b600052601260045260246000fd5b500490565b601f82111561096257600081815260208120601f850160051c8101602086101561385b5750805b601f850160051c820191505b8181101561387a57828155600101613867565b505050505050565b81516001600160401b0381111561389b5761389b61307c565b6138af816138a9845461369a565b84613834565b602080601f8311600181146138e457600084156138cc5750858301515b600019600386901b1c1916600185901b17855561387a565b600085815260208120601f198616915b82811015613913578886015182559484019460019091019084016138f4565b50858210156139315787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613953818460208701612ef0565b9190910192915050565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b6000602082840312156139b657600080fd5b8151612d5d816133f756fea2646970667358221220c63a025ac8680dbd3e7390a1e576dd88e60ecbb3a93498d16d31880c6601c2da64736f6c63430008110033",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "allowlist(address[],uint8[])": {
        "details": "Add multiple addresses to contributor classes, and if applicable allowlist them.",
        "params": {
          "_buyers": "Array of addresses to be allowlisted",
          "_classes": "Array of classes assigned in batch"
        }
      },
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaimFunder(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)": {
        "details": "Change parameters in the class.",
        "params": {
          "_class": "Class for changing.",
          "_classCap": "The total cap of the contributor class, denominated in Wei.",
          "_className": "The name of the class",
          "_individualCap": "The personal cap of each contributor in this class, denominated in Wei.",
          "_vestingCliff": "The cliff duration, denominated in seconds.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the allowlist."
      },
      "initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to allowlist users, pause and close contract.",
          "_allowlistAddresses": "Array of addresses to be allowlisted for the default class, at creation time",
          "_beneficiary": "The address that recieves fees.",
          "_defaultClassParameters": "Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.",
          "_permissionedSeed": "Set to true if only allowlisted adresses are allowed to participate.",
          "_price": "Price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softAndHardCap": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTimeAndEndTime": "Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.",
          "_tip": "Array of containing three parameters: - Total amount of tip percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tip vesting period duration denominated in seconds.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t - Tipcliff duration denominated in seconds.\t",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token."
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "unAllowlist(address)": {
        "details": "Remove address from allowlist.",
        "params": {
          "_buyer": "Address which needs to be un-allowlisted"
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5103,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5105,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5107,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5109,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5111,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5113,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalBuyableSeed",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 5115,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 5117,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 5119,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 5121,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 5124,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 1,
        "slot": "9",
        "type": "t_contract(IERC20)3353"
      },
      {
        "astId": 5127,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IERC20)3353"
      },
      {
        "astId": 5129,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "11",
        "type": "t_bytes_storage"
      },
      {
        "astId": 5136,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5138,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5140,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5142,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5144,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5146,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 5148,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 5150,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 5152,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 5154,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 5156,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 5158,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 5161,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "tip",
        "offset": 0,
        "slot": "19",
        "type": "t_struct(Tip)5231_storage"
      },
      {
        "astId": 5165,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "classes",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_struct(ContributorClass)5220_storage)dyn_storage"
      },
      {
        "astId": 5170,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)5207_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ContributorClass)5220_storage)dyn_storage": {
        "base": "t_struct(ContributorClass)5220_storage",
        "encoding": "dynamic_array",
        "label": "struct Seed.ContributorClass[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)3353": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)5207_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)5207_storage"
      },
      "t_struct(ContributorClass)5220_storage": {
        "encoding": "inplace",
        "label": "struct Seed.ContributorClass",
        "members": [
          {
            "astId": 5209,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "className",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 5211,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5213,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "individualCap",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5215,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingCliff",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5217,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5219,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classFundingCollected",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(FunderPortfolio)5207_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 5200,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "class",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 5202,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5204,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5206,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "allowlist",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Tip)5231_storage": {
        "encoding": "inplace",
        "label": "struct Seed.Tip",
        "members": [
          {
            "astId": 5222,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "tipPercentage",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5224,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingCliff",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 5226,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5228,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "tipAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5230,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}