{
  "address": "0x058DA0fA62A28a7eBA23010dBF74c23f5AC245C7",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "addClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_classNames",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_classCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_individualCaps",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingCliffs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_vestingDurations",
          "type": "uint256[]"
        }
      ],
      "name": "addClassBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "name": "changeClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "classes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "className",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "classCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "individualCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingCliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "classFundingCollected",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "class",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllClasses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_startTimeAndEndTime",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_defaultClassParameters",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "_whitelistAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tipping",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        }
      ],
      "name": "setClass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "setClassBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tippingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_classes",
          "type": "uint8[]"
        }
      ],
      "name": "whitelistBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d4c4dffd98057a11da9dbc642a3da49b4c25704526c94f9e3b9b3fb0d29d804",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x058DA0fA62A28a7eBA23010dBF74c23f5AC245C7",
    "transactionIndex": 6,
    "gasUsed": "3214892",
    "logsBloom": "0x
    "blockHash": "0xf2e92f7a73c19586eba2963150f8dea1940d27eb1155b33b2001405d592a7f5d",
    "transactionHash": "0x2d4c4dffd98057a11da9dbc642a3da49b4c25704526c94f9e3b9b3fb0d29d804",
    "logs": [],
    "blockNumber": 11464468,
    "cumulativeGasUsed": "4446748",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2a4d240f8087539ede6a0f04fbb1fba3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"addClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_classNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_classCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_individualCaps\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingCliffs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_vestingDurations\",\"type\":\"uint256[]\"}],\"name\":\"addClassBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"name\":\"changeClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"classes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"className\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"classCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingCliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"classFundingCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllClasses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_startTimeAndEndTime\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_defaultClassParameters\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"_whitelistAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tipping\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"}],\"name\":\"setClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"setClassBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tippingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_class\",\"type\":\"uint8\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_classes\",\"type\":\"uint8[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"addClass(bytes32,uint256,uint256,uint256,uint256)\":{\"details\":\"Add contributor class.\",\"params\":{\"_classCap\":\"The total cap of the contributor class, denominated in Wei.\",\"_className\":\"The name of the class\",\"_individualCap\":\"The personal cap of each contributor in this class, denominated in Wei.\",\"_vestingCliff\":\"The cliff duration, denominated in seconds.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"addClassBatch(bytes32[],uint256[],uint256[],uint256[],uint256[])\":{\"details\":\"Add contributor class batch.\",\"params\":{\"_classCaps\":\"The total caps of the contributor class, denominated in Wei\",\"_classNames\":\"Array of the names of the classes\",\"_individualCaps\":\"The personal caps of each contributor in this class, denominated in Wei.\",\"_vestingCliffs\":\"The cliff duration, denominated in seconds.\",\"_vestingDurations\":\"The vesting durations for this contributors class.\"}},\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)\":{\"details\":\"Change parameters in the class.\",\"params\":{\"_class\":\"Class for changing.\",\"_classCap\":\"The total cap of the contributor class, denominated in Wei.\",\"_className\":\"The name of the class\",\"_individualCap\":\"The personal cap of each contributor in this class, denominated in Wei.\",\"_vestingCliff\":\"The cliff duration, denominated in seconds.\",\"_vestingDuration\":\"The vesting duration for this contributors class.\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist.\"},\"initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_defaultClassParameters\":\"Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTimeAndEndTime\":\"Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.\",\"_tipping\":\"Array of containing three parameters: - Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tipping vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t - Tipping cliff duration denominated in seconds.\\t\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token.\",\"_whitelistAddresses\":\"Array of addresses to be whitelisted for the default class, at creation time\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"setClass(address,uint8)\":{\"details\":\"Set contributor class.\",\"params\":{\"_address\":\"Address of the contributor.\",\"_class\":\"Class of the contributor.\"}},\"setClassBatch(address[],uint8[])\":{\"details\":\"Set contributor classes.\",\"params\":{\"_addresses\":\"Addresses of the contributors.\",\"_classes\":\"Classes of the contributor.\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address,uint8)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\",\"_class\":\"Class to which buyer will be assigned\"}},\"whitelistBatch(address[],uint8[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\",\"_classes\":\"Array of classes assigned in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0\\n// PrimeDAO Seed contract. Smart contract for seed phases of liquid launch.\\n// Copyright (C) 2021 PrimeDao\\n\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.9;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    using SafeERC20 for IERC20;\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution\\n    uint256 public tippingAmount; // Amount of seed tokens tipped to the beneficiary\\n    uint256 public startTime;\\n    uint256 public endTime; // set by project admin, this is the last resort endTime to be applied when\\n    //     maximumReached has not been reached by then\\n    uint256 public vestingStartTime; // timestamp for when vesting starts, by default == endTime,\\n    //     otherwise when maximumReached is reached\\n    bool public permissionedSeed;\\n    // uint32 public vestingCliff;\\n    IERC20 public seedToken;\\n    IERC20 public fundingToken;\\n    bytes public metadata; // IPFS Hash\\n\\n    uint256 internal constant MAX_FEE = (45 / 100) * 10**18; // Max fee expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee)\\n    uint256 internal constant PRECISION = 10**18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool public closed; // is the distribution closed\\n    bool public paused; // is the distribution paused\\n    bool public isFunded; // distribution can only start when required seed tokens have been funded\\n    bool public initialized; // is this contract initialized [not necessary that it is funded]\\n    bool public minimumReached; // if the softCap[minimum limit of funding token] is reached\\n    bool public maximumReached; // if the hardCap[maximum limit of funding token] is reached\\n\\n    uint256 public totalFunderCount; // Total funders that have contributed.\\n    uint256 public seedRemainder; // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed; // Amount of seed token claimed by the user.\\n    uint256 public feeRemainder; // Amount of seed tokens remaining for the fee\\n    uint256 public fundingCollected; // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn; // Amount of funding token withdrawn from the seed contract.\\n    uint256 public feeClaimed; //Amount of all fee claimed when the seed was claimed.\\n\\n    uint256 public price;\\n    uint256 private fee;\\n\\n    ContributorClass[] public classes; // Array of contributor classes\\n\\n    mapping(address => bool) public whitelisted; // funders that are whitelisted and allowed to contribute\\n    mapping(address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\n    event TokensClaimed(address indexed recipient, uint256 amount);\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    struct FunderPortfolio {\\n        uint8 class; // Contibutor class id\\n        uint256 totalClaimed; // Total amount of seed tokens claimed\\n        uint256 fundingAmount; // Total amount of funding tokens contributed\\n    }\\n    // ToDo: add comments\\n    struct ContributorClass {\\n        bytes32 className;\\n        uint256 classCap; // Amount of tokens that can be donated for class\\n        uint256 individualCap; // Amount of tokens that can be donated by specific contributor\\n        uint256 vestingCliff;\\n        uint256 vestingDuration; // Vesting duration for class\\n        uint256 classFundingCollected; // Total amount of staked tokens\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    modifier classRestriction(uint256 _classCap, uint256 _individualCap) {\\n        require(\\n            classes.length + 1 < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        require(\\n            _individualCap <= _classCap && _classCap <= hardCap,\\n            \\\"Seed: caps are invalid\\\"\\n        );\\n        require(\\n            block.timestamp < startTime,\\n            \\\"Seed: vesting is already started\\\"\\n        );\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(_classCap > 0, \\\"Seed: class Cap should be bigger then 0\\\");\\n        _;\\n    }\\n\\n    function _addClass(\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) internal classRestriction(_classCap, _individualCap) {\\n        classes.push(\\n            ContributorClass(\\n                _className,\\n                _classCap,\\n                _individualCap,\\n                _vestingCliff,\\n                _vestingDuration,\\n                0\\n            )\\n        );\\n    }\\n\\n    /**\\n      * @dev                            Initialize Seed.\\n      * @param _beneficiary             The address that recieves fees.\\n      * @param _admin                   The address of the admin of this contract. Funds contract\\n                                            and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                  Array containing two params:\\n                                            - The address of the seed token being distributed.\\n      *                                     - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds      Array containing two params:\\n                                            - the minimum funding token collection threshold in wei denomination.\\n                                            - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                   Price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTimeAndEndTime     Array containing two params:\\n                                            - Distribution start time in unix timecode.\\n                                            - Distribution end time in unix timecode.\\n      * @param _defaultClassParameters  Array containing three params:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Individual buying cap for de default class, expressed in precision 10*18\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Cliff duration, denominated in seconds.\\n                                            - Vesting period duration, denominated in seconds.\\n      * @param _permissionedSeed        Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _whitelistAddresses      Array of addresses to be whitelisted for the default class, at creation time\\n      * @param _tipping                 Array of containing three parameters:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tipping vesting period duration denominated in seconds.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- Tipping cliff duration denominated in seconds.\\t\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256[] memory _startTimeAndEndTime, // 0 = startTime; 1 = endTime\\n        uint256[] memory _defaultClassParameters, //\\n        bool _permissionedSeed,\\n        address[] memory _whitelistAddresses,\\n        uint256[] memory _tipping\\n    ) external {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        // parameter check\\n        require(\\n            _tokens[0] != _tokens[1],\\n            \\\"SeedFactory: seedToken cannot be fundingToken\\\"\\n        );\\n        require(\\n            _softHardThresholds[1] >= _softHardThresholds[0],\\n            \\\"SeedFactory: hardCap cannot be less than softCap\\\"\\n        );\\n        require(\\n            _startTimeAndEndTime[1] > _startTimeAndEndTime[0],\\n            \\\"SeedFactory: endTime cannot be less than equal to startTime\\\"\\n        );\\n        require(\\n            _tipping[0] <= MAX_FEE,\\n            \\\"SeedFactory: fee cannot be more than 45%\\\"\\n        );\\n\\n        beneficiary = _beneficiary;\\n        admin = _admin;\\n        softCap = _softHardThresholds[0];\\n        hardCap = _softHardThresholds[1];\\n        startTime = _startTimeAndEndTime[0];\\n        endTime = _startTimeAndEndTime[1];\\n        vestingStartTime = endTime;\\n        // vestingCliff = _vestingCliff;\\n        permissionedSeed = _permissionedSeed;\\n        seedToken = IERC20(_tokens[0]);\\n        fundingToken = IERC20(_tokens[1]);\\n        // fee = _fee; // ToDo: Store tipping values\\n        price = _price;\\n\\n        feeClaimed = 0; // ToDo: Rename to tipping and use to track how much tipping has been claimed\\n\\n        seedAmountRequired = (hardCap * PRECISION) / _price;\\n        // (seedAmountRequired*fee) / (100*FEE_PRECISION) = (seedAmountRequired*fee) / PRECISION\\n        //  where FEE_PRECISION = 10**16\\n        tippingAmount = (seedAmountRequired * _tipping[0]) / PRECISION; //ToDo: rename to tippingAmountRequired. Check why calculation is done this way, and not like 2 lines above\\n\\n        // Adding default from init parameters\\n        _addClass(\\n            bytes32(\\\"\\\"),\\n            hardCap,\\n            _defaultClassParameters[0],\\n            _defaultClassParameters[1],\\n            _defaultClassParameters[2]\\n        );\\n\\n        // Add whitelist to the default class\\n        if (permissionedSeed == true && _whitelistAddresses.length > 0) {\\n            for (uint256 i; i < _whitelistAddresses.length; i++) {\\n                _whitelist(_whitelistAddresses[i], 0); // Value 0 for the default class\\n            }\\n        }\\n\\n        // ToDo: update the SeedAmountRequired with the subtracted tipping amount\\n        seedRemainder = seedAmountRequired;\\n        seedAmountRequired += tippingAmount;\\n        // feeRemainder = feeAmountRequired; //ToDo: check how this value fits with the\\n    }\\n\\n    /**\\n     * @dev                           Add contributor class.\\n     * @param _className                   The name of the class\\n     * @param _classCap               The total cap of the contributor class, denominated in Wei.\\n     * @param _individualCap          The personal cap of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliff     The cliff duration, denominated in seconds.\\n     * @param _vestingDuration   The vesting duration for this contributors class.\\n     */\\n    function addClass(\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external onlyAdmin {\\n        _addClass(\\n            _className,\\n            _classCap,\\n            _individualCap,\\n            _vestingCliff,\\n            _vestingDuration\\n        );\\n    }\\n\\n    /**\\n     * @dev                       Set contributor class.\\n     * @param _address            Address of the contributor.\\n     * @param _class              Class of the contributor.\\n     */\\n    function setClass(address _address, uint8 _class) public onlyAdmin {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(\\n            block.timestamp < startTime,\\n            \\\"Seed: vesting is already started\\\"\\n        );\\n        funders[_address].class = _class;\\n    }\\n\\n    /**\\n     * @dev                       Set contributor classes.\\n     * @param _addresses          Addresses of the contributors.\\n     * @param _classes            Classes of the contributor.\\n     */\\n    function setClassBatch(address[] memory _addresses, uint8[] memory _classes)\\n        external\\n        onlyAdmin\\n    {\\n        require(\\n            _classes.length == _addresses.length,\\n            \\\"Seed: incorrect data passed\\\"\\n        );\\n        for (uint256 i = 0; i < _addresses.length; i++) {\\n            setClass(_addresses[i], _classes[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Change parameters in the class.\\n     * @param _class            Class for changing.\\n     * @param _className        The name of the class\\n     * @param _classCap         The total cap of the contributor class, denominated in Wei.\\n     * @param _individualCap    The personal cap of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliff     The cliff duration, denominated in seconds.\\n     * @param _vestingDuration  The vesting duration for this contributors class.\\n     */\\n    function changeClass(\\n        uint8 _class,\\n        bytes32 _className,\\n        uint256 _classCap,\\n        uint256 _individualCap,\\n        uint256 _vestingCliff,\\n        uint256 _vestingDuration\\n    ) external onlyAdmin classRestriction(_classCap, _individualCap) {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n\\n        classes[_class].className = _className;\\n        classes[_class].classCap = _classCap;\\n        classes[_class].individualCap = _individualCap;\\n        classes[_class].vestingCliff = _vestingCliff;\\n        classes[_class].vestingDuration = _vestingDuration;\\n    }\\n\\n    /**\\n     * @dev                           Add contributor class batch.\\n     * @param _classNames                  Array of the names of the classes\\n     * @param _classCaps              The total caps of the contributor class, denominated in Wei\\n     * @param _individualCaps         The personal caps of each contributor in this class, denominated in Wei.\\n     * @param _vestingCliffs     The cliff duration, denominated in seconds.\\n     * @param _vestingDurations  The vesting durations for this contributors class.\\n     */\\n    function addClassBatch(\\n        bytes32[] memory _classNames,\\n        uint256[] memory _classCaps,\\n        uint256[] memory _individualCaps,\\n        uint256[] memory _vestingCliffs,\\n        uint256[] memory _vestingDurations\\n    ) external onlyAdmin {\\n        uint256 arrayLength = _classNames.length;\\n        require(\\n            arrayLength <= 100,\\n            \\\"Seed: Can't add batch with more then 100 classes\\\"\\n        );\\n        require(\\n            classes.length + arrayLength < 256,\\n            \\\"Seed: can't add more then 256 classes\\\"\\n        );\\n        require(\\n            arrayLength == _classCaps.length &&\\n                arrayLength == _individualCaps.length &&\\n                arrayLength == _vestingCliffs.length &&\\n                arrayLength == _vestingDurations.length,\\n            \\\"Seed: All provided arrays should be same size\\\"\\n        );\\n        for (uint8 i = 0; i < arrayLength; i++) {\\n            // calculateSeedAndFee(_prices[i], _classFee[i], _classCaps[i]);\\n            _addClass(\\n                _classNames[i],\\n                _classCaps[i],\\n                _individualCaps[i],\\n                _vestingCliffs[i],\\n                _vestingDurations[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Buy seed tokens.\\n     * @param _fundingAmount    The amount of funding tokens to contribute.\\n     */\\n    function buy(uint256 _fundingAmount) external isActive returns (uint256) {\\n        require(\\n            !permissionedSeed || whitelisted[msg.sender],\\n            \\\"Seed: sender has no rights\\\"\\n        );\\n\\n        ContributorClass memory userClass = classes[funders[msg.sender].class];\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(_fundingAmount > 0, \\\"Seed: cannot buy 0 tokens\\\");\\n        // Checks if contributor has exceeded his personal or class cap.\\n        require(\\n            (userClass.classFundingCollected + _fundingAmount) <=\\n                userClass.classCap,\\n            \\\"Seed: maximum class funding reached\\\"\\n        );\\n\\n        require(\\n            (funders[msg.sender].fundingAmount + _fundingAmount) <=\\n                userClass.individualCap,\\n            \\\"Seed: maximum personal funding reached\\\"\\n        );\\n\\n        require(\\n            endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\"\\n        );\\n\\n        if (!isFunded) {\\n            require(\\n                // classSeedAmountRequired is an amount which is needed to be sold\\n                // So when it's reached, for others will their balance be bigger or not - doesn't matter anymore.\\n                seedToken.balanceOf(address(this)) >= seedAmountRequired, // ToDo: had (seedAmountRequired + feeAmountRequired here)\\n                \\\"Seed: sufficient seeds not provided\\\"\\n            );\\n            isFunded = true;\\n        }\\n\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount * PRECISION) / price;\\n\\n        //ToDo: edit fee amount\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\n        // uint256 feeAmount = (seedAmount *\\n        //     classes[funders[msg.sender].class].classFee) / PRECISION;\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require(\\n            fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\"\\n        );\\n\\n        fundingCollected += _fundingAmount;\\n        classes[funders[msg.sender].class]\\n            .classFundingCollected += _fundingAmount;\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder = seedRemainder - seedAmount;\\n        // feeRemainder = feeRemainder - feeAmount;\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = block.timestamp;\\n            // for (uint8 i = 0; i < classes.length; i++) {\\n            //     classes[i].classVestingStartTime =\\n            //         block.timestamp +\\n            //         (classes[i].classVestingStartTime - endTime);\\n            // }\\n        }\\n\\n        //functionality of addFunder\\n        if (funders[msg.sender].fundingAmount == 0) {\\n            totalFunderCount++;\\n        }\\n        funders[msg.sender].fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n\\n        fundingToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            _fundingAmount\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount);\\n\\n        return (seedAmount);\\n    }\\n\\n    /**\\n     * @dev                     Claim vested seed tokens.\\n     * @param _funder           Address of funder to calculate seconds and amount claimable\\n     * @param _claimAmount      The amount of seed token a users wants to claim.\\n     */\\n    function claim(address _funder, uint256 _claimAmount) external {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        // FunderPortfolio memory tokenFunder = funders[_funder];\\n        // uint8 currentId = tokenFunder.class;\\n        // ContributorClass memory claimed = classes[currentId];\\n        // uint256 currentClassVestingStartTime = claimed.classVestingStartTime;\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n        require(\\n            vestingStartTime < block.timestamp,\\n            \\\"Seed: vesting start time for this class is not started yet\\\"\\n        );\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(\\n            amountClaimable >= _claimAmount,\\n            \\\"Seed: request is greater than claimable amount\\\"\\n        );\\n        // uint256 currentClassFee = claimed.classFee;\\n        // uint256 feeAmountOnClaim = (_claimAmount * currentClassFee) / PRECISION;\\n\\n        funders[_funder].totalClaimed += _claimAmount;\\n\\n        seedClaimed += _claimAmount;\\n        // feeClaimed += feeAmountOnClaim;\\n\\n        // seedToken.safeTransfer(beneficiary, feeAmountOnClaim);\\n        seedToken.safeTransfer(_funder, _claimAmount);\\n\\n        emit TokensClaimed(_funder, _claimAmount);\\n\\n        // return feeAmountOnClaim; ToDo: Do we want to keep a return value?\\n    }\\n\\n    /**\\n     * @dev         Returns funding tokens to user.\\n     */\\n    function retrieveFundingTokens() external returns (uint256) {\\n        require(\\n            startTime <= block.timestamp,\\n            \\\"Seed: distribution haven't started\\\"\\n        );\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        // feeRemainder += feeForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        classes[tokenFunder.class].classFundingCollected -= fundingAmount;\\n\\n        fundingToken.safeTransfer(msg.sender, fundingAmount);\\n\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n     * @dev                     Pause distribution.\\n     */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n     * @dev                     Unpause distribution.\\n     */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the whitelist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n     * @dev                     retrieve remaining seed tokens back to project.\\n     * @param _refundReceiver   refund receiver address\\n     */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed || maximumReached || block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require(\\n                seedToken.balanceOf(address(this)) > 0,\\n                \\\"Seed: Failed to transfer Seed Token\\\" // ToDo: better error message\\n            );\\n            seedToken.safeTransfer(\\n                _refundReceiver,\\n                seedToken.balanceOf(address(this))\\n            );\\n        } else {\\n            // seed tokens to transfer = balance of seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = seedAmountRequired - seedRemainder;\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this)) -\\n                totalSeedDistributed;\\n            seedToken.safeTransfer(_refundReceiver, amountToTransfer);\\n        }\\n    }\\n\\n    //ToDo: add header\\n    function _whitelist(address _buyer, uint8 _class) internal {\\n        whitelisted[_buyer] = true;\\n        funders[_buyer].class = _class;\\n    }\\n\\n    /**\\n     * @dev                     Add address to whitelist.\\n     * @param _buyer            Address which needs to be whitelisted\\n     * @param _class            Class to which buyer will be assigned\\n     */\\n    function whitelist(address _buyer, uint8 _class) external onlyAdmin {\\n        require(_class < classes.length, \\\"Seed: incorrect class chosen\\\");\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        _whitelist(_buyer, _class);\\n    }\\n\\n    /**\\n     * @dev                     Add multiple addresses to whitelist.\\n     * @param _buyers           Array of addresses to whitelist addresses in batch\\n     * @param _classes          Array of classes assigned in batch\\n     */\\n    function whitelistBatch(address[] memory _buyers, uint8[] memory _classes)\\n        external\\n        onlyAdmin\\n    {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\n            require(\\n                _classes[i] < classes.length,\\n                \\\"Seed: incorrect class chosen\\\"\\n            );\\n            _whitelist(_buyers[i], _classes[i]);\\n            // whitelisted[_buyers[i]] = true;\\n            // funders[_buyers[i]].class = _classes[i];\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Remove address from whitelist.\\n     * @param buyer             Address which needs to be unwhitelisted\\n     */\\n    function unwhitelist(address buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[buyer] = false;\\n    }\\n\\n    /**\\n     * @dev                     Withdraw funds from the contract\\n     */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached || (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        fundingWithdrawn = fundingCollected;\\n        // Send the entire seed contract balance of the funding token to the sale\\u2019s admin\\n        fundingToken.safeTransfer(\\n            msg.sender,\\n            fundingToken.balanceOf(address(this))\\n        );\\n    }\\n\\n    /**\\n     * @dev                     Updates metadata.\\n     * @param _metadata         Seed contract metadata, that is IPFS Hash\\n     */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n     * @dev                     Calculates the maximum claim\\n     * @param _funder           Address of funder to find the maximum claim\\n     */\\n    function calculateClaim(address _funder) public view returns (uint256) {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n        uint8 currentId = tokenFunder.class;\\n        ContributorClass memory claimed = classes[currentId];\\n        // uint256 currentClassVestingStartTime = claimed.classVestingStartTime;\\n\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n        if (elapsedSeconds < claimed.vestingCliff) {\\n            return 0;\\n        }\\n\\n        uint256 currentVestingDuration = claimed.vestingDuration;\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= currentVestingDuration) {\\n            return seedAmountForFunder(_funder) - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds *\\n                seedAmountForFunder(_funder)) / currentVestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    function getAllClasses() external {}\\n\\n    // /**\\n    //  * @dev                     get fee claimed for funder\\n    //  * @param _funder           address of funder to check fee claimed\\n    //  */\\n    // function feeClaimedForFunder(address _funder)\\n    //     external\\n    //     view\\n    //     returns (uint256)\\n    // {\\n    //     FunderPortfolio memory tokenFunder = funders[_funder];\\n    //     uint8 currentId = tokenFunder.class;\\n    //     uint256 currentFee = classes[currentId].classFee;\\n\\n    //     return (funders[_funder].totalClaimed * currentFee) / PRECISION;\\n    // }\\n\\n    // /**\\n    //  * @dev                     get fee for funder\\n    //  * @param _funder           address of funder to check fee\\n    //  */\\n    // function feeForFunder(address _funder) public view returns (uint256) {\\n    //     FunderPortfolio memory tokenFunder = funders[_funder];\\n    //     uint8 currentId = tokenFunder.class;\\n    //     uint256 currentFee = classes[currentId].classFee;\\n\\n    //     return (seedAmountForFunder(_funder) * currentFee) / PRECISION;\\n    // }\\n\\n    /**\\n     * @dev                     get seed amount for funder\\n     * @param _funder           address of funder to seed amount\\n     */\\n    function seedAmountForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].fundingAmount * PRECISION) / price;\\n    }\\n}\\n\",\"keccak256\":\"0x75b2d36d8e76ad844afd8a53528f7c28043989174bf43507a2fa20ae90b843d0\",\"license\":\"GPL-3.0\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"openzeppelin-contracts-sol8/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613933806100206000396000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c80637bc974031161019d578063bc0f5f84116100e9578063e7b88e0f116100a2578063f851a4401161007c578063f851a44014610654578063fb86a40414610667578063fc582d4114610670578063fd3cfafd1461068357600080fd5b8063e7b88e0f1461061b578063ea3455401461062e578063ec11d7261461064157600080fd5b8063bc0f5f84146105a1578063c210b92d146105aa578063d936547e146105bd578063d96a094a146105e0578063dc4b9e38146105f3578063e565eb4c1461060657600080fd5b8063906a26e011610156578063a035b1fe11610130578063a035b1fe14610573578063a8660a781461057c578063aad3ec9614610585578063b774682f1461059857600080fd5b8063906a26e014610544578063913f962c1461054d5780639a5904271461056057600080fd5b80637bc97403146104c55780637c654303146104d8578063817dbe9f146104eb57806383d59e001461052b5780638456cb59146105345780638a2448aa1461053c57600080fd5b80633dba9e411161025c5780635e9777e81161021557806371f4b8e8116101ef57806371f4b8e81461049757806376f210c9146104a057806378065f27146104a957806378e97925146104bc57600080fd5b80635e9777e81461047b5780636bda75dd146103605780636dae16ee1461048457600080fd5b80633dba9e41146104365780633f4ba83a1461044357806343d726d61461044b57806347d02f1b14610453578063597e1fb51461045c5780635c975abb1461046957600080fd5b80632aef2259116102ae5780632aef2259146103ba578063311f8483146103cd5780633197cbb6146103fd57806338af3eed14610406578063392f37e9146104195780633ccfd60b1461042e57600080fd5b8063031b3677146102f657806303aabe311461034d5780630826d2c714610362578063117a36d114610379578063158ef93e1461039d5780631cfe562e146103b1575b600080fd5b610329610304366004612fa5565b60186020526000908152604090208054600182015460029092015460ff909116919083565b6040805160ff90941684526020840192909252908201526060015b60405180910390f35b61036061035b366004612fa5565b610696565b005b61036b600e5481565b604051908152602001610344565b600c5461038d90600160281b900460ff1681565b6040519015158152602001610344565b600c5461038d906301000000900460ff1681565b61036b60115481565b6103606103c8366004612fd1565b6109e5565b6009546103e59061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610344565b61036b60075481565b6000546103e5906001600160a01b031681565b610421610a8b565b604051610344919061305c565b610360610b19565b60095461038d9060ff1681565b610360610c9a565b610360610d4f565b61036b600f5481565b600c5461038d9060ff1681565b600c5461038d90610100900460ff1681565b61036b600d5481565b610360610492366004613145565b610dac565b61036b60135481565b61036b60055481565b600a546103e5906001600160a01b031681565b61036b60065481565b6103606104d3366004613279565b610fbd565b600c5461038d9062010000900460ff1681565b6104fe6104f936600461333b565b611092565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610344565b61036b60125481565b6103606110d8565b61036b61118e565b61036b60025481565b61036061055b366004612fd1565b61138f565b61036061056e366004612fa5565b61144e565b61036b60145481565b61036b60085481565b610360610593366004613354565b6114e3565b61036b60105481565b61036b60045481565b6103606105b836600461337e565b6117aa565b61038d6105cb366004612fa5565b60176020526000908152604090205460ff1681565b61036b6105ee36600461333b565b6117e8565b61036b610601366004612fa5565b611e63565b600c5461038d90640100000000900460ff1681565b610360610629366004613279565b611ea8565b61036b61063c366004612fa5565b611fb5565b61036061064f3660046133d2565b612116565b6001546103e5906001600160a01b031681565b61036b60035481565b61036061067e366004613506565b612697565b61036061069136600461359b565b612791565b6001546001600160a01b031633146106c95760405162461bcd60e51b81526004016106c0906135e5565b60405180910390fd5b600c5460ff16806106e35750600c54600160281b900460ff165b806106f057506007544210155b6107935760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c4016106c0565b600c54640100000000900460ff1661091f576009546040516370a0823160e01b815230600482015260009161010090046001600160a01b0316906370a082319060240160206040518083038186803b1580156107ee57600080fd5b505afa158015610802573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610826919061361c565b1161087f5760405162461bcd60e51b815260206004820152602360248201527f536565643a204661696c656420746f207472616e73666572205365656420546f60448201526235b2b760e91b60648201526084016106c0565b6009546040516370a0823160e01b815230600482015261091c9183916101009091046001600160a01b0316906370a082319060240160206040518083038186803b1580156108cc57600080fd5b505afa1580156108e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610904919061361c565b60095461010090046001600160a01b031691906129b3565b50565b6000600e54600454610931919061364b565b6009546040516370a0823160e01b8152306004820152919250600091839161010090046001600160a01b0316906370a082319060240160206040518083038186803b15801561097f57600080fd5b505afa158015610993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b7919061361c565b6109c1919061364b565b6009549091506109e09061010090046001600160a01b031684836129b3565b505050565b6001546001600160a01b03163314610a0f5760405162461bcd60e51b81526004016106c0906135e5565b60165460ff821610610a335760405162461bcd60e51b81526004016106c090613662565b600c5460ff1615610a565760405162461bcd60e51b81526004016106c090613699565b60095460ff161515600114610a7d5760405162461bcd60e51b81526004016106c0906136d0565b610a878282612a16565b5050565b600b8054610a9890613707565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490613707565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505081565b6001546001600160a01b03163314610b435760405162461bcd60e51b81526004016106c0906135e5565b600c54600160281b900460ff1680610b725750600c54640100000000900460ff168015610b7257506007544210155b610bfe5760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a4016106c0565b601154601255600a546040516370a0823160e01b8152306004820152610c989133916001600160a01b03909116906370a082319060240160206040518083038186803b158015610c4d57600080fd5b505afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c85919061361c565b600a546001600160a01b031691906129b3565b565b6001546001600160a01b03163314610cc45760405162461bcd60e51b81526004016106c0906135e5565b600c5460ff16151560011415610cec5760405162461bcd60e51b81526004016106c090613699565b600c5460ff610100909104161515600114610d425760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106c0565b600c805461ff0019169055565b6001546001600160a01b03163314610d795760405162461bcd60e51b81526004016106c0906135e5565b600c5460ff1615610d9c5760405162461bcd60e51b81526004016106c090613699565b600c805461ffff19166001179055565b6001546001600160a01b03163314610dd65760405162461bcd60e51b81526004016106c0906135e5565b84516064811115610e425760405162461bcd60e51b815260206004820152603060248201527f536565643a2043616e2774206164642062617463682077697468206d6f72652060448201526f7468656e2031303020636c617373657360801b60648201526084016106c0565b60165461010090610e54908390613742565b10610e715760405162461bcd60e51b81526004016106c09061375a565b845181148015610e815750835181145b8015610e8d5750825181145b8015610e995750815181145b610efb5760405162461bcd60e51b815260206004820152602d60248201527f536565643a20416c6c2070726f7669646564206172726179732073686f756c6460448201526c2062652073616d652073697a6560981b60648201526084016106c0565b60005b818160ff161015610fb457610fa2878260ff1681518110610f2157610f2161379f565b6020026020010151878360ff1681518110610f3e57610f3e61379f565b6020026020010151878460ff1681518110610f5b57610f5b61379f565b6020026020010151878560ff1681518110610f7857610f7861379f565b6020026020010151878660ff1681518110610f9557610f9561379f565b6020026020010151612a5b565b80610fac816137b5565b915050610efe565b50505050505050565b6001546001600160a01b03163314610fe75760405162461bcd60e51b81526004016106c0906135e5565b81518151146110385760405162461bcd60e51b815260206004820152601b60248201527f536565643a20696e636f7272656374206461746120706173736564000000000060448201526064016106c0565b60005b82518110156109e0576110808382815181106110595761105961379f565b60200260200101518383815181106110735761107361379f565b602002602001015161138f565b8061108a816137d5565b91505061103b565b601681815481106110a257600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501549395509193909286565b6001546001600160a01b031633146111025760405162461bcd60e51b81526004016106c0906135e5565b600c5460ff16156111255760405162461bcd60e51b81526004016106c090613699565b600c54610100900460ff161561117d5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106c0565b600c805461ff001916610100179055565b60004260065411156111ed5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106c0565b600c54640100000000900460ff16156112485760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d657460448201526064016106c0565b3360009081526018602052604090206002810154806112a95760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106c0565b6112b233611e63565b600e60008282546112c39190613742565b9091555050600d80549060006112d8836137f0565b91905055506000826002018190555080601160008282546112f9919061364b565b9091555050815460168054839260ff169081106113185761131861379f565b90600052602060002090600602016005016000828254611338919061364b565b9091555050600a54611354906001600160a01b031633836129b3565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b031633146113b95760405162461bcd60e51b81526004016106c0906135e5565b60165460ff8216106113dd5760405162461bcd60e51b81526004016106c090613662565b600c5460ff16156114005760405162461bcd60e51b81526004016106c090613699565b60065442106114215760405162461bcd60e51b81526004016106c090613807565b6001600160a01b03919091166000908152601860205260409020805460ff191660ff909216919091179055565b6001546001600160a01b031633146114785760405162461bcd60e51b81526004016106c0906135e5565b600c5460ff161561149b5760405162461bcd60e51b81526004016106c090613699565b60095460ff1615156001146114c25760405162461bcd60e51b81526004016106c0906136d0565b6001600160a01b03166000908152601760205260409020805460ff19169055565b600c54640100000000900460ff166115495760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b60648201526084016106c0565b4260075410806115625750600c54600160281b900460ff165b6115c25760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b60648201526084016106c0565b42600854106116395760405162461bcd60e51b815260206004820152603a60248201527f536565643a2076657374696e672073746172742074696d6520666f722074686960448201527f7320636c617373206973206e6f7420737461727465642079657400000000000060648201526084016106c0565b600061164483611fb5565b9050600081116116965760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106c0565b818110156116fd5760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106c0565b6001600160a01b03831660009081526018602052604081206001018054849290611728908490613742565b9250508190555081600f60008282546117419190613742565b90915550506009546117629061010090046001600160a01b031684846129b3565b826001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308360405161179d91815260200190565b60405180910390a2505050565b6001546001600160a01b031633146117d45760405162461bcd60e51b81526004016106c0906135e5565b6117e18585858585612a5b565b5050505050565b600c5460009060ff161561180e5760405162461bcd60e51b81526004016106c090613699565b600c54610100900460ff16156118665760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f742062652070617573656400000000000060448201526064016106c0565b60095460ff16158061188757503360009081526017602052604090205460ff165b6118d35760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106c0565b3360009081526018602052604081205460168054909160ff169081106118fb576118fb61379f565b90600052602060002090600602016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050600c60059054906101000a900460ff16156119af5760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106c0565b600083116119ff5760405162461bcd60e51b815260206004820152601960248201527f536565643a2063616e6e6f7420627579203020746f6b656e730000000000000060448201526064016106c0565b8060200151838260a00151611a149190613742565b1115611a6e5760405162461bcd60e51b815260206004820152602360248201527f536565643a206d6178696d756d20636c6173732066756e64696e6720726561636044820152621a195960ea1b60648201526084016106c0565b60408082015133600090815260186020529190912060020154611a92908590613742565b1115611aef5760405162461bcd60e51b815260206004820152602660248201527f536565643a206d6178696d756d20706572736f6e616c2066756e64696e672072604482015265195858da195960d21b60648201526084016106c0565b4260075410158015611b0357504260065411155b611b655760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106c0565b600c5462010000900460ff16611c6857600480546009546040516370a0823160e01b8152309381019390935290916101009091046001600160a01b0316906370a082319060240160206040518083038186803b158015611bc457600080fd5b505afa158015611bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfc919061361c565b1015611c565760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106c0565b600c805462ff00001916620100001790555b601454600090611c80670de0b6b3a76400008661383c565b611c8a919061385b565b905060035484601154611c9d9190613742565b1115611cfe5760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106c0565b8360116000828254611d109190613742565b90915550503360009081526018602052604090205460168054869260ff16908110611d3d57611d3d61379f565b90600052602060002090600602016005016000828254611d5d9190613742565b9091555050600e54611d7090829061364b565b600e5560025460115410611d9457600c805464ff0000000019166401000000001790555b60035460115410611db957600c805465ff00000000001916600160281b179055426008555b33600090815260186020526040902060020154611de657600d8054906000611de0836137d5565b91905055505b3360009081526018602052604081206002018054869290611e08908490613742565b9091555050600a54611e25906001600160a01b0316333087612c72565b60405181815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a29150505b919050565b6014546001600160a01b038216600090815260186020526040812060020154909190611e9890670de0b6b3a76400009061383c565b611ea2919061385b565b92915050565b6001546001600160a01b03163314611ed25760405162461bcd60e51b81526004016106c0906135e5565b600c5460ff1615611ef55760405162461bcd60e51b81526004016106c090613699565b60095460ff161515600114611f1c5760405162461bcd60e51b81526004016106c0906136d0565b60005b82518110156109e0576016548251839083908110611f3f57611f3f61379f565b602002602001015160ff1610611f675760405162461bcd60e51b81526004016106c090613662565b611fa3838281518110611f7c57611f7c61379f565b6020026020010151838381518110611f9657611f9661379f565b6020026020010151612a16565b80611fad816137d5565b915050611f1f565b6001600160a01b03811660009081526018602090815260408083208151606081018352815460ff168082526001830154948201949094526002909101549181019190915260168054919291849190839081106120135761201361379f565b90600052602060002090600602016040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481525050905060085442101561207f57506000949350505050565b60006008544261208f919061364b565b905081606001518110156120a95750600095945050505050565b60808201518082106120d85784602001516120c388611e63565b6120cd919061364b565b979650505050505050565b6000816120e489611e63565b6120ee908561383c565b6120f8919061385b565b905085602001518161210a919061364b565b98975050505050505050565b600c546301000000900460ff161561217b5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106c0565b600c805463ff000000191663010000001790558751889060019081106121a3576121a361379f565b60200260200101516001600160a01b0316886000815181106121c7576121c761379f565b60200260200101516001600160a01b0316141561223c5760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b60648201526084016106c0565b8660008151811061224f5761224f61379f565b60200260200101518760018151811061226a5761226a61379f565b602002602001015110156122d95760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b60648201526084016106c0565b846000815181106122ec576122ec61379f565b6020026020010151856001815181106123075761230761379f565b6020026020010151116123825760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d65000000000060648201526084016106c0565b67063eb89da4ed00008160008151811061239e5761239e61379f565b602002602001015111156124055760405162461bcd60e51b815260206004820152602860248201527f53656564466163746f72793a206665652063616e6e6f74206265206d6f7265206044820152677468616e2034352560c01b60648201526084016106c0565b600080546001600160a01b03808d166001600160a01b031992831617835560018054918d169190921617905587518891906124425761244261379f565b6020026020010151600281905550866001815181106124635761246361379f565b6020026020010151600381905550846000815181106124845761248461379f565b6020026020010151600681905550846001815181106124a5576124a561379f565b602090810291909101015160078190556008556009805460ff1916841515179055875188906000906124d9576124d961379f565b6020026020010151600960016101000a8154816001600160a01b0302191690836001600160a01b031602179055508760018151811061251a5761251a61379f565b6020908102919091010151600a80546001600160a01b0319166001600160a01b0390921691909117905560148690556000601355600354869061256690670de0b6b3a76400009061383c565b612570919061385b565b600481905550670de0b6b3a7640000816000815181106125925761259261379f565b60200260200101516004546125a7919061383c565b6125b1919061385b565b6005819055506126086000600354866000815181106125d2576125d261379f565b6020026020010151876001815181106125ed576125ed61379f565b602002602001015188600281518110610f9557610f9561379f565b60095460ff1615156001148015612620575060008251115b156126695760005b8251811015612667576126558382815181106126465761264661379f565b60200260200101516000612a16565b8061265f816137d5565b915050612628565b505b600454600e81905550600554600460008282546126869190613742565b909155505050505050505050505050565b600c546301000000900460ff16151560011415806126bf57506001546001600160a01b031633145b61273c5760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106c0565b805161274f90600b906020840190612ef5565b508060405161275e919061387d565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b6001546001600160a01b031633146127bb5760405162461bcd60e51b81526004016106c0906135e5565b60165484908490610100906127d1906001613742565b106127ee5760405162461bcd60e51b81526004016106c09061375a565b81811115801561280057506003548211155b6128455760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106c0565b60065442106128665760405162461bcd60e51b81526004016106c090613807565b600c5460ff16156128895760405162461bcd60e51b81526004016106c090613699565b600082116128a95760405162461bcd60e51b81526004016106c090613899565b60165460ff8916106128cd5760405162461bcd60e51b81526004016106c090613662565b8660168960ff16815481106128e4576128e461379f565b9060005260206000209060060201600001819055508560168960ff16815481106129105761291061379f565b9060005260206000209060060201600101819055508460168960ff168154811061293c5761293c61379f565b9060005260206000209060060201600201819055508360168960ff16815481106129685761296861379f565b9060005260206000209060060201600301819055508260168960ff16815481106129945761299461379f565b9060005260206000209060060201600401819055505050505050505050565b6040516001600160a01b0383166024820152604481018290526109e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612cb0565b6001600160a01b039190911660009081526017602090815260408083208054600160ff19918216179091556018909252909120805490911660ff909216919091179055565b6016548490849061010090612a71906001613742565b10612a8e5760405162461bcd60e51b81526004016106c09061375a565b818111158015612aa057506003548211155b612ae55760405162461bcd60e51b815260206004820152601660248201527514d959590e8818d85c1cc8185c99481a5b9d985b1a5960521b60448201526064016106c0565b6006544210612b065760405162461bcd60e51b81526004016106c090613807565b600c5460ff1615612b295760405162461bcd60e51b81526004016106c090613699565b60008211612b495760405162461bcd60e51b81526004016106c090613899565b50506040805160c0810182529586526020860194855285019283526060850191825260808501908152600060a0860181815260168054600181018255925295517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428960069092029182015593517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428a85015591517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428b840155517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428c830155517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428d82015590517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428e90910155565b6040516001600160a01b0380851660248301528316604482015260648101829052612caa9085906323b872dd60e01b906084016129df565b50505050565b6000612d05826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d829092919063ffffffff16565b8051909150156109e05780806020019051810190612d2391906138e0565b6109e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106c0565b6060612d918484600085612d9b565b90505b9392505050565b606082471015612dfc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106c0565b6001600160a01b0385163b612e535760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106c0565b600080866001600160a01b03168587604051612e6f919061387d565b60006040518083038185875af1925050503d8060008114612eac576040519150601f19603f3d011682016040523d82523d6000602084013e612eb1565b606091505b50915091506120cd82828660608315612ecb575081612d94565b825115612edb5782518084602001fd5b8160405162461bcd60e51b81526004016106c0919061305c565b828054612f0190613707565b90600052602060002090601f016020900481019282612f235760008555612f69565b82601f10612f3c57805160ff1916838001178555612f69565b82800160010185558215612f69579182015b82811115612f69578251825591602001919060010190612f4e565b50612f75929150612f79565b5090565b5b80821115612f755760008155600101612f7a565b80356001600160a01b0381168114611e5e57600080fd5b600060208284031215612fb757600080fd5b612d9482612f8e565b803560ff81168114611e5e57600080fd5b60008060408385031215612fe457600080fd5b612fed83612f8e565b9150612ffb60208401612fc0565b90509250929050565b60005b8381101561301f578181015183820152602001613007565b83811115612caa5750506000910152565b60008151808452613048816020860160208601613004565b601f01601f19169290920160200192915050565b602081526000612d946020830184613030565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156130ae576130ae61306f565b604052919050565b600067ffffffffffffffff8211156130d0576130d061306f565b5060051b60200190565b600082601f8301126130eb57600080fd5b813560206131006130fb836130b6565b613085565b82815260059290921b8401810191818101908684111561311f57600080fd5b8286015b8481101561313a5780358352918301918301613123565b509695505050505050565b600080600080600060a0868803121561315d57600080fd5b853567ffffffffffffffff8082111561317557600080fd5b61318189838a016130da565b9650602088013591508082111561319757600080fd5b6131a389838a016130da565b955060408801359150808211156131b957600080fd5b6131c589838a016130da565b945060608801359150808211156131db57600080fd5b6131e789838a016130da565b935060808801359150808211156131fd57600080fd5b5061320a888289016130da565b9150509295509295909350565b600082601f83011261322857600080fd5b813560206132386130fb836130b6565b82815260059290921b8401810191818101908684111561325757600080fd5b8286015b8481101561313a5761326c81612f8e565b835291830191830161325b565b6000806040838503121561328c57600080fd5b823567ffffffffffffffff808211156132a457600080fd5b6132b086838701613217565b93506020915081850135818111156132c757600080fd5b85019050601f810186136132da57600080fd5b80356132e86130fb826130b6565b81815260059190911b8201830190838101908883111561330757600080fd5b928401925b8284101561332c5761331d84612fc0565b8252928401929084019061330c565b80955050505050509250929050565b60006020828403121561334d57600080fd5b5035919050565b6000806040838503121561336757600080fd5b61337083612f8e565b946020939093013593505050565b600080600080600060a0868803121561339657600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b801515811461091c57600080fd5b8035611e5e816133b9565b6000806000806000806000806000806101408b8d0312156133f257600080fd5b6133fb8b612f8e565b995061340960208c01612f8e565b985060408b013567ffffffffffffffff8082111561342657600080fd5b6134328e838f01613217565b995060608d013591508082111561344857600080fd5b6134548e838f016130da565b985060808d0135975060a08d013591508082111561347157600080fd5b61347d8e838f016130da565b965060c08d013591508082111561349357600080fd5b61349f8e838f016130da565b95506134ad60e08e016133c7565b94506101008d01359150808211156134c457600080fd5b6134d08e838f01613217565b93506101208d01359150808211156134e757600080fd5b506134f48d828e016130da565b9150509295989b9194979a5092959850565b6000602080838503121561351957600080fd5b823567ffffffffffffffff8082111561353157600080fd5b818501915085601f83011261354557600080fd5b8135818111156135575761355761306f565b613569601f8201601f19168501613085565b9150808252868482850101111561357f57600080fd5b8084840185840137600090820190930192909252509392505050565b60008060008060008060c087890312156135b457600080fd5b6135bd87612fc0565b9860208801359850604088013597606081013597506080810135965060a00135945092505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b60006020828403121561362e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561365d5761365d613635565b500390565b6020808252601c908201527f536565643a20696e636f727265637420636c6173732063686f73656e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b600181811c9082168061371b57607f821691505b6020821081141561373c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561375557613755613635565b500190565b60208082526025908201527f536565643a2063616e277420616464206d6f7265207468656e2032353620636c604082015264617373657360d81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156137cc576137cc613635565b60010192915050565b60006000198214156137e9576137e9613635565b5060010190565b6000816137ff576137ff613635565b506000190190565b6020808252818101527f536565643a2076657374696e6720697320616c72656164792073746172746564604082015260600190565b600081600019048311821515161561385657613856613635565b500290565b60008261387857634e487b7160e01b600052601260045260246000fd5b500490565b6000825161388f818460208701613004565b9190910192915050565b60208082526027908201527f536565643a20636c617373204361702073686f756c64206265206269676765726040820152660207468656e20360cc1b606082015260800190565b6000602082840312156138f257600080fd5b8151612d94816133b956fea26469706673582212202b009bebd10edcdc21b137a73348d7f9d8ebbc679e294e1478af17b6bd73b1e964736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "addClass(bytes32,uint256,uint256,uint256,uint256)": {
        "details": "Add contributor class.",
        "params": {
          "_classCap": "The total cap of the contributor class, denominated in Wei.",
          "_className": "The name of the class",
          "_individualCap": "The personal cap of each contributor in this class, denominated in Wei.",
          "_vestingCliff": "The cliff duration, denominated in seconds.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "addClassBatch(bytes32[],uint256[],uint256[],uint256[],uint256[])": {
        "details": "Add contributor class batch.",
        "params": {
          "_classCaps": "The total caps of the contributor class, denominated in Wei",
          "_classNames": "Array of the names of the classes",
          "_individualCaps": "The personal caps of each contributor in this class, denominated in Wei.",
          "_vestingCliffs": "The cliff duration, denominated in seconds.",
          "_vestingDurations": "The vesting durations for this contributors class."
        }
      },
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "changeClass(uint8,bytes32,uint256,uint256,uint256,uint256)": {
        "details": "Change parameters in the class.",
        "params": {
          "_class": "Class for changing.",
          "_classCap": "The total cap of the contributor class, denominated in Wei.",
          "_className": "The name of the class",
          "_individualCap": "The personal cap of each contributor in this class, denominated in Wei.",
          "_vestingCliff": "The cliff duration, denominated in seconds.",
          "_vestingDuration": "The vesting duration for this contributors class."
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist."
      },
      "initialize(address,address,address[],uint256[],uint256,uint256[],uint256[],bool,address[],uint256[])": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_defaultClassParameters": "Array containing three params: - Individual buying cap for de default class, expressed in precision 10*18 - Cliff duration, denominated in seconds. - Vesting period duration, denominated in seconds.",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "Price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTimeAndEndTime": "Array containing two params: - Distribution start time in unix timecode. - Distribution end time in unix timecode.",
          "_tipping": "Array of containing three parameters: - Total amount of tipping percentage expressed as a % (e.g. 45 / 100 * 10**18 = 45% fee, 10**16 = 1%) - Tipping vesting period duration denominated in seconds.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t - Tipping cliff duration denominated in seconds.\t",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                     - The address of the funding token being exchanged for seed token.",
          "_whitelistAddresses": "Array of addresses to be whitelisted for the default class, at creation time"
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "setClass(address,uint8)": {
        "details": "Set contributor class.",
        "params": {
          "_address": "Address of the contributor.",
          "_class": "Class of the contributor."
        }
      },
      "setClassBatch(address[],uint8[])": {
        "details": "Set contributor classes.",
        "params": {
          "_addresses": "Addresses of the contributors.",
          "_classes": "Classes of the contributor."
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "unwhitelist(address)": {
        "details": "Remove address from whitelist.",
        "params": {
          "buyer": "Address which needs to be unwhitelisted"
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address,uint8)": {
        "details": "Add address to whitelist.",
        "params": {
          "_buyer": "Address which needs to be whitelisted",
          "_class": "Class to which buyer will be assigned"
        }
      },
      "whitelistBatch(address[],uint8[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch",
          "_classes": "Array of classes assigned in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1025,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1027,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1029,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1031,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1033,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1035,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "tippingAmount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1037,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1039,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1041,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1043,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 1046,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 1,
        "slot": "9",
        "type": "t_contract(IERC20)12041"
      },
      {
        "astId": 1049,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IERC20)12041"
      },
      {
        "astId": 1051,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "11",
        "type": "t_bytes_storage"
      },
      {
        "astId": 1068,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1070,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1072,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1074,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1076,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1078,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 1080,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1082,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 1084,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 1086,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeRemainder",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 1088,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1090,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1092,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeClaimed",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1094,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1096,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fee",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 1100,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "classes",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_struct(ContributorClass)1151_storage)dyn_storage"
      },
      {
        "astId": 1104,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1109,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)1138_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ContributorClass)1151_storage)dyn_storage": {
        "base": "t_struct(ContributorClass)1151_storage",
        "encoding": "dynamic_array",
        "label": "struct Seed.ContributorClass[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)12041": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)1138_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)1138_storage"
      },
      "t_struct(ContributorClass)1151_storage": {
        "encoding": "inplace",
        "label": "struct Seed.ContributorClass",
        "members": [
          {
            "astId": 1140,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "className",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 1142,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classCap",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1144,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "individualCap",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1146,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingCliff",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1148,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "vestingDuration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1150,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "classFundingCollected",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(FunderPortfolio)1138_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 1133,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "class",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1135,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1137,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}